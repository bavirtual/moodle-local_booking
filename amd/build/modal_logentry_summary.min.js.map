{"version":3,"sources":["../src/modal_logentry_summary.js"],"names":["define","$","Str","Notification","CustomEvents","Modal","ModalRegistry","ModalFactory","ModalEvents","BookingEvents","BookingActions","registered","SELECTORS","ROOT","EDIT_BUTTON","DELETE_BUTTON","FEEDBACK_BUTTON","ModalLogentrySummary","root","call","TYPE","prototype","Object","create","constructor","getFeedbackButton","feedbackButton","getFooter","find","getEditButton","editButton","getDeleteButton","deleteButton","getLogentryId","getBody","attr","getStudentId","getLogentryTitle","registerEventListeners","M","util","js_pending","getRoot","on","bodyRendered","getModal","data","logentryTitle","logentryId","registerDelete","registerRedirect","js_complete","bind","deleted","hide","gotoFeedback","events","activate","e","trigger","editLogentry","preventDefault","stopPropagation","originalEvent","register"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle summary modal.\n * Improvised from core_calendar.\n *\n * @module     local_booking/modal_logentry_summary\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'core/modal_factory',\n    'core/modal_events',\n    'local_booking/events',\n    'local_booking/booking_actions',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    ModalFactory,\n    ModalEvents,\n    BookingEvents,\n    BookingActions\n) {\n\n    var registered = false;\n    var SELECTORS = {\n        ROOT: \"[data-region='summary-modal-container']\",\n        EDIT_BUTTON: '[data-action=\"edit\"]',\n        DELETE_BUTTON: '[data-action=\"delete\"]',\n        FEEDBACK_BUTTON: '[data-action=\"feedback\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalLogentrySummary = function(root) {\n        Modal.call(this, root);\n    };\n\n    ModalLogentrySummary.TYPE = 'local_booking-logentry_summary';\n    ModalLogentrySummary.prototype = Object.create(Modal.prototype);\n    ModalLogentrySummary.prototype.constructor = ModalLogentrySummary;\n\n    /**\n     * Get the feedback button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getFeedbackButton\n     * @return {object} button element\n     */\n     ModalLogentrySummary.prototype.getFeedbackButton = function() {\n        if (typeof this.feedbackButton == 'undefined') {\n            this.feedbackButton = this.getFooter().find(SELECTORS.FEEDBACK_BUTTON);\n        }\n\n        return this.feedbackButton;\n    };\n\n    /**\n     * Get the edit button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getEditButton\n     * @return {object} button element\n     */\n    ModalLogentrySummary.prototype.getEditButton = function() {\n        if (typeof this.editButton == 'undefined') {\n            this.editButton = this.getFooter().find(SELECTORS.EDIT_BUTTON);\n        }\n\n        return this.editButton;\n    };\n\n    /**\n     * Get the delete button element from the footer. The button is cached\n     * as it's not expected to change.\n     *\n     * @method getDeleteButton\n     * @return {object} button element\n     */\n    ModalLogentrySummary.prototype.getDeleteButton = function() {\n        if (typeof this.deleteButton == 'undefined') {\n            this.deleteButton = this.getFooter().find(SELECTORS.DELETE_BUTTON);\n        }\n\n        return this.deleteButton;\n    };\n\n    /**\n     * Get the id for the logbook entry being shown in this modal. This value is\n     * not cached because it will change depending on which logbook entry is\n     * being displayed.\n     *\n     * @method getLogentryId\n     * @return {int}\n     */\n    ModalLogentrySummary.prototype.getLogentryId = function() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-logentry-id');\n    };\n\n    /**\n     * Get the id for the logbook entry being shown in this modal. This value is\n     * not cached because it will change depending on which logbook entry is\n     * being displayed.\n     *\n     * @method getStudentId\n     * @return {int}\n     */\n     ModalLogentrySummary.prototype.getStudentId = function() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-student-id');\n    };\n\n    /**\n     * Get the title for the logentry being shown in this modal. This value is\n     * not cached because it will change depending on which logentry is\n     * being displayed.\n     *\n     * @method getLogentryTitle\n     * @return {String}\n     */\n     ModalLogentrySummary.prototype.getLogentryTitle = function() {\n        return this.getBody().find(SELECTORS.ROOT).attr('data-logentry-title');\n    };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalLogentrySummary.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        // We have to wait for the modal to finish rendering in order to ensure that\n        // the data-logentry-id property is available to use in the modal.\n        M.util.js_pending('local_booking/modal_logentry_summary:registerEventListeners:bodyRendered');\n        this.getRoot().on(ModalEvents.bodyRendered, function() {\n            this.getModal().data({\n                logentryTitle: this.getLogentryTitle(),\n                logentryId: this.getLogentryId(),\n            })\n            .attr('data-type', 'logentry');\n            BookingActions.registerDelete(this.getModal());\n            BookingActions.registerRedirect(this.getModal());\n            M.util.js_complete('local_booking/modal_logentry_summary:registerEventListeners:bodyRendered');\n        }.bind(this));\n\n        $('body').on(BookingEvents.deleted, function() {\n            // Close the dialogue on delete.\n            this.hide();\n        }.bind(this));\n\n        $('body').on(BookingEvents.gotoFeedback, function() {\n            // Close the dialogue before going to the feedback page.\n            this.hide();\n        }.bind(this));\n\n        CustomEvents.define(this.getEditButton(), [\n            CustomEvents.events.activate\n        ]);\n\n        this.getEditButton().on(CustomEvents.events.activate, function(e, data) {\n            // When the edit button is clicked we fire an event for the booking UI to handle edit.\n            $('body').trigger(BookingEvents.editLogentry, [this.getLogentryId(), this.getStudentId()]);\n\n            // There is nothing else for us to do so let's hide.\n            this.hide();\n\n            // We've handled this event so no need to propagate it.\n            e.preventDefault();\n            e.stopPropagation();\n            data.originalEvent.preventDefault();\n            data.originalEvent.stopPropagation();\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalLogentrySummary.TYPE, ModalLogentrySummary, 'local_booking/logentry_summary_modal');\n        registered = true;\n    }\n\n    return ModalLogentrySummary;\n});\n"],"file":"modal_logentry_summary.min.js"}