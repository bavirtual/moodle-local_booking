{"version":3,"sources":["../src/booking.js"],"names":["define","$","Templates","Notification","Repository","ViewManager","BookingSelectors","SELECTORS","CANCEL_BUTTON","LOADING_ICON_CONTAINER","BOOKING","LOADING_ICON","BOOKING_WRAPPER","registerEventListeners","root","on","e","startLoading","target","category","find","data","course","booking","dataset","cancelBooking","then","response","validationerror","alert","bind","always","fetchNotifications","stopLoading","refreshBookingsContent","fail","exception","loadingIconContainer","containers","loadingIcon","addClass","init"],"mappings":"AAwBAA,OAAM,yBAAC,CACK,QADL,CAEK,gBAFL,CAGK,mBAHL,CAIK,0BAJL,CAKK,4BALL,CAMK,yBANL,CAAD,CAQE,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CANJ,CAOE,IAEFC,CAAAA,CAAS,CAAG,CACZC,aAAa,CAAE,+BADH,CAEZC,sBAAsB,CAAE,0CAFZ,CAGZC,OAAO,CAAE,8BAHG,CAIZC,YAAY,CAAE,eAJF,CAKZC,eAAe,CAAE,iBALL,CAFV,CAeFC,CAAsB,CAAG,SAASC,CAAT,CAAe,CAExCA,CAAI,CAACC,EAAL,CAAQ,OAAR,CAAiBR,CAAS,CAACC,aAA3B,CAA0C,SAASQ,CAAT,CAAY,CAClDX,CAAW,CAACY,YAAZ,CAAyBH,CAAzB,EADkD,GAG9CI,CAAAA,CAAM,CAAGF,CAAC,CAACE,MAHmC,CAK5CC,CAAQ,CAAGL,CAAI,CAACM,IAAL,CAAUb,CAAS,CAACK,eAApB,EAAqCS,IAArC,CAA0C,YAA1C,CALiC,CAM5CC,CAAM,CAAGR,CAAI,CAACM,IAAL,CAAUb,CAAS,CAACK,eAApB,EAAqCS,IAArC,CAA0C,UAA1C,CANmC,CAO5CE,CAAO,CAAGL,CAAM,CAACM,OAAP,CAAeD,OAPmB,CASlD,MAAOnB,CAAAA,CAAU,CAACqB,aAAX,CAAyBH,CAAzB,CAAiCC,CAAjC,EACFG,IADE,CACG,SAASC,CAAT,CAAmB,CACrB,GAAIA,CAAQ,CAACC,eAAb,CAA8B,CAE1BC,KAAK,CAAC,+CAAD,CACR,CAEJ,CANK,CAOLC,IAPK,CAOA,IAPA,CADH,EASFC,MATE,CASK,UAAW,CACf5B,CAAY,CAAC6B,kBAAb,GACA3B,CAAW,CAAC4B,WAAZ,CAAwBnB,CAAxB,EACpBe,KAAK,CAAC,uBAAyBN,CAA1B,CAAL,CACoB,MAAOlB,CAAAA,CAAW,CAAC6B,sBAAZ,CAAmCpB,CAAnC,CAAyCQ,CAAzC,CAAiDH,CAAjD,CACV,CALO,CAMPW,IANO,CAMF,IANE,CATL,EAgBFK,IAhBE,CAgBGhC,CAAY,CAACiC,SAhBhB,CAiBV,CA1BD,EA6BA,GAAMC,CAAAA,CAAoB,CAAGvB,CAAI,CAACM,IAAL,CAAUd,CAAgB,CAACgC,UAAjB,CAA4BC,WAAtC,CAA7B,CACAF,CAAoB,CAACG,QAArB,CAA8B,QAA9B,CAEH,CAjDK,CAmDN,MAAO,CACHC,IAAI,CAAE,cAAS3B,CAAT,CAAe,CACjBA,CAAI,CAAGb,CAAC,CAACa,CAAD,CAAR,CACAD,CAAsB,CAACC,CAAD,CACzB,CAJE,CAMV,CAxEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Session Booking Plugin\n *\n * @package    local_booking\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n            'jquery',\n            'core/templates',\n            'core/notification',\n            'local_booking/repository',\n            'local_booking/view_manager',\n            'local_booking/selectors',\n        ],\n        function(\n            $,\n            Templates,\n            Notification,\n            Repository,\n            ViewManager,\n            BookingSelectors,\n        ) {\n\n    var SELECTORS = {\n        CANCEL_BUTTON: \"[data-region='cancel-button']\",\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n        BOOKING: \"[data-region='booking-info']\",\n        LOADING_ICON: '.loading-icon',\n        BOOKING_WRAPPER: \".bookingwrapper\",\n    };\n\n    /**\n     * Register event listeners for the module.\n     *\n     * @param {object} root The calendar root element\n     */\n    var registerEventListeners = function(root) {\n        // Listen the click on the Cancel booking buttons.\n        root.on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n            ViewManager.startLoading(root);\n\n            var target = e.target;\n            // Get exercise id and the user id from the URL\n            const category = root.find(SELECTORS.BOOKING_WRAPPER).data('categoryid');\n            const course = root.find(SELECTORS.BOOKING_WRAPPER).data('courseid');\n            const booking = target.dataset.booking;\n            // Send the form data to the server for processing.\n            return Repository.cancelBooking(course, booking)\n                .then(function(response) {\n                    if (response.validationerror) {\n                        // eslint-disable-next-line no-alert\n                        alert('Errors encountered: Unable to cancel booking!');\n                    }\n                    return;\n                }\n                .bind(this))\n                .always(function() {\n                    Notification.fetchNotifications();\n                    ViewManager.stopLoading(root);\nalert('cancelling booking::' + booking);\n                    return ViewManager.refreshBookingsContent(root, course, category);\n                }\n                .bind(this))\n                .fail(Notification.exception);\n        });\n\n        // Remove loading\n        const loadingIconContainer = root.find(BookingSelectors.containers.loadingIcon);\n        loadingIconContainer.addClass('hidden');\n\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"booking.min.js"}