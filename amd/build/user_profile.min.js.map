{"version":3,"sources":["../src/user_profile.js"],"names":["define","$","Str","Notification","Repository","Selectors","setEndorsement","courseId","userId","endorse","root","userProfile","find","userprofilewrapper","endorser","data","endorsedate","Date","toDateString","endorsestr","endorsemsgPromise","get_string","then","message","html","bind","fail","exception","processUserPreference","prop","preference","value","element","updateUserPreferences","always","fetchNotifications","ex","processSuspendedStatus","suspend","updateSuspendedStatus","processGroup","key","group","updateGroup","processSetting","startLoading","stopLoading","registerEventListeners","click","checked","loadingIconContainer","containers","loadingIcon","removeClass","addClass","init"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Controls the message preference page.\n *\n * @module     local_booking/administration\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'local_booking/repository',\n    'local_booking/selectors'\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    Repository,\n    Selectors\n) {\n\n    /**\n     * Set the endorsed message.\n     *\n     * @param  {string} courseId    The course id for suspension.\n     * @param  {string} userId      The user id to be suspended.\n     * @param  {string} endorse     Endorse true/false.\n     * @param  {object} root        The root element.\n     * @method setEndorsement\n     */\n     const setEndorsement = function(courseId, userId, endorse, root) {\n        // Get endorsement information (endorser, date, and message) from template\n        let userProfile = root.find(Selectors.userprofilewrapper),\n        endorser = userProfile.data('endorser'),\n        endorsedate = (new Date()).toDateString(),\n        endorsestr = endorse ? 'endorsementmgs' : 'skilltestendorse';\n\n        // Process endorsement message\n        let endorsemsgPromise = Str.get_string(endorsestr, 'local_booking', {endorser: endorser, endorsedate: endorsedate});\n        endorsemsgPromise.then(function(message) {\n            // Set endorsement message\n            $('#endorsement-label').html(message);\n            return message;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        // Persist endorsement in user preferences\n        processUserPreference('endorse', endorse, courseId, userId, 'endorse');\n        processUserPreference('endorser', endorse ? endorser : '', courseId, userId, 'endorse');\n        processUserPreference('endorsedate', endorse ? endorsedate : '', courseId, userId, 'endorse');\n\n        // Set Skill Form button status\n        $('#skillform').prop('disabled', !endorse);\n    };\n\n    /**\n     * Process the user setting preference depending on the passed\n     * preference and value pairs.\n     *\n     * @param  {string} preference  The  preferencekey of the setting.\n     * @param  {string} value       The value data.\n     * @param  {string} courseId    The course id for suspension.\n     * @param  {string} userId      The user id to be suspended.\n     * @param  {string} element     The element to handl GUI.\n     * @method processUserPreference\n     * @return {bool}\n     */\n     const processUserPreference = function(preference, value, courseId, userId, element) {\n        return Repository.updateUserPreferences(preference, value, courseId, userId)\n        .then()\n        .always(function() {\n            Notification.fetchNotifications();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            // Handle toggle failure\n            $('#' + element).prop('checked', !$('#' + element).prop('checked'));\n            return;\n        });\n    };\n\n    /**\n     * Process the user suspension status.\n     *\n     * @param  {bool}   suspend     Suspend true/false.\n     * @param  {string} courseId    The course id for suspension.\n     * @param  {string} userId      The user id to be suspended.\n     * @method processSuspendedStatus\n     * @return {bool}\n     */\n     const processSuspendedStatus = function(suspend, courseId, userId) {\n        return Repository.updateSuspendedStatus(suspend, courseId, userId)\n        .then()\n        .always(function() {\n            Notification.fetchNotifications();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            // Handle toggle failure\n            $('#suspended').prop('checked', !$('#suspended').prop('checked'));\n            return;\n        });\n    };\n\n    /**\n     * Process the user group membership status on-hold and keep active.\n     *\n     * @param  {string} key         The key of the setting.\n     * @param  {string} value      Join or leave true/false.\n     * @param  {string} courseId    The course id for suspension.\n     * @param  {string} userId      The user id to be suspended.\n     * @param  {object} root        The root element.\n     * @method processGroup\n     * @return {bool}\n     */\n     const processGroup = function(key, value, courseId, userId, root) {\n        // Get the group name from the template\n        let userProfile = root.find(Selectors.userprofilewrapper),\n        group = userProfile.data(key + 'group');\n\n        return Repository.updateGroup(group, value, courseId, userId)\n        .then()\n        .always(function() {\n            Notification.fetchNotifications();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            // Handle toggle failure\n            $('#' + key).prop('checked', !$('#' + key).prop('checked'));\n            return;\n        });\n    };\n\n    /**\n     * Create all of the event listeners for the message preferences page.\n     *\n     * @param  {string} courseId    The course id for suspension.\n     * @param  {string} userId      The user id to be suspended.\n     * @param  {string} key         The key of the setting.\n     * @param  {string} value       Setting value.\n     * @param  {object} root        The root element.\n     * @method processSetting\n     */\n     const processSetting = function(courseId, userId, key, value, root) {\n\n        // Show progressing icon\n        startLoading($('#' + key + '-region'));\n\n        // Process the different toggle actions\n        switch (key) {\n            case 'endorse':\n                // Process student endorsement and handle UI\n                setEndorsement(courseId, userId, value, root);\n                break;\n            case 'availabilityoverride':\n                // Process availability override in user preferences and handle UI\n                processUserPreference(key, value, courseId, userId, key);\n                break;\n            case 'suspend':\n                // Toggle enrolment status suspension on/off and handle UI\n                processSuspendedStatus(value, courseId, userId);\n                break;\n            case 'onhold':\n            case 'keepactive':\n                // Process keep active in user preferences and handle UI\n                processGroup(key, value, courseId, userId, root);\n                break;\n        }\n\n        // Stop showing progressing icon\n        stopLoading($('#' + key + '-region'));\n    };\n\n    /**\n     * Create all of the event listeners for the message preferences page.\n     *\n     * @param  {object} root    The root element.\n     * @method registerEventListeners\n     */\n    const registerEventListeners = function(root) {\n\n        var userProfile = root.find(Selectors.userprofilewrapper),\n        courseId = userProfile.data('courseid'),\n        userId = userProfile.data('userid');\n\n        // Handle endorsement toggle clicks\n        $('#endorse').click(function() {\n            processSetting(courseId, userId, 'endorse', this.checked, root);\n        });\n\n        // Handle suspension toggle clicks\n        $('#suspended').click(function() {\n            processSetting(courseId, userId, 'suspend', this.checked);\n        });\n\n        // Handle on-hold toggle clicks\n        $('#onhold').click(function() {\n            processSetting(courseId, userId, 'onhold', this.checked, root);\n        });\n\n        // Handle keep active toggle clicks\n        $('#keepactive').click(function() {\n            processSetting(courseId, userId, 'keepactive', this.checked, root);\n        });\n\n        // Handle restriction override toggle clicks\n        $('#restrictionoverride').click(function() {\n            processSetting(courseId, userId, 'availabilityoverride', this.checked, root);\n        });\n    };\n\n    /**\n     * Set the element state to loading.\n     *\n     * @method  startLoading\n     * @param   {object} root The container element\n     */\n    const startLoading = (root) => {\n        const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n        loadingIconContainer.removeClass('hidden');\n    };\n\n    /**\n     * Unset the element state of loading.\n     *\n     * @method  stopLoading\n     * @param   {object} root The container element\n     */\n    const stopLoading = (root) => {\n        const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n        loadingIconContainer.addClass('hidden');\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"user_profile.min.js"}