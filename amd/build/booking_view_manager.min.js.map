{"version":3,"sources":["../src/booking_view_manager.js"],"names":["refreshBookingsContent","root","courseId","categoryId","target","filter","startLoading","template","attr","mybookingstarget","find","Selectors","mybookingswrapper","bookingwrapper","data","bookingsContext","M","util","js_pending","get","join","Repository","getBookingsData","then","context","viewingbooking","Templates","render","html","js","replaceNode","always","js_complete","stopLoading","fail","Notification","exception","renderLogentryModal","e","LogentryFormPromise","contextId","userId","logentryId","isNew","pendingPromise","Pending","modal","logegntrySession","flightDate","exerciseId","closest","actions","viewLogEntry","dataset","containers","summaryForm","setContextId","setCourseId","setUserId","setLogentryId","setExerciseId","setFlightDate","getRoot","on","ModalEvents","hidden","destroy","show","stopImmediatePropagation","resolve","catch","renderLogentrySummaryModal","getLogentryById","getEventResponse","logentry","Error","Str","get_string","logentryData","modalParams","title","type","ModalLogentrySummaryForm","TYPE","body","ModalFactory","create","loadingIconContainer","loadingIcon","removeClass","one","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry view changes.\n *\n * @module     local_booking/booking_view_manager\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalLogentrySummaryForm from 'local_booking/modal_logentry_summary';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Refresh student progression, mybookings, and myassignees content.\n *\n * @method  refreshBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} categoryId The id of the category associated with the progression view shown\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @param   {string} filter The filter to show students, inactive (including graduates), suspended, and default to active.\n * @return  {promise}\n */\nexport const refreshBookingsContent = (root, courseId, categoryId, target = null, filter = null) => {\n    startLoading(root);\n\n    const template = root.attr('data-template'),\n        mybookingstarget = root.find(Selectors.mybookingswrapper);\n    target = target || root.find(Selectors.bookingwrapper);\n    courseId = courseId || root.find(Selectors.bookingwrapper).data('courseid');\n    filter = filter || 'active';\n    var bookingsContext;\n    M.util.js_pending([root.get('id'), courseId, categoryId].join('-'));\n    return Repository.getBookingsData(courseId, filter)\n        .then((context) => {\n            context.viewingbooking = true;\n            bookingsContext = context;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .then(() => {\n            return Templates.render('local_booking/my_bookings', bookingsContext);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(mybookingstarget, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Render the logentry new/edit modal.\n *\n * @method  renderLogentryModal\n * @param   {object} root       The container element\n * @param   {object} e          The triggered event.\n * @param   {Number} LogentryFormPromise  The Logentry form promise.\n * @param   {object} target     The target element.\n * @param   {Number} contextId  The course context id of the logentry.\n * @param   {number} courseId   The graded session course id.\n * @param   {number} userId     The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @param   {bool}   isNew      Whether the render is for edit.\n * @returns {promise}\n */\n export const renderLogentryModal = (root, e, LogentryFormPromise, target, contextId, courseId, userId, logentryId, isNew) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentryModal');\n\n    return LogentryFormPromise\n    .then(function(modal) {\n        // Show the logentry form modal form when the user clicks on a session\n        // in the 'Instructor dashboard' page to add or edit a logentry\n        LogentryFormPromise.then(function(modal) {\n            var logegntrySession, flightDate, exerciseId;\n\n            // Sel elements not meant for new or additional logentries\n            if (isNew) {\n                logegntrySession = target.closest(Selectors.actions.viewLogEntry);\n                flightDate = logegntrySession.dataset.flightDate;\n                exerciseId = logegntrySession.dataset.exerciseId;\n            } else {\n                logegntrySession = root.find(Selectors.containers.summaryForm);\n                flightDate = logegntrySession.data('flight-date');\n                exerciseId = logegntrySession.data('exercise-id');\n            }\n\n            // Set form properties\n            modal.setContextId(contextId);\n            modal.setCourseId(courseId);\n            modal.setUserId(userId);\n            modal.setLogentryId(logentryId);\n            modal.setExerciseId(exerciseId);\n            modal.setFlightDate(flightDate);\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            modal.show();\n            e.stopImmediatePropagation();\n            return;\n        })\n        .fail(Notification.exception);\n        return modal;\n    })\n    .then(function(modal) {\n        pendingPromise.resolve();\n        return modal;\n    })\n    .catch(Notification.exception);\n };\n\n/**\n * Render the logentry summary modal.\n *\n * @method  renderLogentrySummaryModal\n * @param   {number} courseId The graded session course id.\n * @param   {number} userId The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @returns {promise}\n */\n export const renderLogentrySummaryModal = (courseId, userId, logentryId) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentrySummaryModal');\n\n    // Booking repository promise.\n    return Repository.getLogentryById(logentryId, courseId, userId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.logentry) {\n            throw new Error(Str.get_string('errorlogentryfetch', 'local_booking') + logentryId);\n        }\n\n        return getEventResponse.logentry;\n    })\n    .then(logentryData => {\n        // Build the modal parameters from the logentry data.\n        const modalParams = {\n            title: Str.get_string('logentry', 'local_booking'),\n            type: ModalLogentrySummaryForm.TYPE,\n            body: Templates.render('local_booking/logentry_summary_body', logentryData)\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Set the element state to loading.\n *\n * @method  startLoading\n * @param   {object} root The container element\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @method  stopLoading\n * @param   {object} root The container element\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n"],"file":"booking_view_manager.min.js"}