{"version":3,"file":"booking.min.js","sources":["../src/booking.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for registering listeners\n * for all session booking and logentry events.\n *\n * @module     local_booking/booking\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/pending',\n        'local_booking/booking_view_manager',\n        'local_booking/booking_actions',\n        'local_booking/events',\n        'local_booking/logentry_edit_modal',\n        'local_booking/selectors'\n    ],\n    function(\n        $,\n        Pending,\n        ViewManager,\n        BookingActions,\n        BookingEvents,\n        ModalLogentryEditForm,\n        Selectors\n    ) {\n\n    /**\n     * Listen to and handle any logentry events fired by\n     * Logentry and PIREP the modal forms.\n     *\n     * @method registerBookingEventListeners\n     * @param  {object} root The booking root element\n     */\n     const registerBookingEventListeners = function(root) {\n        const body = $('body');\n\n        body.on(BookingEvents.bookingcanceled, function() {\n            ViewManager.refreshBookingsContent(root);\n        });\n\n        body.on(BookingEvents.logentrycreated, function() {\n            ViewManager.refreshBookingsContent(root);\n        });\n        body.on(BookingEvents.logentryupdated, function() {\n            ViewManager.refreshBookingsContent(root);\n        });\n        body.on(BookingEvents.logentrydeleted, function() {\n            ViewManager.refreshBookingsContent(root);\n        });\n\n        // Register the listeners required to refresh students progress table based on filter\n        root.on('change', 'input[type=radio][name=studentsfilter]', function() {\n            // Call redirect to assignment feedback page\n            ViewManager.refreshBookingsContent(root, 0, 0, 0, null, $('input[name=\"studentsfilter\"]:checked').val());\n        });\n\n        // Register the listeners required to redirect to the Moodle grade page\n        root.on('click', Selectors.actions.gotoFeedback, function(e) {\n            BookingActions.gotoFeedback(root, e);\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Register event listeners for session clicks.\n     *\n     * @param {object} root The root element.\n     */\n    const registerSessionEventListeners = (root) => {\n\n        // Get promise for the logentry form for create and edit\n        const contextId = $(Selectors.wrappers.bookingwrapper).data('contextid'),\n        courseId = $(Selectors.wrappers.bookingwrapper).data('courseid');\n\n        if (contextId) {\n            // Listen the click on the progression table of sessions for a logentry (new/view).\n            root.on('click', Selectors.actions.viewLogEntry, function(e) {\n                let logentryId = $(this).attr('data-logentry-id'),\n                sessionId = $(this).attr('data-session-id'),\n                userId = $(this).attr('data-student-id');\n\n                // A logentry needs to be created or edite, show the modal form.\n                e.preventDefault();\n                // We've handled the event so stop it from bubbling\n                // and causing the day click handler to fire.\n                e.stopPropagation();\n\n                if (sessionId == 0) {\n                    BookingActions.gotoFeedback(root, e);\n                } else if (logentryId == 0) {\n                    registerLogentryEditForm(null, e, contextId, courseId, userId, logentryId, true);\n                } else {\n                    registerLogentrySummaryForm(contextId, courseId, userId, logentryId);\n                }\n                e.stopImmediatePropagation();\n            });\n        }\n    };\n\n    /**\n     * Register the form and listeners required for\n     * creating and editing logentries.\n     *\n     * @method registerLogentryEditForm\n     * @param  {object} root       The root element.\n     * @param  {object} e          The triggered event.\n     * @param  {Number} contextId  The course context id of the logentry.\n     * @param  {Number} courseId   The course id of the logentry.\n     * @param  {Number} userId     The user id the logentry belongs to.\n     * @param  {Number} logentryId The logentry id.\n     * @param  {bool}   isNew      Whether to register for edit mode.\n     */\n    const registerLogentryEditForm = (root, e, contextId, courseId, userId, logentryId, isNew) => {\n        const LogentryFormPromise = ModalLogentryEditForm.create();\n        const target = e.target;\n        const pendingPromise = new Pending('local_booking/registerLogentryEditForm');\n\n        ViewManager.renderLogentryEditForm(root, e, LogentryFormPromise, target, contextId, courseId, userId, logentryId, isNew)\n        .then(pendingPromise.resolve())\n        .catch(e);\n    };\n\n    /**\n     * Register the form and listeners required for\n     * viewing the logentry summary form.\n     *\n     * @method registerLogentrySummaryForm\n     * @param  {Number} contextId  The course context id of the logentry.\n     * @param  {Number} courseId   The course id of the logentry.\n     * @param  {Number} userId     The user id the logentry belongs to.\n     * @param  {Number} logentryId The logentry id.\n     */\n    const registerLogentrySummaryForm = (contextId, courseId, userId, logentryId) => {\n        const pendingPromise = new Pending('local_booking/registerLogentrySummaryForm');\n\n        if (logentryId) {\n            ViewManager.renderLogentrySummaryModal(courseId, userId, logentryId)\n            .then(function(modal) {\n                $('body').on(BookingEvents.editLogentry, function(e, userId, logentryId) {\n                    registerLogentryEditForm(modal.getRoot(), e, contextId, courseId, userId, logentryId);\n                    e.stopImmediatePropagation();\n                });\n                $('body').on(BookingEvents.addLogentry, function(e, userId) {\n                    registerLogentryEditForm(modal.getRoot(), e, contextId, courseId, userId, 0);\n                    e.stopImmediatePropagation();\n                });\n                return modal;\n            })\n            .then(pendingPromise.resolve())\n            .catch(window.console.error);\n        } else {\n            pendingPromise.resolve();\n        }\n    };\n\n    /**\n     * Register event listeners for logbook entry,\n     * and session cancellation in both\n     * 'Instructor dashboard' and 'Session selection' pages.\n     *\n     * @method  registerEventListeners\n     * @param   {object} root The booking root element\n     */\n     const registerEventListeners = function(root) {\n\n        // Register listeners to booking actions\n        registerBookingEventListeners(root);\n\n        // Register listeners to session click actions\n        registerSessionEventListeners(root);\n    };\n\n    return {\n        init: function(rt) {\n            var root = $(rt);\n            registerEventListeners(root);\n            ViewManager.stopLoading(root);\n        }\n    };\n});\n"],"names":["define","$","Pending","ViewManager","BookingActions","BookingEvents","ModalLogentryEditForm","Selectors","registerSessionEventListeners","root","contextId","wrappers","bookingwrapper","data","courseId","on","actions","viewLogEntry","e","logentryId","this","attr","sessionId","userId","preventDefault","stopPropagation","gotoFeedback","registerLogentryEditForm","registerLogentrySummaryForm","stopImmediatePropagation","isNew","LogentryFormPromise","create","target","pendingPromise","renderLogentryEditForm","then","resolve","catch","renderLogentrySummaryModal","modal","editLogentry","getRoot","addLogentry","window","console","error","registerEventListeners","body","bookingcanceled","refreshBookingsContent","logentrycreated","logentryupdated","logentrydeleted","val","registerBookingEventListeners","init","rt","stopLoading"],"mappings":";;;;;;;;;AAyBAA,+BAAO,CACC,SACA,eACA,qCACA,gCACA,uBACA,oCACA,4BAEJ,SACIC,EACAC,QACAC,YACAC,eACAC,cACAC,sBACAC,iBA6CEC,8BAAiCC,aAG7BC,UAAYT,EAAEM,UAAUI,SAASC,gBAAgBC,KAAK,aAC5DC,SAAWb,EAAEM,UAAUI,SAASC,gBAAgBC,KAAK,YAEjDH,WAEAD,KAAKM,GAAG,QAASR,UAAUS,QAAQC,cAAc,SAASC,OAClDC,WAAalB,EAAEmB,MAAMC,KAAK,oBAC9BC,UAAYrB,EAAEmB,MAAMC,KAAK,mBACzBE,OAAStB,EAAEmB,MAAMC,KAAK,mBAGtBH,EAAEM,iBAGFN,EAAEO,kBAEe,GAAbH,UACAlB,eAAesB,aAAajB,KAAMS,GACb,GAAdC,WACPQ,yBAAyB,KAAMT,EAAGR,UAAWI,SAAUS,OAAQJ,YAAY,GAE3ES,4BAA4BlB,UAAWI,SAAUS,OAAQJ,YAE7DD,EAAEW,+BAkBRF,yBAA2B,CAAClB,KAAMS,EAAGR,UAAWI,SAAUS,OAAQJ,WAAYW,eAC1EC,oBAAsBzB,sBAAsB0B,SAC5CC,OAASf,EAAEe,OACXC,eAAiB,IAAIhC,QAAQ,0CAEnCC,YAAYgC,uBAAuB1B,KAAMS,EAAGa,oBAAqBE,OAAQvB,UAAWI,SAAUS,OAAQJ,WAAYW,OACjHM,KAAKF,eAAeG,WACpBC,MAAMpB,IAaLU,4BAA8B,CAAClB,UAAWI,SAAUS,OAAQJ,oBACxDe,eAAiB,IAAIhC,QAAQ,6CAE/BiB,WACAhB,YAAYoC,2BAA2BzB,SAAUS,OAAQJ,YACxDiB,MAAK,SAASI,cACXvC,EAAE,QAAQc,GAAGV,cAAcoC,cAAc,SAASvB,EAAGK,OAAQJ,YACzDQ,yBAAyBa,MAAME,UAAWxB,EAAGR,UAAWI,SAAUS,OAAQJ,YAC1ED,EAAEW,8BAEN5B,EAAE,QAAQc,GAAGV,cAAcsC,aAAa,SAASzB,EAAGK,QAChDI,yBAAyBa,MAAME,UAAWxB,EAAGR,UAAWI,SAAUS,OAAQ,GAC1EL,EAAEW,8BAECW,SAEVJ,KAAKF,eAAeG,WACpBC,MAAMM,OAAOC,QAAQC,OAEtBZ,eAAeG,WAYhBU,uBAAyB,SAAStC,OAlIF,SAASA,YACtCuC,KAAO/C,EAAE,QAEf+C,KAAKjC,GAAGV,cAAc4C,iBAAiB,WACnC9C,YAAY+C,uBAAuBzC,SAGvCuC,KAAKjC,GAAGV,cAAc8C,iBAAiB,WACnChD,YAAY+C,uBAAuBzC,SAEvCuC,KAAKjC,GAAGV,cAAc+C,iBAAiB,WACnCjD,YAAY+C,uBAAuBzC,SAEvCuC,KAAKjC,GAAGV,cAAcgD,iBAAiB,WACnClD,YAAY+C,uBAAuBzC,SAIvCA,KAAKM,GAAG,SAAU,0CAA0C,WAExDZ,YAAY+C,uBAAuBzC,KAAM,EAAG,EAAG,EAAG,KAAMR,EAAE,wCAAwCqD,UAItG7C,KAAKM,GAAG,QAASR,UAAUS,QAAQU,cAAc,SAASR,GACtDd,eAAesB,aAAajB,KAAMS,GAClCA,EAAEM,oBA2GN+B,CAA8B9C,MAG9BD,8BAA8BC,aAG3B,CACH+C,KAAM,SAASC,QACPhD,KAAOR,EAAEwD,IACbV,uBAAuBtC,MACvBN,YAAYuD,YAAYjD"}