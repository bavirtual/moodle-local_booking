{"version":3,"sources":["../src/modal_logentry_form.js"],"names":["define","$","Event","Str","Notification","CustomEvents","Modal","ModalRegistry","Fragment","LogbookEvents","Repository","Selectors","registered","SELECTORS","ADVANCED_FORM","SAVE_BUTTON","LOADING_ICON_CONTAINER","ModalLogEntryForm","root","call","contextId","courseId","userId","logentryId","flightDate","exerciseId","pirepLookupId","reloadingBody","reloadingTitle","saveButton","getFooter","find","TYPE","prototype","Object","create","constructor","setContextId","id","getContextId","setCourseId","getCourseId","hasCourseId","setExerciseId","getExerciseId","hasExerciseId","setUserId","getUserId","hasUserId","setLogentryId","getLogentryId","hasLogentryId","setFlightDate","time","getFlightDate","hasFlightDate","setFlightType","flighttype","flightType","getFlightType","getForm","getBody","disableButtons","prop","enableButtons","reloadTitleContent","titlePromise","getExerciseName","then","response","exercisename","fail","exception","string","setTitle","bind","always","reloadBodyContent","formData","bodyPromise","args","userid","logentryid","flightdate","courseid","exerciseid","formdata","loadFragment","setBody","pirepdiv","parent","length","append","doDynamicDisplay","setInputMask","registerChangeListeners","bookingwrapper","data","Inputmask","mask","document","getElementById","val","pirepbutton","on","e","isNaN","getPIREPData","applyFlightTimes","passfail","flightrule","flighttime","onchange","loadingContainer","rule","pirep","removeClass","findPirep","result","get_string","addClass","d","Date","logentry","month","getMonth","day","getDate","year","getFullYear","deptime","hour","substring","minute","indexOf","linkedpirep","depicao","arricao","arrtime","callsign","aircraft","aircraftreg","enginetype","route","fstd","warnings","message","focus","show","each","insertAfter","preventDefault","stopPropagation","force","ifr","editmode","toggle","div","element","value","ariaexpanded","attr","slideDown","slideUp","setLabel","editlabelkey","labelkey","label","text","p1label","reloadAllContent","when","hide","getFormData","serialize","save","invalid","first","formArgs","submitCreateUpdateLogentryForm","validationerror","isExisting","trigger","updated","created","fetchNotifications","registerEventListeners","getModal","events","activate","submit","originalEvent","notifyFormSubmitAjax","setTimeout","register"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable complexity */\n/* eslint-disable babel/new-cap */\n/* eslint-disable no-undef */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles logbook entry form.\n *\n * @module     local_booking/modal_logentry_form\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk © 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/event',\n        'core/str',\n        'core/notification',\n        'core/custom_interaction_events',\n        'core/modal',\n        'core/modal_registry',\n        'core/fragment',\n        'local_booking/events',\n        'local_booking/repository',\n        'local_booking/selectors',\n    ],\n    function(\n        $,\n        Event,\n        Str,\n        Notification,\n        CustomEvents,\n        Modal,\n        ModalRegistry,\n        Fragment,\n        LogbookEvents,\n        Repository,\n        Selectors,\n    ) {\n\n    var registered = false;\n    var SELECTORS = {\n        ADVANCED_FORM: '[data-form-type=\"other\"]',\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalLogEntryForm = function(root) {\n        Modal.call(this, root);\n        this.contextId = null;\n        this.courseId = null;\n        this.userId = null;\n        this.logentryId = null;\n        this.flightDate = null;\n        this.exerciseId = null;\n        this.pirepLookupId = null;\n        this.reloadingBody = false;\n        this.reloadingTitle = false;\n        this.saveButton = this.getFooter().find(SELECTORS.SAVE_BUTTON);\n    };\n\n    ModalLogEntryForm.TYPE = 'local_booking-modal_logentry_form';\n    ModalLogEntryForm.prototype = Object.create(Modal.prototype);\n    ModalLogEntryForm.prototype.constructor = ModalLogEntryForm;\n\n    /**\n     * Set the context id to the given value.\n     *\n     * @method setContextId\n     * @param {Number} id The context id\n     */\n    ModalLogEntryForm.prototype.setContextId = function(id) {\n        this.contextId = id;\n    };\n\n    /**\n     * Retrieve the current context id, if any.\n     *\n     * @method getContextId\n     * @return {Number|null} The context id\n     */\n    ModalLogEntryForm.prototype.getContextId = function() {\n        return this.contextId;\n    };\n\n    /**\n     * Set the course id to the given value.\n     *\n     * @method setCourseId\n     * @param {int} id The course id\n     */\n    ModalLogEntryForm.prototype.setCourseId = function(id) {\n        this.courseId = id;\n    };\n\n    /**\n     * Retrieve the current course id, if any.\n     *\n     * @method getCourseId\n     * @return {int|null} The course id\n     */\n    ModalLogEntryForm.prototype.getCourseId = function() {\n        return this.courseId;\n    };\n\n    /**\n     * Check if the modal has an course id.\n     *\n     * @method hasCourseId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasCourseId = function() {\n        return this.courseId !== null;\n    };\n\n    /**\n     * Set the exercise id to the given value.\n     *\n     * @method setExerciseId\n     * @param {int} id The exercise id\n     */\n        ModalLogEntryForm.prototype.setExerciseId = function(id) {\n        this.exerciseId = id;\n    };\n\n    /**\n     * Retrieve the current exercise id, if any.\n     *\n     * @method getExerciseId\n     * @return {int|null} The exercise id\n     */\n    ModalLogEntryForm.prototype.getExerciseId = function() {\n        return this.exerciseId;\n    };\n\n    /**\n     * Check if the modal has an exercise id.\n     *\n     * @method hasExerciseId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasExerciseId = function() {\n        return this.exerciseId !== null;\n    };\n\n    /**\n     * Set the user id to the given value.\n     *\n     * @method setUserId\n     * @param {int} id The user id\n     */\n        ModalLogEntryForm.prototype.setUserId = function(id) {\n        this.userId = id;\n    };\n\n    /**\n     * Retrieve the current user id, if any.\n     *\n     * @method getUserId\n     * @return {int|null} The user id\n     */\n    ModalLogEntryForm.prototype.getUserId = function() {\n        return this.userId;\n    };\n\n    /**\n     * Check if the modal has an user id.\n     *\n     * @method hasUserId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasUserId = function() {\n        return this.userId !== null;\n    };\n\n    /**\n     * Set the logentry id to the given value.\n     *\n     * @method setLogentryId\n     * @param {int} id The logentry id\n     */\n    ModalLogEntryForm.prototype.setLogentryId = function(id) {\n        this.logentryId = id;\n    };\n\n    /**\n     * Retrieve the current logentry id, if any.\n     *\n     * @method getLogentryId\n     * @return {int|null} The logentry id\n     */\n    ModalLogEntryForm.prototype.getLogentryId = function() {\n        return this.logentryId;\n    };\n\n    /**\n     * Check if the modal has an logentry id.\n     *\n     * @method hasLogentryId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasLogentryId = function() {\n        return this.logentryId !== null && this.logentryId != 0;\n    };\n\n    /**\n     * Set the start time to the given value.\n     *\n     * @method setFlightDate\n     * @param {int} time The session date time\n     */\n    ModalLogEntryForm.prototype.setFlightDate = function(time) {\n        this.flightDate = time;\n    };\n\n    /**\n     * Retrieve the current start time, if any.\n     *\n     * @method getFlightDate\n     * @return {int|null} The start time\n     */\n    ModalLogEntryForm.prototype.getFlightDate = function() {\n        return this.flightDate;\n    };\n\n    /**\n     * Check if the modal has session date time.\n     *\n     * @method hasFlightDate\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasFlightDate = function() {\n        return this.flightDate !== null;\n    };\n\n    /**\n     * Set the flight type of the logentry to the given value.\n     *\n     * @method setFlightType\n     * @param {string} flighttype The flight type (training/solo/check)\n     */\n     ModalLogEntryForm.prototype.setFlightType = function(flighttype) {\n        this.flightType = flighttype;\n    };\n\n    /**\n     * Retrieve flight type of the logentry.\n     *\n     * @method getFlightType\n     * @return {string} The flight type (training/solo/check)\n     */\n    ModalLogEntryForm.prototype.getFlightType = function() {\n        return this.flightType;\n    };\n\n    /**\n     * Get the form element from the modal.\n     *\n     * @method getForm\n     * @return {object}\n     */\n    ModalLogEntryForm.prototype.getForm = function() {\n        return this.getBody().find('form');\n    };\n\n    /**\n     * Disable the buttons in the footer.\n     *\n     * @method disableButtons\n     */\n    ModalLogEntryForm.prototype.disableButtons = function() {\n        this.saveButton.prop('disabled', true);\n    };\n\n    /**\n     * Enable the buttons in the footer.\n     *\n     * @method enableButtons\n     */\n    ModalLogEntryForm.prototype.enableButtons = function() {\n        this.saveButton.prop('disabled', false);\n    };\n\n    /**\n     * Reload the title for the modal to the appropriate value\n     * depending on whether we are creating a new log book entry\n     * or editing an existing one.\n     *\n     * @method reloadTitleContent\n     * @return {object} A promise resolved with the new title text\n     */\n    ModalLogEntryForm.prototype.reloadTitleContent = function() {\n        if (this.reloadingTitle) {\n            return this.titlePromise;\n        }\n\n        this.reloadingTitle = true;\n\n        // Get exercise name\n        this.titlePromise = Repository.getExerciseName(this.courseId, this.exerciseId)\n            .then(function(response) {\n                // Handle the response\n                return response.exercisename;\n            })\n        .fail(Notification.exception);\n\n        this.titlePromise.then(function(string) {\n            this.setTitle(string);\n            return string;\n        }.bind(this))\n        .always(function() {\n            this.reloadingTitle = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.titlePromise;\n    };\n\n    /**\n     * Send a request to the server to get the logentry_form in a fragment\n     * and render the result in the body of the modal.\n     *\n     * If serialised form data is provided then it will be sent in the\n     * request to the server to have the form rendered with the data. This\n     * is used when the form had a server side error and we need the server\n     * to re-render it for us to display the error to the user.\n     *\n     * @method reloadBodyContent\n     * @param {string} formData The serialised form data\n     * @return {object} A promise resolved with the fragment html and js from\n     */\n    ModalLogEntryForm.prototype.reloadBodyContent = function(formData) {\n        if (this.reloadingBody) {\n            return this.bodyPromise;\n        }\n\n        this.reloadingBody = true;\n        this.disableButtons();\n\n        var args = {};\n\n        if (this.hasUserId()) {\n            args.userid = this.getUserId();\n        }\n\n        if (this.hasLogentryId()) {\n            args.logentryid = this.getLogentryId();\n        }\n\n        if (this.hasFlightDate()) {\n            args.flightdate = this.getFlightDate();\n        }\n\n        if (this.hasCourseId()) {\n            args.courseid = this.getCourseId();\n        }\n\n        if (this.hasExerciseId()) {\n            args.exerciseid = this.getExerciseId();\n        }\n\n        if (typeof formData !== 'undefined') {\n            args.formdata = formData;\n        }\n\n        // Get the content of the modal\n        this.bodyPromise = Fragment.loadFragment('local_booking', 'logentry_form', this.getContextId(), args);\n\n        // Set the body data using the promise\n        this.setBody(this.bodyPromise);\n\n        this.bodyPromise.then(function() {\n            // Add Find PIREP button\n            let pirepdiv = $('#id_p1pirep').parent();\n            if (!$('#id_error2_p1pirep').length) {\n                pirepdiv.append('<div id=\"id_find_pirep\" ' +\n                    'tabindex=\"0\" style=\"\"><button type=\"button\" class=\"btn btn-primary\" ' +\n                    'data-form-type=\"action\"><i class=\"icon fa fa-search fa-fw\"></i></button></div>');\n            }\n\n            // Hide/show elements set training type\n            this.doDynamicDisplay();\n            this.enableButtons();\n            this.setInputMask();\n            this.registerChangeListeners();\n\n            return;\n        }.bind(this))\n        .fail(Notification.exception)\n        .always(function() {\n            this.reloadingBody = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.bodyPromise;\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method setInputMask\n     */\n    ModalLogEntryForm.prototype.setInputMask = function() {\n        // Mask flight times < 5hrs and departure/arrival times to 24hr format\n        // Mask flight time elements based on training type\n        if ($(Selectors.bookingwrapper).data('trainingtype') == \"Dual\") {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_dualtime\"));\n        } else if ($(Selectors.bookingwrapper).data('trainingtype') == \"Multicrew\") {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_multipilottime\"));\n\n            // TODO: Instructor logentry edit:\n            // Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_copilottime\"));\n        }\n        // Check for the flight type before masking related elements\n        if ($(\"input[name='flighttypehidden']\").val() == 'check') {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_picustime\"));\n\n            // TODO: Instructor logentry edit:\n            // Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_checkpilottime\"));\n        } else {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_groundtime\"));\n        }\n\n        // TODO: Instructor logentry edit:\n        // Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_pictime\"));\n        // Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_instructortime\"));\n\n        // Mask remaining elements\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_flighttime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_deptime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_arrtime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_nighttime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_ifrtime\"));\n        Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1day\"));\n        Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1night\"));\n\n        // Check for new logentries noting landings of both instructor and student\n        if (this.getLogentryId() == 0) {\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2day\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2night\"));\n        }\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method registerChangeListeners\n     */\n    ModalLogEntryForm.prototype.registerChangeListeners = function() {\n\n        // PIREP search trigger\n        var pirepbutton = $('#id_find_pirep');\n        pirepbutton.on('click', function(e) {\n            if (!isNaN($('#id_p1pirep').val())) {\n                return this.getPIREPData(e);\n            }\n        }.bind(this));\n\n        // Update elements based on selected flighttype (Training/Solo)\n        var flighttype = $('input[name=\"flighttype\"]');\n        flighttype.on('change', function() {\n            // Assign the value selected in the radio buttons to the hidden flight type element\n            $(\"input[name='flighttypehidden']\").val($(\"input[name='flighttype']:checked\").val());\n            this.doDynamicDisplay();\n            this.applyFlightTimes();\n        }.bind(this));\n\n        // Update flight times when the test result status is changed\n        var passfail = $('input[name=\"passfail\"]');\n        passfail.on('change', function() {\n            this.doDynamicDisplay();\n            this.applyFlightTimes();\n        }.bind(this));\n\n        // Update flight times when the test result status is changed\n        var flightrule = $('input[name=\"flightrule\"]');\n        flightrule.on('change', function() {\n            this.doDynamicDisplay();\n            this.applyFlightTimes();\n        }.bind(this));\n\n        // The onchange property has to be set due to the flighttime element being masked\n        flighttime = document.getElementById(\"id_flighttime\");\n        flighttime.onchange = function() {\n            return this.applyFlightTimes(true);\n        }.bind(this);\n    };\n\n    /**\n     * Retrieve and populate log entry data from\n     * the server's PIREP lookup service.\n     *\n     * @method getPIREPData\n     * @param  {object} e The triggered event\n     * @return {object} pirep of the logentry\n     */\n     ModalLogEntryForm.prototype.getPIREPData = function(e) {\n        var loadingContainer = this.getFooter().find(SELECTORS.LOADING_ICON_CONTAINER);\n        rule = $(Selectors.bookingwrapper).data('trainingtype');\n        pirepdiv = $('#id_p1pirep').parent();\n        pirep = $('#id_p1pirep').val();\n        courseid = this.getCourseId();\n\n        if (pirep != '') {\n            loadingContainer.removeClass('hidden');\n            return Repository.findPirep(pirep, courseid, $('#id_p1id').val())\n                .then(function(response) {\n                    // Clean up any past client side errors\n                    $('#id_p1pirep').removeClass('is-invalid');\n\n                    // Handle the response\n                    if (response.result) {\n                        // Get found message\n                        if (!$('#id_valid_p1pirep').length) {\n                            Str.get_string('pirepfound', 'local_booking').then(function(string) {\n                                pirepdiv.append('<div class=\"form-control-feedback valid-feedback\" id=\"id_valid_p1pirep\" ' +\n                                'tabindex=\"0\" style=\"\">' + string + '</div');\n                                $('#id_p1pirep').addClass('is-valid');\n                                return string;\n                            })\n                            .fail(Notification.exception);\n                        }\n\n                        // Update elements with PIREP returned data depending on\n                        // solo flight status and flight rule (Dual/Multicrew)\n                        var d = new Date(response.logentry.flightdate * 1000),\n                            month = '' + (d.getMonth() + 1),\n                            day = '' + d.getDate(),\n                            year = d.getFullYear(),\n                            time = response.logentry.deptime,\n                            hour = time.substring(0, 2),\n                            minute = time.substring(time.indexOf(':') + 1, time.length);\n                        // Fill remaining data\n                        $('#id_flightdate_day').val(day);\n                        $('#id_flightdate_month').val(month);\n                        $('#id_flightdate_year').val(year);\n                        $('#id_flightdate_hour').val(hour);\n                        $('#id_flightdate_minute').val(minute);\n                        $('input[name=\"linkedpirep\"]').val(response.logentry.linkedpirep);\n                        $('#id_flighttime').val(response.logentry.flighttime);\n                        $('#id_depicao').val(response.logentry.depicao);\n                        $('#id_arricao').val(response.logentry.arricao);\n                        $('#id_deptime').val(response.logentry.deptime);\n                        $('#id_arrtime').val(response.logentry.arrtime);\n                        $('#id_callsign').val(response.logentry.callsign);\n                        $('#id_aircraft').val(response.logentry.aircraft);\n                        $('#id_aircraftreg').val(response.logentry.aircraftreg);\n                        $('#id_enginetype').val(response.logentry.enginetype);\n                        $('#id_route').val(response.logentry.route);\n                        $('#id_fstd').val(response.logentry.fstd);\n                        this.doDynamicDisplay();\n                        this.applyFlightTimes();\n                    } else {\n                        // Display inline error for the PIREP then clear it and give it focus\n                        $('#id_p1pirep').addClass('is-invalid');\n                        if (!$('#id_error2_p1pirep').length) {\n                            pirepdiv.append('<div class=\"form-control-feedback invalid-feedback\" id=\"id_error2_p1pirep\" ' +\n                                'tabindex=\"0\" style=\"\">' + response.warnings[0].message + '</div>');\n                            $('#id_p1pirep').val('');\n                            $('#id_p1pirep').focus();\n                        } else {\n                            $('#id_error2_p1pirep').show();\n                        }\n                        // Make sure the find button is always after the P1 PIREP element\n                        $('#id_p1pirep').parent().each(function() {\n                            $('#id_find_pirep').insertAfter($('#id_p1pirep'), this);\n                        });\n                    }\n\n                    return;\n                }.bind(this))\n                .always(function() {\n                    // Regardless of success or error we should always stop\n                    // the loading icon and re-enable the buttons.\n                    loadingContainer.addClass('hidden');\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    return;\n                })\n                .fail(Notification.exception);\n        } else {\n            return '';\n        }\n    };\n\n    /**\n     * Apply default values set flight operation\n     * Dual vs Multicrew taking solo flights in conisderation\n     *\n     * Populates a log book entry with a modal form data.\n     *\n     * @param {bool} force Force applying flight times\n     * @method applyFlightTimes\n     */\n     ModalLogEntryForm.prototype.applyFlightTimes = function(force) {\n\n        const rule = $(Selectors.bookingwrapper).data('trainingtype');\n        var flighttype = $(\"input[name='flighttypehidden']\").val(),\n            flighttime = $('#id_flighttime').val(),\n            passfail = $(\"input[name='passfail']:checked\").val(),\n            ifr = $(\"input[name='flightrule']:checked\").val() == 'ifr',\n            editmode = this.getLogentryId() != 0,\n            newentry = !editmode;\n\n        // Check the training rule type\n        if (newentry || force) {\n            if (flighttype == 'training' || (flighttype == 'check' && passfail == 'fail')) {\n                $('#id_dualtime').val(rule == 'Dual' ? flighttime : '');\n                $('#id_ifrtime').val(ifr ? flighttime : '');\n                $('#id_multipilottime').val(rule == 'Multicrew' ? flighttime : '');\n                $('#id_copilottime').val(rule == 'Multicrew' ? flighttime : '');\n                $('#id_checkpilottime').val(flighttype == 'check' ? flighttime : '');\n                $('#id_picustime').val('');\n            } else if (flighttype == 'solo') {\n                $('#id_ifrtime').val(ifr ? flighttime : '');\n                $('#id_dualtime').val('');\n                $('#id_multipilottime').val('');\n                $('#id_copilottime').val('');\n                $('#id_picustime').val('');\n            } else if (flighttype == 'check' || passfail == 'pass') {\n                $('#id_ifrtime').val(ifr ? flighttime : '');\n                $('#id_picustime').val(flighttime);\n                $('#id_checkpilottime').val(flighttime);\n                $('#id_multipilottime').val(rule == 'Multicrew' ? flighttime : '');\n                $('#id_dualtime').val('');\n                $('#id_copilottime').val('');\n            }\n        }\n     };\n\n    /**\n     * Apply default values set flight operation\n     * Dual vs Multicrew taking solo flights in conisderation\n     *\n     * Populates a log book entry with a modal form data.\n     *\n     * @method doDynamicDisplay\n     */\n     ModalLogEntryForm.prototype.doDynamicDisplay = function() {\n\n        const rule = $(Selectors.bookingwrapper).data('trainingtype');\n        var flighttype = $(\"input[name='flighttypehidden']\").val(),\n            passfail = $(\"input[name='passfail']:checked\").val(),\n            ifr = $(\"input[name='flightrule']:checked\").val() == 'ifr',\n            editmode = this.getLogentryId() != 0;\n\n        // Toggle the display of elements depending on flight type\n        var toggle = function(div, element, show, value, force = false) {\n            if (typeof div !== 'undefined' && typeof element !== 'undefined') {\n                // Check expanded status of Advanced elements\n                var ariaexpanded = this.getForm().find('[aria-expanded=\"true\"]').attr('aria-expanded');\n                if (ariaexpanded || force) {\n                    if (show) {\n                        $(div).slideDown('fast');\n                    } else {\n                        $(div).slideUp('fast');\n                    }\n                }\n\n                // Process the passed value\n                if (typeof value !== 'undefined') {\n                    $(element).val(value);\n                }\n            }\n        }.bind(this);\n\n        // Set dynamic element labels\n        var setLabel = function(element, editlabelkey, labelkey) {\n            if (editmode) {\n                Str.get_string(editlabelkey, 'local_booking').then(function(label) {\n                    $(element).text(label);\n                    return label;\n                }).fail(Notification.exception);\n            } else {\n                Str.get_string(labelkey, 'local_booking').then(function(label) {\n                    $(element).text(label);\n                    return label;\n                }).fail(Notification.exception);\n            }\n        };\n\n        // TODO: Instructor logentry edit:\n        // // Toggle PIC time in new and edit\n        // toggle('#fitem_id_pictime', '#id_pictime', $('#id_pictime').val());\n\n        // Check the training rule type\n        if (flighttype == 'training' || (flighttype == 'check' && passfail == 'fail')) {\n\n            // Set P1 id and label, and handle edit mode\n            if (flighttype == 'training' || editmode) {\n                p1label = rule == 'Dual' ? 'p1dual' : 'p1multicrew';\n            } else {\n                p1label = 'examiner';\n            }\n\n            setLabel(\"label[for='id_p1pirep']\", 'pirep', flighttype == 'training' ? 'instpirep' : 'examinerpirep');\n            setLabel(\"label[for='id_p1id']\", p1label, p1label);\n\n            // Toggle showing elements conditionally for training flight and failed check flights\n            toggle('#fitem_id_p2id', '#id_p2id', true);\n            toggle('#fitem_id_dualtime', '#id_dualtime', rule == 'Dual');\n            toggle('#fitem_id_groundtime', '#id_groundtime', true, $('#id_groundtime').val(), true);\n            toggle('#fitem_id_ifrtime', '#id_ifrtime', ifr);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew');\n            toggle('#fitem_id_copilottime', '#id_copilottime', rule == 'Multicrew');\n\n            // Toggle hiding elements\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false);\n            toggle('#fitem_id_picustime', '#id_picustime', false);\n\n            // TODO: Instructor logentry edit:\n            // // Toggle instructor time in new and edit\n            // toggle('#fitem_id_instructortime', '#id_instructortime', ((newentry && flighttype != 'check') || (editmode &&\n            //     $('#id_instructortime').val() != '')), editmode || flighttype == 'check' ?\n            //     $('#id_instructortime').val() ? $('#id_instructortime').val() : '' : flighttime);\n            // TODO: Instructor logentry edit:\n            // toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false, '');\n\n        } else if (flighttype == 'solo') {\n            // Set P1 PIREP label for student solo flights, and handle edit mode\n            setLabel(\"label[for='id_p1pirep']\", 'logbooksolopirep', 'logbooksolopirep');\n            setLabel(\"label[for='id_p1id']\", 'p2dual', 'p2dual');\n            if (!editmode) {\n                $('#id_p1id').val($('#id_p2id').val());\n            }\n\n            // Toggle showing elements for solo flight\n            toggle('#fitem_id_ifrtime', '#id_ifrtime', ifr);\n            $('#id_landingsp1day').val('1');\n            $('#id_landingsp2day').val('0');\n\n            // Toggle hiding elements for solo flights\n            toggle('#fitem_id_p2id', '#id_p2id', false, $('#id_p2id').val(), true);\n            toggle('#fitem_id_groundtime', '#id_groundtime', false, '', true);\n            toggle('#fitem_id_dualtime', '#id_dualtime', false);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', false);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false);\n            toggle('#fitem_id_picustime', '#id_picustime', false);\n            toggle('#fgroup_id_landingsp2', '#id_landingsp2', false);\n\n            // TODO: Instructor logentry edit:\n            // toggle('#fitem_id_instructortime', '#id_instructortime', false);\n            // TODO: Instructor logentry edit:\n            // toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false);\n\n        } else if (flighttype == 'check' || passfail == 'pass') {\n            // Get id and label for P1 and PIREP\n            setLabel(\"label[for='id_p1pirep']\", 'pirep', 'examinerpirep');\n            setLabel(\"label[for='id_p1id']\", 'examiner', 'examiner');\n\n            // Toggle showing elements for passsed check flight\n            toggle('#fitem_id_p2id', '#id_p2id', true);\n            toggle('#fitem_id_ifrtime', '#id_ifrtime', ifr);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew');\n            toggle('#fitem_id_picustime', '#id_picustime', true);\n\n            // Toggle hiding elements for passed check flight\n            toggle('#fitem_id_dualtime', '#id_dualtime', false);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false);\n\n            // TODO: Instructor logentry edit:\n            // toggle('#fitem_id_instructortime', '#id_instructortime', false);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false);\n        }\n    };\n\n    /**\n     * Reload both the title and body content.\n     *\n     * @method reloadAllContent\n     * @return {object} promise\n     */\n    ModalLogEntryForm.prototype.reloadAllContent = function() {\n        return $.when(this.reloadTitleContent(), this.reloadBodyContent());\n    };\n\n    /**\n     * Kick off a reload the modal content before showing it. This\n     * is to allow us to re-use the same modal for creating and\n     * editing different log book entries within the booking view page.\n     *\n     * We do the reload when showing the modal rather than hiding it\n     * to save a request to the server if the user closes the modal\n     * and never re-opens it.\n     *\n     * @method show\n     */\n    ModalLogEntryForm.prototype.show = function() {\n        this.reloadAllContent();\n        Modal.prototype.show.call(this);\n    };\n\n    /**\n     * Clear the logentry id from the modal when it's closed so\n     * that it is loaded fresh next time it's displayed.\n     *\n     * The logentry id will be set by the calling code if it wants\n     * to edit a specific log entry.\n     *\n     * @method hide\n     */\n    ModalLogEntryForm.prototype.hide = function() {\n        Modal.prototype.hide.call(this);\n        this.setLogentryId(null);\n        this.setFlightDate(null);\n        this.setContextId(null);\n        this.setCourseId(null);\n        this.setExerciseId(null);\n    };\n\n    /**\n     * Get the serialised form data.\n     *\n     * @method getFormData\n     * @return {string} serialised form data\n     */\n    ModalLogEntryForm.prototype.getFormData = function() {\n        return this.getForm().serialize();\n    };\n\n    /**\n     * Send the form data to the server to create or update\n     * a log book entry.\n     *\n     * If there is a server side validation error then we re-request the\n     * rendered form (with the data) from the server in order to get the\n     * server side errors to display.\n     *\n     * On success the modal is hidden and the page is reloaded so that the\n     * new log book entry will display in the booking view user tooltip.\n     *\n     * @method save\n     * @return {object} A promise\n     */\n    ModalLogEntryForm.prototype.save = function() {\n        var invalid,\n            loadingContainer = this.saveButton.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        if (!($(\"input[name='flighttypehidden']\").val() == 'training')) {\n            $('#id_groundtime').val(0);\n        }\n\n        // Now the change events have run, see if there are any \"invalid\" form fields.\n        invalid = this.getForm().find('[aria-invalid=\"true\"]');\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        loadingContainer.removeClass('hidden');\n        this.disableButtons();\n\n        var formData = this.getFormData();\n        var formArgs = 'contextid=' + this.contextId + '&courseid=' + this.courseId\n            + '&exerciseid=' + this.exerciseId + '&userid=' + this.userId;\n\n        // Send the form data to the server for processing.\n        // eslint-disable-next-line consistent-return\n        return Repository.submitCreateUpdateLogentryForm(formArgs, formData)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // If there was a server side validation error then\n                    // we need to re-request the rendered form from the server\n                    // in order to display the error for the user.\n                    this.reloadBodyContent(formData);\n                    return;\n                } else {\n                    // Check whether this was a new logbook entry or not.\n                    // check if the logentry is from the prgression view\n                    // logentry from the confirmation view\n                    // The hide function unsets the form data so grab this before the hide.\n                    var isExisting = this.hasLogentryId();\n\n                    // No problemo! Our work here is done.\n                    this.hide();\n\n                    // Trigger the appropriate logbook event so that the view can be updated.\n                    if (isExisting) {\n                        $('body').trigger(LogbookEvents.updated, [response.logentry]);\n                    } else {\n                        $('body').trigger(LogbookEvents.created, [response.logentry]);\n                    }\n                }\n\n                return;\n            }.bind(this))\n            .always(function() {\n                // Regardless of success or error we should always stop\n                // the loading icon and re-enable the buttons.\n                loadingContainer.addClass('hidden');\n                Notification.fetchNotifications();\n                this.enableButtons();\n\n                return;\n            }.bind(this))\n            .fail(Notification.exception);\n        };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalLogEntryForm.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        // When the user clicks the save button we trigger the form submission. We need to\n        // trigger an actual submission because there is some JS code in the form that is\n        // listening for this event and doing some stuff (e.g. saving draft areas etc).\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(e, data) {\n            this.getForm().submit();\n            data.originalEvent.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n\n        // Catch the submit event before it is actually processed by the browser and\n        // prevent the submission. We'll take it from here.\n        this.getModal().on('submit', function(e) {\n            Event.notifyFormSubmitAjax(this.getForm()[0]);\n\n            this.save();\n\n            // Stop the form from actually submitting and prevent it's\n            // propagation because we have already handled the event.\n            e.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n\n        // Register a lister to Update elements for Advanced section when expanded, after its loaded\n        this.getModal().on('click', 'a[aria-expanded]', function() {\n            setTimeout(function() {\n                this.doDynamicDisplay();\n             }.bind(this), 100);\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalLogEntryForm.TYPE, ModalLogEntryForm, 'local_booking/modal_logentry_form');\n        registered = true;\n    }\n\n    return ModalLogEntryForm;\n});\n"],"file":"modal_logentry_form.min.js"}