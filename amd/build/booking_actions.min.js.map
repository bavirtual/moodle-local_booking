{"version":3,"file":"booking_actions.min.js","sources":["../src/booking_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry operations\n * including CRUD and UI events.\n *\n * @module     local_booking/booking_actions\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'local_booking/repository',\n    'local_booking/events',\n    'local_booking/selectors',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    Repository,\n    BookingSessions,\n    Selectors,\n) {\n\n    /**\n     * Cancel a specific booking and trigger update UI event.\n     *\n     * @method  cancelBooking\n     * @param   {object} root     The My Bookings root element\n     * @param   {object} e        The click event on the Cancel button\n     * @param   {string} comment  The cancellation comment\n     * @param   {string} noshow   Whether the cancellation is a no-show or instructor initiated\n     * @return  {object} The create modal promise\n     */\n    var cancelBooking = (root, e, comment, noshow) => {\n\n        var target = e.target;\n        const bookingId = target.dataset.bookingid;\n\n        // Send the request data to the server for processing.\n        return Repository.cancelBooking(bookingId, comment, noshow)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    window.alert(Str.get_string('errorlogentrycancel', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                $('body').trigger(BookingSessions.sessioncanceled, [root, false]);\n                Notification.fetchNotifications();\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Redirect to exercise (assignment) grading page.\n     *\n     * @method  gotoFeedback\n     * @param   {object} root\n     * @param   {object} e\n     */\n     var gotoFeedback = (root, e) => {\n        let Source = root.find(Selectors.logentryitem),\n            courseId, exerciseId, userId;\n\n        // Call redirect to assignment feedback page\n        if (Source.length !== 0) {\n            // Get from logentry modal\n            courseId = Source.data('courseId');\n            exerciseId = Source.data('exerciseId');\n            userId = Source.data('userId');\n        } else {\n            // Get from closest dashboard session clicked\n            Source = $(e.target).closest(Selectors.session);\n            courseId = $(Selectors.wrappers.bookingwrapper).data('courseid');\n            exerciseId = Source.data('exerciseId');\n            userId = Source.data('studentId');\n        }\n\n        // Trigger redirect to feedback\n        $('body').trigger(BookingSessions.gotoFeedback, [exerciseId]);\n\n        // Redirect to the grading and feedback page\n        location.href = M.cfg.wwwroot + '/local/booking/assign.php?courseid=' + courseId +\n                '&exeid=' + exerciseId + '&rownum=0&userid=' + userId + '&passed=1';\n    };\n\n    return {\n        gotoFeedback: gotoFeedback,\n        cancelBooking: cancelBooking\n    };\n});\n"],"names":["define","$","Str","Notification","Repository","BookingSessions","Selectors","gotoFeedback","root","e","courseId","exerciseId","userId","Source","find","logentryitem","length","data","target","closest","session","wrappers","bookingwrapper","trigger","location","href","M","cfg","wwwroot","cancelBooking","comment","noshow","bookingId","dataset","bookingid","then","response","validationerror","window","alert","get_string","always","sessioncanceled","fetchNotifications","fail","exception"],"mappings":";;;;;;;;;AAwBAA,uCAAO,CACH,SACA,WACA,oBACA,2BACA,uBACA,4BAEJ,SACIC,EACAC,IACAC,aACAC,WACAC,gBACAC,iBAmEO,CACHC,aA3BgB,CAACC,KAAMC,SAEnBC,SAAUC,WAAYC,OADtBC,OAASL,KAAKM,KAAKR,UAAUS,cAIX,IAAlBF,OAAOG,QAEPN,SAAWG,OAAOI,KAAK,YACvBN,WAAaE,OAAOI,KAAK,cACzBL,OAASC,OAAOI,KAAK,YAGrBJ,OAASZ,EAAEQ,EAAES,QAAQC,QAAQb,UAAUc,SACvCV,SAAWT,EAAEK,UAAUe,SAASC,gBAAgBL,KAAK,YACrDN,WAAaE,OAAOI,KAAK,cACzBL,OAASC,OAAOI,KAAK,cAIzBhB,EAAE,QAAQsB,QAAQlB,gBAAgBE,aAAc,CAACI,aAGjDa,SAASC,KAAOC,EAAEC,IAAIC,QAAU,sCAAwClB,SAChE,UAAYC,WAAa,oBAAsBC,OAAS,aAKhEiB,cAxDgB,CAACrB,KAAMC,EAAGqB,QAASC,gBAG7BC,UADOvB,EAAES,OACUe,QAAQC,iBAG1B9B,WAAWyB,cAAcG,UAAWF,QAASC,QAC/CI,MAAK,SAASC,UACPA,SAASC,iBAETC,OAAOC,MAAMrC,IAAIsC,WAAW,sBAAuB,qBAI1DC,QAAO,WACJxC,EAAE,QAAQsB,QAAQlB,gBAAgBqC,gBAAiB,CAAClC,MAAM,IAC1DL,aAAawC,wBAEhBC,KAAKzC,aAAa0C"}