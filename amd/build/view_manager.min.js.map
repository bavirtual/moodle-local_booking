{"version":3,"sources":["../src/view_manager.js"],"names":["cancelBooking","root","e","startLoading","target","courseId","find","BookingsSelector","wrapper","data","bookingId","dataset","bookingid","Repository","then","response","validationerror","alert","refreshBookingsContent","bind","always","Notification","fetchNotifications","stopLoading","fail","exception","categoryId","template","attr","M","util","js_pending","get","join","getBookingsData","context","viewingbooking","Templates","render","html","js","replaceNode","js_complete","loadingIconContainer","containers","loadingIcon","removeClass","one","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler calendar view changes.\n *\n * @module     local_booking/view_manager\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport * as Repository from 'local_booking/repository';\nimport * as BookingsSelector from 'local_booking/selectors';\n\n/**\n * Cancel a specific booking and update UI.\n *\n * @method cancelBooking\n * @param {object} root The My Bookings root element\n * @param {object} e    The click event on the Cancel button\n * @return {object} The create modal promise\n */\nexport const cancelBooking = (root, e) => {\n    startLoading(root);\n\n    var target = e.target;\n    // Get exercise id and the user id from the URL\n    const courseId = courseId || root.find(BookingsSelector.wrapper).data('courseid');\n    const bookingId = target.dataset.bookingid;\n\n    // Send the request data to the server for processing.\n    return Repository.cancelBooking(bookingId)\n        .then(function(response) {\n            if (response.validationerror) {\n                // eslint-disable-next-line no-alert\n                alert('Errors encountered: Unable to cancel booking!');\n            }\n            return refreshBookingsContent(root, courseId);\n        }\n        .bind(this))\n        .always(function() {\n            Notification.fetchNotifications();\n            stopLoading(root);\n        }\n        .bind(this))\n        .fail(Notification.exception);\n};\n\n/**\n * Refresh bookings content.\n *\n * @param {object} root The root element.\n * @param {number} courseId The id of the course whose events are shown\n * @param {number} categoryId The id of the category whose events are shown\n * @param {object} target The element being replaced. If not specified, the calendarwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\nexport const refreshBookingsContent = (root, courseId, categoryId, target = null, template = '') => {\n    startLoading(root);\n\n    target = target || root.find(BookingsSelector.wrapper);\n    template = template || root.attr('data-template');\n    M.util.js_pending([root.get('id'), courseId, categoryId].join('-'));\n    return Repository.getBookingsData(courseId, categoryId)\n        .then((context) => {\n            context.viewingbooking = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(BookingsSelector.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(BookingsSelector.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n"],"file":"view_manager.min.js"}