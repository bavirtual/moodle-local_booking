{"version":3,"sources":["../src/slot_actions.js"],"names":["define","$","Notification","Repository","CalendarViewManager","SELECTORS","CALENDAR_WRAPPER","SLOTS_TABLE","SLOT_DAY","SAVE_BUTTON","PASTE_BUTTON","BOOK_BUTTON","LOADING_ICON_CONTAINER","VIEW_DAY_LINK","Slots","BookedSlot","SlotIndexes","saveBookedSlot","root","startLoading","course","find","data","exercise","studentid","getUISlots","then","response","validationerror","alert","bind","always","stopLoading","location","href","M","cfg","wwwroot","fail","exception","action","slottype","year","week","tableid","attr","head","colCount","document","getElementById","rows","cells","length","colOffset","each","index","i","daySlots","map","get","aSlot","forEach","element","Object","keys","constructor","starttime","endtime","push","setPasteState","addClass","removeClass","setBookState","saveWeekSlots","saveSlots","fetchNotifications","clearWeekSlots","filter","pasteSlots","table","idx","slot","copySlots","el","closest","rowIndex","cellIndex","setSlot","cell","slotaction","slotactionclass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Contain the logic for the quick add or update event modal.\n *\n * @module     local_booking/slot_actions\n * @copyright  2017 Ryan Wyllie <ryan@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/notification',\n    'local_booking/repository',\n    'local_booking/view_manager',\n    ],\n    function(\n        $,\n        Notification,\n        Repository,\n        CalendarViewManager\n    ) {\n\n    var SELECTORS = {\n        CALENDAR_WRAPPER: '[class=calendarwrapper]',\n        SLOTS_TABLE: '[data-region=\"slots-week\"]',\n        SLOT_DAY: '[data-region=\"day\"]',\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        PASTE_BUTTON: \"[data-region='paste-button']\",\n        BOOK_BUTTON: \"[data-region='book-button']\",\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n        VIEW_DAY_LINK: \"[data-action='view-day-link']\",\n    };\n\n    var Slots = [];\n    var BookedSlot;\n    var SlotIndexes = [];\n\n    /**\n     * Create the event form modal for creating new events and\n     * editing existing events.\n     *\n     * @method saveWeekSlots\n     * @param {object} root The calendar root element\n     * @return {object} The create modal promise\n     */\n     function saveWeekSlots(root) {\n\n        CalendarViewManager.startLoading(root);\n\n        // Get year and week\n        const course = root.find(SELECTORS.CALENDAR_WRAPPER).data('courseid');\n        const year = root.find(SELECTORS.CALENDAR_WRAPPER).data('year');\n        const week = root.find(SELECTORS.CALENDAR_WRAPPER).data('week');\n\n        getUISlots(root);\n\n        // Send the form data to the server for processing.\n        return Repository.saveSlots(Slots, course, year, week)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert('Errors encountered: Unable to save slot!');\n                }\n                return;\n            }\n            .bind(this))\n            .always(function() {\n                Notification.fetchNotifications();\n                return CalendarViewManager.stopLoading(root);\n            }\n            .bind(this))\n            .fail(Notification.exception);\n    }\n\n    /**\n     * Create the event form modal for creating new events and\n     * editing existing events.\n     *\n     * @method saveBookedSlot\n     * @param {object} root The calendar root element\n     * @return {object} The create modal promise\n     */\n     function saveBookedSlot(root) {\n\n        CalendarViewManager.startLoading(root);\n\n        // Get exercise id and the user id from the URL\n        const course = root.find(SELECTORS.CALENDAR_WRAPPER).data('courseid');\n        const exercise = root.find(SELECTORS.CALENDAR_WRAPPER).data('exercise-id');\n        const studentid = root.find(SELECTORS.CALENDAR_WRAPPER).data('student-id');\n\n        getUISlots(root, 'book');\n\n        // Send the form data to the server for processing.\n        return Repository.saveBookedSlot(BookedSlot, course, exercise, studentid)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert('Errors encountered: Unable to save slot!');\n                }\n                return;\n            }\n            .bind(this))\n            .always(function() {\n                CalendarViewManager.stopLoading(root);\n                // Redirect to bookings view\n                location.href = M.cfg.wwwroot + '/local/booking/view.php?courseid=' + course;\n                return;\n            }\n            .bind(this))\n            .fail(Notification.exception);\n    }\n\n    /**\n     * Clear slots for a user per course in week and year\n     * given they are not otherwsie booked\n     *\n     * @method clearWeekSlots\n     * @param {object} root The calendar root element\n     */\n     function clearWeekSlots() {\n        $('td').filter(function() {\n            if ($(this).data('slot-booked') == 0) {\n                $(this).data('slot-marked', 0);\n                $(this).removeClass('slot-selected');\n            }\n        });\n        return;\n    }\n\n     /**\n     * Create the event form modal for creating new events and\n     * editing existing events.\n     *\n     * @method getSlots\n     * @param {object} root     The calendar root element\n     * @param {String} action   The action for display view/book\n     */\n     function getUISlots(root, action) {\n\n        const slottype = action == 'book' ? 'slot-booked' : 'slot-marked';\n        const year = root.find(SELECTORS.CALENDAR_WRAPPER).data('year');\n        const week = root.find(SELECTORS.CALENDAR_WRAPPER).data('week');\n\n        const tableid = root.find(SELECTORS.SLOTS_TABLE).attr('id');\n        const head = $('#' + tableid + ' th');\n        const colCount = document.getElementById(tableid).rows[0].cells.length;\n        let colOffset;\n\n        Slots.length = 0;\n\n        // Get column index for the week days only\n        head.each(function() {\n            if ($(this).data('region') == 'slot-week-day') {\n                colOffset = head.index(this) + 1;\n                return false;\n            }\n        });\n\n        // Get all slots for this week from the UI table\n        for (let i = colOffset; i <= colCount; i++) {\n            // Get slots for the current day\n            const daySlots = $('#' + tableid + ' td:nth-child(' + i + ')').map(function() {\n                return [[$(this).data(slottype), $(this).data('slot-timestamp')]];\n            }).get();\n\n            // Get each slot in the day (start and end times)\n            let aSlot = {};\n            // eslint-disable-next-line no-loop-func\n            daySlots.forEach(element => {\n                if (element[0]) {\n                    if (Object.keys(aSlot).length === 0 && aSlot.constructor === Object) {\n                        aSlot.starttime = element[1];\n                    } else {\n                        aSlot.endtime = element[1];\n                    }\n                } else if (!(Object.keys(aSlot).length === 0 && aSlot.constructor === Object)) {\n                    if (slottype == 'slot-marked') {\n                        Slots.push(aSlot);\n                    } else if (slottype == 'slot-booked') {\n                        aSlot.week = week;\n                        aSlot.year = year;\n                        BookedSlot = aSlot;\n                        return;\n                    }\n                    aSlot = {};\n                }\n            });\n        }\n    }\n\n    /**\n     * Update the indexes array tracking copied table indexes\n     * editing existing events.\n     *\n     * @param {object} root The calendar root element\n     * @method copySlots\n     */\n    function copySlots(root) {\n        SlotIndexes.length = 0;\n\n        $(SELECTORS.SLOT_DAY).each((idx, el) => {\n            if ($(el).data('slot-marked')) {\n                SlotIndexes.push([el.closest('tr').rowIndex, el.cellIndex]);\n            }\n        });\n\n        setPasteState(root);\n\n        return;\n    }\n\n     /**\n     * Set the cells from the CopiedSlotsIndexes to the current table\n     *\n     * @method pasteSlots\n     * @param {object} root The calendar root element\n     */\n      function pasteSlots(root) {\n        const table = document.getElementById(root.find(SELECTORS.SLOTS_TABLE).attr('id'));\n        SlotIndexes.forEach((idx) => {\n            let slot = table.rows[idx[0]].cells[idx[1]];\n            $(slot).data('slot-marked', 1);\n            $(slot).addClass('slot-selected', 1);\n        });\n\n        return;\n     }\n\n     /**\n     * Set the cells from the CopiedSlotsIndexes to the current table\n     *\n     * @method pasteSlots\n     * @param {object} root The calendar root element\n     */\n      function setPasteState(root) {\n        if (SlotIndexes.length > 0) {\n            root.find(SELECTORS.PASTE_BUTTON).addClass('slot-button-blue').removeClass('slot-button-gray');\n        } else {\n            root.find(SELECTORS.PASTE_BUTTON).addClass('slot-button-gray').removeClass('slot-button-blue');\n        }\n\n        return;\n     }\n\n     /**\n     * Set the cells from the CopiedSlotsIndexes to the current table\n     *\n     * @method bookSlots\n     * @param {object} root     The calendar root element\n     * @param {string} action   The action behind the view\n     */\n      function setBookState(root, action) {\n        getUISlots(root, action);\n\n        if (BookedSlot !== undefined) {\n            root.find(SELECTORS.BOOK_BUTTON).addClass('slot-button-blue').removeClass('slot-button-gray');\n        } else {\n            root.find(SELECTORS.BOOK_BUTTON).addClass('slot-button-gray').removeClass('slot-button-blue');\n        }\n\n        return;\n     }\n\n     /**\n     * Set the cells from the CopiedSlotsIndexes to the current table\n     *\n     * @method setSlot\n     * @param {object} cell     The target event to the clicked slot element\n     * @param {object} root     The calendar root element\n     * @param {String} action   The target event to the clicked slot element\n     */\n      function setSlot(cell, root, action) {\n        const slotaction = action == 'book' ? 'slot-booked' : 'slot-marked';\n        const slotactionclass = action == 'book' ? 'slot-booked' : 'slot-selected';\n\n        if (!$(cell).data(slotaction)) {\n            $(cell).addClass(slotactionclass);\n        } else {\n            $(cell).removeClass(slotactionclass);\n        }\n        $(cell).data(slotaction, !$(cell).data(slotaction));\n\n        return;\n    }\n\n    return {\n        saveWeekSlots: saveWeekSlots,\n        saveBookedSlot: saveBookedSlot,\n        clearWeekSlots: clearWeekSlots,\n        pasteSlots: pasteSlots,\n        setPasteState: setPasteState,\n        setBookState: setBookState,\n        copySlots: copySlots,\n        setSlot: setSlot,\n        Slots: Slots,\n        SlotIndexes: SlotIndexes\n    };\n});"],"file":"slot_actions.min.js"}