{"version":3,"sources":["../src/booking.js"],"names":["define","$","ViewManager","LogbookActions","LogbookEvents","Selectors","SELECTORS","PROGRESSION_WRAPPER","CANCEL_BUTTON","SESSION_ENTRY","registerBookingEventListeners","root","logentryFormModalPromise","body","on","created","reloadCurrentMonth","updated","registerEditListeners","registerEventListeners","eventFormPromise","registerLogentryFormModal","contextId","data","e","target","sessionDate","attr","studentId","then","modal","wrapper","closest","progressionwrapper","setCourseId","exerciseId","setExerciseId","setContextId","setStudentId","setSessionDate","show","fail","Notification","exception","preventDefault","confirm","cancelBooking","init"],"mappings":"AAwBAA,OAAM,yBAAC,CACK,QADL,CAEK,4BAFL,CAGK,+BAHL,CAIK,sBAJL,CAKK,yBALL,CAAD,CAOE,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAME,IAEFC,CAAAA,CAAS,CAAG,CACZC,mBAAmB,CAAE,qBADT,CAEZC,aAAa,CAAE,+BAFH,CAGZC,aAAa,CAAE,+BAHH,CAFV,CAeDC,CAA6B,CAAG,SAASC,CAAT,CAAeC,CAAf,CAAyC,CAC1E,GAAIC,CAAAA,CAAI,CAAGZ,CAAC,CAAC,MAAD,CAAZ,CAEAY,CAAI,CAACC,EAAL,CAAQV,CAAa,CAACW,OAAtB,CAA+B,UAAW,CACtCb,CAAW,CAACc,kBAAZ,CAA+BL,CAA/B,CACH,CAFD,EAGAE,CAAI,CAACC,EAAL,CAAQV,CAAa,CAACa,OAAtB,CAA+B,UAAW,CACtCf,CAAW,CAACc,kBAAZ,CAA+BL,CAA/B,CACH,CAFD,EAIAR,CAAc,CAACe,qBAAf,CAAqCP,CAArC,CAA2CC,CAA3C,CACH,CA1BK,CAiCDO,CAAsB,CAAG,SAASR,CAAT,CAAe,CAEzC,GAAIS,CAAAA,CAAgB,CAAGjB,CAAc,CAACkB,yBAAf,CAAyCV,CAAzC,CAAvB,CACIW,CAAS,CAAGrB,CAAC,CAACK,CAAS,CAACC,mBAAX,CAAD,CAAiCgB,IAAjC,CAAsC,YAAtC,CADhB,CAEAb,CAA6B,CAACC,CAAD,CAAOS,CAAP,CAA7B,CAEA,GAAIE,CAAJ,CAAe,CAEXX,CAAI,CAACG,EAAL,CAAQ,OAAR,CAAiBR,CAAS,CAACG,aAA3B,CAA0C,SAASe,CAAT,CAAY,IAE9CC,CAAAA,CAAM,CAAGxB,CAAC,CAACuB,CAAC,CAACC,MAAH,CAFoC,CAI9CC,CAAW,CAAGzB,CAAC,CAAC,IAAD,CAAD,CAAQ0B,IAAR,CAAa,mBAAb,CAJgC,CAK9CC,CAAS,CAAG3B,CAAC,CAAC,IAAD,CAAD,CAAQ0B,IAAR,CAAa,iBAAb,CALkC,CAMlDP,CAAgB,CAACS,IAAjB,CAAsB,SAAUC,CAAV,CAAiB,CACnC,GAAIC,CAAAA,CAAO,CAAGN,CAAM,CAACO,OAAP,CAAe3B,CAAS,CAAC4B,kBAAzB,CAAd,CACAH,CAAK,CAACI,WAAN,CAAkBH,CAAO,CAACR,IAAR,CAAa,UAAb,CAAlB,EAEA,GAAIY,CAAAA,CAAU,CAAGJ,CAAO,CAACR,IAAR,CAAa,YAAb,CAAjB,CACA,GAA0B,WAAtB,QAAOY,CAAAA,CAAX,CAAuC,CACnCL,CAAK,CAACM,aAAN,CAAoBD,CAApB,CACH,CAEDL,CAAK,CAACO,YAAN,CAAmBN,CAAO,CAACR,IAAR,CAAa,YAAb,CAAnB,EACAO,CAAK,CAACQ,YAAN,CAAmBV,CAAnB,EACAE,CAAK,CAACS,cAAN,CAAqBb,CAArB,EACAI,CAAK,CAACU,IAAN,EAEH,CAdD,EAeCC,IAfD,CAeMC,YAAY,CAACC,SAfnB,EAiBAnB,CAAC,CAACoB,cAAF,EACH,CAxBD,CAyBH,CAGDjC,CAAI,CAACG,EAAL,CAAQ,OAAR,CAAiBR,CAAS,CAACE,aAA3B,CAA0C,SAASgB,CAAT,CAAY,CAElD,GAAIqB,OAAO,CAAC,wBAAD,CAAX,CAAuC,CACnC3C,CAAW,CAAC4C,aAAZ,CAA0BnC,CAA1B,CAAgCa,CAAhC,CACH,CACJ,CALD,CAMH,CA3EK,CA6EN,MAAO,CACHuB,IAAI,CAAE,cAASpC,CAAT,CAAe,CACjBA,CAAI,CAAGV,CAAC,CAACU,CAAD,CAAR,CACAQ,CAAsB,CAACR,CAAD,CACzB,CAJE,CAMV,CAhGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for handling progression booking activity\n *\n * @module     local_booking/booking\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n            'jquery',\n            'local_booking/view_manager',\n            'local_booking/logbook_actions',\n            'local_booking/events',\n            'local_booking/selectors',\n        ],\n        function(\n            $,\n            ViewManager,\n            LogbookActions,\n            LogbookEvents,\n            Selectors,\n        ) {\n\n    var SELECTORS = {\n        PROGRESSION_WRAPPER: \".progressionwrapper\",\n        CANCEL_BUTTON: \"[data-region='cancel-button']\",\n        SESSION_ENTRY: \"[data-region='session-entry']\",\n    };\n\n    /**\n     * Listen to and handle any calendar events fired by the calendar UI.\n     *\n     * @method registerBookingEventListeners\n     * @param {object} root The calendar root element\n     * @param {object} logentryFormModalPromise A promise reolved with the event form modal\n     */\n     var registerBookingEventListeners = function(root, logentryFormModalPromise) {\n        var body = $('body');\n\n        body.on(LogbookEvents.created, function() {\n            ViewManager.reloadCurrentMonth(root);\n        });\n        body.on(LogbookEvents.updated, function() {\n            ViewManager.reloadCurrentMonth(root);\n        });\n\n        LogbookActions.registerEditListeners(root, logentryFormModalPromise);\n    };\n\n    /**\n     * Register event listeners for the module.\n     *\n     * @param {object} root The calendar root element\n     */\n     var registerEventListeners = function(root) {\n\n        var eventFormPromise = LogbookActions.registerLogentryFormModal(root),\n            contextId = $(SELECTORS.PROGRESSION_WRAPPER).data('context-id');\n        registerBookingEventListeners(root, eventFormPromise);\n\n        if (contextId) {\n            // Listen the click on the progression table of sessions.\n            root.on('click', SELECTORS.SESSION_ENTRY, function(e) {\n\n                var target = $(e.target);\n\n                var sessionDate = $(this).attr('data-session-date');\n                var studentId = $(this).attr('data-student-id');\n                eventFormPromise.then(function (modal) {\n                    var wrapper = target.closest(Selectors.progressionwrapper);\n                    modal.setCourseId(wrapper.data('courseid'));\n\n                    var exerciseId = wrapper.data('exerciseid');\n                    if (typeof exerciseId !== 'undefined') {\n                        modal.setExerciseId(exerciseId);\n                    }\n\n                    modal.setContextId(wrapper.data('context-id'));\n                    modal.setStudentId(studentId);\n                    modal.setSessionDate(sessionDate);\n                    modal.show();\n                    return;\n                })\n                .fail(Notification.exception);\n\n                e.preventDefault();\n            });\n        }\n\n        // Listen the click on the Cancel booking buttons.\n        root.on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n            // eslint-disable-next-line no-alert\n            if (confirm('Cancel booked session?')) {\n                ViewManager.cancelBooking(root, e);\n            }\n        });\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"booking.min.js"}