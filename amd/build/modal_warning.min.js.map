{"version":3,"file":"modal_warning.min.js","sources":["../src/modal_warning.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Generic warning modal.\n *\n * @module     local_booking/modal_warning\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as CustomEvents from 'core/custom_interaction_events';\nimport Modal from 'core/modal';\nimport ModalEvents from 'local_booking/events';\nimport Selectors from 'local_booking/selectors';\n\n/**\n * Constructor for the Modal.\n *\n * @class\n * @param {object} root The root jQuery element for the modal\n */\nexport default class ModalWarning extends Modal {\n    static TYPE = 'local_booking-modal_warning';\n\n    constructor(root) {\n        super(root);\n        this.data = null;\n        this.event = null;\n        this.setRemoveOnClose(true);\n    }\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    registerEventListeners() {\n        // Apply parent event listeners.\n        super.registerEventListeners(this);\n\n        // Handle OK button event and trigger custom event if available\n        this.getModal().on(CustomEvents.events.activate, Selectors.regions.okbutton, function(e, data) {\n            let okEvent = $.Event(this.event ??= ModalEvents.responseOK, {'eventData': this.data});\n            this.getRoot().trigger(okEvent, this);\n\n            if (!okEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n\n        // Handle YES button event and trigger custom event if available\n        this.getModal().on(CustomEvents.events.activate, Selectors.regions.yesbutton, function(e, data) {\n            let yesEvent = $.Event(this.event ??= ModalEvents.responseYES, {'eventData': this.data});\n            this.getRoot().trigger(yesEvent, this);\n\n            if (!yesEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n\n        // Handle NO button event and trigger no event\n        this.getModal().on(CustomEvents.events.activate, Selectors.regions.nobutton, function() {\n            let noEvent = $.Event(ModalEvents.responseNO, {'eventData': this.data});\n            this.getRoot().trigger(noEvent, this);\n\n            if (!noEvent.isDefaultPrevented()) {\n                this.hide();\n            }\n        }.bind(this));\n    }\n\n    /**\n     * Set custom data object to attach to events.\n     *\n     * @param  {array} event A custom event to trigger on valid confirmation (Yes|Ok).\n     * @method setCustomEvent\n     */\n    setCustomEvent(event) {\n        this.event = event;\n\n    }\n\n    /**\n     * Set custom data object to attach to events.\n     *\n     * @param  {array} data Any additional message parameters.\n     * @method setData\n     */\n    setData(data) {\n        this.data = data;\n\n    }\n\n    /**\n     * Get custom data object to attach to events.\n     *\n     * @method setData\n     */\n    getData() {\n        return this.data;\n\n    }\n}\n\nModalWarning.registerModalType();"],"names":["ModalWarning","Modal","constructor","root","data","event","setRemoveOnClose","registerEventListeners","this","getModal","on","CustomEvents","events","activate","Selectors","regions","okbutton","e","okEvent","$","Event","ModalEvents","responseOK","getRoot","trigger","isDefaultPrevented","hide","originalEvent","preventDefault","bind","yesbutton","yesEvent","responseYES","nobutton","noEvent","responseNO","setCustomEvent","setData","getData","registerModalType"],"mappings":"m+CAoCqBA,qBAAqBC,eAGtCC,YAAYC,YACFA,WACDC,KAAO,UACPC,MAAQ,UACRC,kBAAiB,GAQ1BC,+BAEUA,uBAAuBC,WAGxBC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUC,mBAAUC,QAAQC,SAAU,SAASC,EAAGb,0BACjFc,QAAUC,gBAAEC,0BAAMZ,KAAKH,yCAALG,KAAKH,MAAUgB,gBAAYC,WAAY,WAAcd,KAAKJ,YAC3EmB,UAAUC,QAAQN,QAASV,MAE3BU,QAAQO,4BACJC,OACLtB,KAAKuB,cAAcC,mBAEzBC,KAAKrB,YAGFC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUC,mBAAUC,QAAQe,UAAW,SAASb,EAAGb,2BAClF2B,SAAWZ,gBAAEC,2BAAMZ,KAAKH,2CAALG,KAAKH,MAAUgB,gBAAYW,YAAa,WAAcxB,KAAKJ,YAC7EmB,UAAUC,QAAQO,SAAUvB,MAE5BuB,SAASN,4BACLC,OACLtB,KAAKuB,cAAcC,mBAEzBC,KAAKrB,YAGFC,WAAWC,GAAGC,aAAaC,OAAOC,SAAUC,mBAAUC,QAAQkB,SAAU,eACrEC,QAAUf,gBAAEC,MAAMC,gBAAYc,WAAY,WAAc3B,KAAKJ,YAC5DmB,UAAUC,QAAQU,QAAS1B,MAE3B0B,QAAQT,2BACJC,QAEXG,KAAKrB,OASX4B,eAAe/B,YACNA,MAAQA,MAUjBgC,QAAQjC,WACCA,KAAOA,KAShBkC,iBACW9B,KAAKJ,mEA/EF,iDADGJ,oHAqFrBA,aAAauC"}