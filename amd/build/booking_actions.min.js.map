{"version":3,"sources":["../src/booking_actions.js"],"names":["define","$","Str","Notification","CustomEvents","Modal","ModalRegistry","ModalFactory","ModalEvents","Pending","ModalLogentryForm","Repository","BookingEvents","ModalDelete","BookingSelectors","ViewManager","confirmDeletion","logentryId","studentId","courseId","pendingPromise","deleteStrings","key","component","deletePromise","push","create","type","types","SAVE_CANCEL","stringsPromise","get_strings","finalPromise","when","then","strings","deleteModal","setRemoveOnClose","setTitle","setBody","setSaveButtonText","show","getRoot","on","save","deleteLogentry","trigger","deleted","resolve","catch","exception","modal","registerBookingConfirm","root","actions","bookingConfirm","e","sessionOption","find","logentryItem","exerciseId","data","bookingwrapper","userId","time","location","href","M","cfg","wwwroot","preventDefault","registerRedirect","gotoFeedback","logentrySource","modId","registerDelete","cancelBooking","comment","startLoading","target","bookingId","dataset","bookingid","response","validationerror","alert","get_string","always","canceled","fetchNotifications","stopLoading","fail","overrideRestriction","bookConfirmation","overrideWaitRestriction","registerLogentryFormModal","logentryFormPromise","TYPE","large","registerActionListeners","logentryFormModalPromise","addLogentry","sessionDate","bookingWrapper","setSessionDate","setExerciseId","setStudentId","setCourseId","setContextId","stopImmediatePropagation","editLogentry","setLogentryId"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle CRUD operations within the UI.\n * Improvised from core_calendar.\n *\n * @module     local_booking/booking_actions\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/modal_logentry_form',\n    'local_booking/repository',\n    'local_booking/events',\n    'local_booking/modal_delete',\n    'local_booking/selectors',\n    'local_booking/booking_view_manager',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    ModalFactory,\n    ModalEvents,\n    Pending,\n    ModalLogentryForm,\n    Repository,\n    BookingEvents,\n    ModalDelete,\n    BookingSelectors,\n    ViewManager,\n) {\n\n    /**\n     * Cancel a specific booking and trigger update UI event.\n     *\n     * @method  cancelBooking\n     * @param   {object} root     The My Bookings root element\n     * @param   {object} e        The click event on the Cancel button\n     * @param   {string} comment  The click event on the Cancel button\n     * @return  {object} The create modal promise\n     */\n    var cancelBooking = (root, e, comment) => {\n        ViewManager.startLoading(root);\n\n        var target = e.target;\n        // Get course id and booking id\n        const courseId = courseId || root.find(BookingSelectors.bookingwrapper).data('courseid');\n        const bookingId = target.dataset.bookingid;\n\n        // Send the request data to the server for processing.\n        return Repository.cancelBooking(bookingId, comment)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert(Str.get_string('errorlogentrycancel', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                $('body').trigger(BookingEvents.canceled, [root, false]);\n                Notification.fetchNotifications();\n                ViewManager.stopLoading(root);\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Overrides the availability wait restriction for a student.\n     *\n     * @method  overrideRestriction\n     * @param   {object} root   The My Bookings root element\n     * @return  {bool}          The result of the webservice call\n     */\n    var overrideRestriction = (root) => {\n        ViewManager.startLoading(root);\n\n        // Get course id and booking id\n        const studentId = root.find(BookingSelectors.bookConfirmation).data('studentid');\n\n        // Send the request data to the server for processing.\n        return Repository.overrideWaitRestriction(studentId)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert(Str.get_string('bookingavailabilityoverrideunable', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                Notification.fetchNotifications();\n                ViewManager.stopLoading(root);\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Prepares the action for the summary modal's delete action.\n     *\n     * @method  confirmDeletion\n     * @param   {Number} logentryId The ID of the logentry.\n     * @param   {Number} studentId The student of the logentry.\n     * @param   {Number} courseId The course of the logentry.\n     * @return  {Promise}\n     */\n    var confirmDeletion = (logentryId, studentId, courseId) => {\n        var pendingPromise = new Pending('local_booking/booking_actions:confirmDeletion');\n        var deleteStrings = [\n            {\n                key: 'deletelogentry',\n                component: 'local_booking'\n            },\n        ];\n\n        var deletePromise;\n        deleteStrings.push({\n            key: 'confirmlogentrydelete',\n            component: 'local_booking'\n        });\n\n\n        deletePromise = ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n        });\n\n        var stringsPromise = Str.get_strings(deleteStrings);\n\n        // Setup modal delete prompt form\n        var finalPromise = $.when(stringsPromise, deletePromise)\n        .then(function(strings, deleteModal) {\n            deleteModal.setRemoveOnClose(true);\n            deleteModal.setTitle(strings[0]);\n            deleteModal.setBody(strings[1]);\n            deleteModal.setSaveButtonText(strings[0]);\n\n            deleteModal.show();\n\n            deleteModal.getRoot().on(ModalEvents.save, function() {\n                var pendingPromise = new Pending('local_booking/booking_actions:initModal:deletedlogentry');\n                Repository.deleteLogentry(logentryId, studentId, courseId)\n                    .then(function() {\n                        $('body').trigger(BookingEvents.deleted, [logentryId, false]);\n                        return;\n                    })\n                    .then(pendingPromise.resolve)\n                    .catch(Notification.exception);\n            });\n\n            return deleteModal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n\n        return finalPromise;\n    };\n\n    /**\n     * Create the logentry form modal for creating new logentries and\n     * editing existing logentries.\n     *\n     * @method  registerLogentryFormModal\n     * @param   {object} root The progression booking root element\n     * @return  {promise} The create modal promise\n     */\n     var registerLogentryFormModal = () => {\n        var logentryFormPromise = ModalFactory.create({\n            type: ModalLogentryForm.TYPE,\n            large: true\n        });\n\n        return logentryFormPromise;\n    };\n\n    /**\n     * Register the listeners required to edit the logentry.\n     *\n     * @method  registerActionListeners\n     * @param   {jQuery} root\n     * @param   {Promise} logentryFormModalPromise\n     * @returns {Promise}\n     */\n    var registerActionListeners = (root, logentryFormModalPromise) => {\n        var pendingPromise = new Pending('local_booking/booking_actions:registerActionListeners');\n\n        return logentryFormModalPromise\n        .then(function(modal) {\n            // Show the logentry form modal form when the user clicks\n            // on a session in the progression booking view to edit a logentry\n            $('body').on(BookingEvents.addLogentry, function(e, exerciseId, studentId, sessionDate) {\n                var bookingWrapper = root.find(BookingSelectors.bookingwrapper);\n                modal.setSessionDate(sessionDate);\n                modal.setExerciseId(exerciseId);\n                modal.setStudentId(studentId);\n                modal.setCourseId(bookingWrapper.data('courseid'));\n                modal.setContextId(bookingWrapper.data('contextid'));\n                modal.show();\n\n                e.stopImmediatePropagation();\n            });\n            // Show the logentry form modal form when the user clicks\n            // on a session in the progression booking view to edit a logentry\n            $('body').on(BookingEvents.editLogentry, function(e, logentryId, studentId, sessionDate) {\n                var bookingWrapper = root.find(BookingSelectors.bookingwrapper);\n                modal.setSessionDate(sessionDate);\n                modal.setLogentryId(logentryId);\n                modal.setStudentId(studentId);\n                modal.setCourseId(bookingWrapper.data('courseid'));\n                modal.setContextId(bookingWrapper.data('contextid'));\n                modal.show();\n\n                e.stopImmediatePropagation();\n            });\n            return modal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n    };\n\n    /**\n     * Register the listeners required to delete the logentry.\n     *\n     * @method  registerDelete\n     * @param   {jQuery} root\n     */\n     var registerDelete = (root) => {\n        root.on('click', BookingSelectors.actions.deleteLogentry, function(e) {\n            // Fetch the logentry title, and pass them into the new dialogue.\n            var logentrySource = root.find(BookingSelectors.logentryItem),\n                logentryId = logentrySource.data('logentryId'),\n                studentId = logentrySource.data('studentId'),\n                courseId = logentrySource.data('courseId');\n            confirmDeletion(logentryId, studentId, courseId);\n\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Register the listeners required to redirect to\n     * exercise (assignment) grading page.\n     *\n     * @method  registerBookingConfirm\n     * @param   {jQuery} root\n     */\n     var registerBookingConfirm = (root) => {\n        root.on('click', BookingSelectors.actions.bookingConfirm, function(e) {\n            // Fetch the data from the session option selected and redirect to the student's availability\n            var sessionOption = root.find(BookingSelectors.logentryItem),\n                exerciseId = sessionOption.data('exercise-id');\n            const courseId = root.find(BookingSelectors.bookingwrapper).data('courseid');\n            const userId = root.find(BookingSelectors.bookingwrapper).data('studentid');\n            const time = root.find(BookingSelectors.bookingwrapper).data('week');\n\n            // Redirect to the grading and feedback page\n            location.href = `${M.cfg.wwwroot}/local/booking/availability.php?course=\n                ${courseId}&exid=${exerciseId}&userid=${userId}&action=book&time=${time}&view=user`;\n\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Register the listeners required to redirect to\n     * exercise (assignment) grading page.\n     *\n     * @method  registerRedirect\n     * @param   {jQuery} root\n     */\n     var registerRedirect = (root) => {\n        root.on('click', BookingSelectors.actions.gotoFeedback, function(e) {\n            // Fetch the exercise and user id and redirect to assignment submission & grading\n            var logentrySource = root.find(BookingSelectors.logentryItem),\n                modId = logentrySource.data('exerciseId'),\n                userId = logentrySource.data('studentId');\n                $('body').trigger(BookingEvents.gotoFeedback, [modId]);\n\n                // Redirect to the grading and feedback page\n                location.href = M.cfg.wwwroot + '/mod/assign/view.php?id=' + modId +\n                    '&rownum=0&userid=' + userId + '&action=grader';\n\n            e.preventDefault();\n        });\n    };\n\n    return {\n        registerBookingConfirm: registerBookingConfirm,\n        registerRedirect: registerRedirect,\n        registerDelete: registerDelete,\n        cancelBooking: cancelBooking,\n        overrideRestriction: overrideRestriction,\n        registerLogentryFormModal: registerLogentryFormModal,\n        registerActionListeners: registerActionListeners\n    };\n});\n"],"file":"booking_actions.min.js"}