{"version":3,"sources":["../src/booking_actions.js"],"names":["define","$","Str","Notification","CustomEvents","Modal","ModalRegistry","ModalFactory","ModalEvents","Pending","ModalLogentryForm","Repository","BookingEvents","ModalDelete","BookingSelectors","ViewManager","confirmDeletion","logentryId","studentId","courseId","pendingPromise","deleteStrings","key","component","deletePromise","push","create","type","types","SAVE_CANCEL","stringsPromise","get_strings","finalPromise","when","then","strings","deleteModal","setRemoveOnClose","setTitle","setBody","setSaveButtonText","show","getRoot","on","save","deleteLogentry","trigger","deleted","resolve","catch","exception","modal","registerRedirect","root","actions","gotoFeedback","e","logentrySource","find","logentryItem","modId","data","userId","location","href","M","cfg","wwwroot","preventDefault","registerDelete","delete","registerEditListeners","logentryFormModalPromise","editLogentry","sessionDate","bookingWrapper","progressionwrapper","setLogentryId","setStudentId","setCourseId","setContextId","stopImmediatePropagation","cancelBooking","comment","startLoading","target","bookingId","dataset","bookingid","response","validationerror","alert","get_string","always","canceled","fetchNotifications","stopLoading","fail"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A module to handle CRUD operations within the UI.\n * Improvised from core_calendar.\n *\n * @module     local_booking/booking_actions\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/modal_logentry_form',\n    'local_booking/repository',\n    'local_booking/events',\n    'local_booking/modal_delete',\n    'local_booking/selectors',\n    'local_booking/view_manager',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    ModalFactory,\n    ModalEvents,\n    Pending,\n    ModalLogentryForm,\n    Repository,\n    BookingEvents,\n    ModalDelete,\n    BookingSelectors,\n    ViewManager,\n) {\n\n    /**\n     * Cancel a specific booking and trigger update UI event.\n     *\n     * @method cancelBooking\n     * @param {object} root     The My Bookings root element\n     * @param {object} e        The click event on the Cancel button\n     * @param {string} comment  The click event on the Cancel button\n     * @return {object} The create modal promise\n     */\n    var cancelBooking = (root, e, comment) => {\n        ViewManager.startLoading(root);\n\n        var target = e.target;\n        // Get course id and booking id\n        const courseId = courseId || root.find(BookingSelectors.progressionwrapper).data('courseid');\n        const bookingId = target.dataset.bookingid;\n\n        // Send the request data to the server for processing.\n        return Repository.cancelBooking(bookingId, comment)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert(Str.get_string('errorlogentrycancel', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                $('body').trigger(BookingEvents.canceled, [root, false]);\n                Notification.fetchNotifications();\n                ViewManager.stopLoading(root);\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Prepares the action for the summary modal's delete action.\n     *\n     * @param {Number} logentryId The ID of the logentry.\n     * @param {Number} studentId The student of the logentry.\n     * @param {Number} courseId The course of the logentry.\n     * @return {Promise}\n     */\n    function confirmDeletion(logentryId, studentId, courseId) {\n        var pendingPromise = new Pending('local_booking/booking_actions:confirmDeletion');\n        var deleteStrings = [\n            {\n                key: 'deletelogentry',\n                component: 'local_booking'\n            },\n        ];\n\n        var deletePromise;\n        deleteStrings.push({\n            key: 'confirmlogentrydelete',\n            component: 'local_booking'\n        });\n\n\n        deletePromise = ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n        });\n\n        var stringsPromise = Str.get_strings(deleteStrings);\n\n        var finalPromise = $.when(stringsPromise, deletePromise)\n        .then(function(strings, deleteModal) {\n            deleteModal.setRemoveOnClose(true);\n            deleteModal.setTitle(strings[0]);\n            deleteModal.setBody(strings[1]);\n            deleteModal.setSaveButtonText(strings[0]);\n\n            deleteModal.show();\n\n            deleteModal.getRoot().on(ModalEvents.save, function() {\n                var pendingPromise = new Pending('local_booking/booking_actions:initModal:deletedlogentry');\n                Repository.deleteLogentry(logentryId, studentId, courseId)\n                    .then(function() {\n                        $('body').trigger(BookingEvents.deleted, [logentryId, false]);\n                        return;\n                    })\n                    .then(pendingPromise.resolve)\n                    .catch(Notification.exception);\n            });\n\n            return deleteModal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n\n        return finalPromise;\n    }\n\n    /**\n     * Register the listeners required to delete the logentry.\n     *\n     * @param   {jQuery} root\n     */\n     function registerDelete(root) {\n        root.on('click', BookingSelectors.actions.delete, function(e) {\n            // Fetch the logentry title, and pass them into the new dialogue.\n            var logentrySource = root.find(BookingSelectors.logentryItem),\n                logentryId = logentrySource.data('logentryId'),\n                studentId = logentrySource.data('studentId'),\n                courseId = logentrySource.data('courseId');\n            confirmDeletion(logentryId, studentId, courseId);\n\n            e.preventDefault();\n        });\n    }\n\n    /**\n     * Register the listeners required to redirect to\n     * assignment grading page.\n     *\n     * @param   {jQuery} root\n     */\n    function registerRedirect(root) {\n        root.on('click', BookingSelectors.actions.gotoFeedback, function(e) {\n            // Fetch the logentry title, and pass them into the new dialogue.\n            var logentrySource = root.find(BookingSelectors.logentryItem),\n                modId = logentrySource.data('exerciseId'),\n                userId = logentrySource.data('studentId');\n                $('body').trigger(BookingEvents.gotoFeedback, [modId]);\n\n                // Redirect to the grading and feedback page\n                location.href = M.cfg.wwwroot + '/mod/assign/view.php?id=' + modId +\n                    '&rownum=0&userid=' + userId + '&action=grader';\n\n            e.preventDefault();\n        });\n    }\n\n    /**\n     * Register the listeners required to edit the logentry.\n     *\n     * @param   {jQuery} root\n     * @param   {Promise} logentryFormModalPromise\n     * @returns {Promise}\n     */\n    function registerEditListeners(root, logentryFormModalPromise) {\n        var pendingPromise = new Pending('local_booking/booking_actions:registerEditListeners');\n\n        return logentryFormModalPromise\n        .then(function(modal) {\n            // When something within the progression booking tells us the user wants\n            // to edit an logentry then show the logentry form modal.\n            $('body').on(BookingEvents.editLogentry, function(e, logentryId, studentId, sessionDate) {\n                var bookingWrapper = root.find(BookingSelectors.progressionwrapper);\n                modal.setLogentryId(sessionDate);\n                modal.setLogentryId(logentryId);\n                modal.setStudentId(studentId);\n                modal.setCourseId(bookingWrapper.data('courseid'));\n                modal.setContextId(bookingWrapper.data('contextId'));\n                modal.show();\n\n                e.stopImmediatePropagation();\n            });\n            return modal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n    }\n\n    return {\n        registerRedirect: registerRedirect,\n        registerDelete: registerDelete,\n        registerEditListeners: registerEditListeners,\n        cancelBooking: cancelBooking\n    };\n});\n"],"file":"booking_actions.min.js"}