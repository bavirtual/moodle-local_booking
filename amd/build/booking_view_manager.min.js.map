{"version":3,"file":"booking_view_manager.min.js","sources":["../src/booking_view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry view changes.\n *\n * @module     local_booking/booking_view_manager\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport ModalEvents from 'core/modal_events';\nimport ModalLogentrySummaryForm from 'local_booking/logentry_view_modal';\nimport BookingCancelForm from 'local_booking/booking_cancel_modal';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Refresh student progression and mybookings content.\n *\n * @method  refreshBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} contextId The context id for the course\n * @param   {number} userId The user id for single user booking view.\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @param   {string} filter The filter to show students, inactive (including graduates), suspended, and default to active.\n * @return  {promise}\n */\nexport const refreshBookingsContent = (root, courseId, contextId, userId = 0, target = null, filter = null) => {\n    startLoading(root);\n\n    const bookingtemplate = root.attr('data-template'),\n        bookingtarget = target || root.find(Selectors.wrappers.bookingwrapper);\n    courseId = courseId || root.find(Selectors.wrappers.bookingwrapper).data('courseid');\n    contextId = contextId || root.find(Selectors.wrappers.bookingwrapper).data('contextid');\n    filter = filter || 'active';\n\n    M.util.js_pending([root.get('id'), courseId, contextId].join('-'));\n    return Repository.getBookingsData(courseId, filter, userId)\n        .then((context) => {\n            return Templates.render(bookingtemplate, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(bookingtarget, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, contextId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Refresh student progression and mybookings content.\n *\n * @method  refreshMyBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} contextId The context id for the course\n * @param   {object} template The template to be used\n * @return  {promise}\n */\nexport const refreshMyBookingsContent = (root, courseId, contextId, template = null) => {\n    startLoading(root);\n\n    const mybookingstemplate = template || root.attr('data-template'),\n        mybookingstarget = root.find(Selectors.wrappers.mybookingswrapper);\n    courseId = courseId || root.find(Selectors.wrappers.mybookingswrapper).data('courseid');\n    contextId = contextId || root.find(Selectors.wrappers.mybookingswrapper).data('contextid');\n\n    M.util.js_pending([root.get('id'), courseId, contextId].join('-'));\n    return Repository.getInstructorBookingsData(courseId)\n        .then((context) => {\n            return Templates.render(mybookingstemplate, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(mybookingstarget, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, contextId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Render the logentry new/edit modal.\n *\n * @method  renderLogentryEditForm\n * @param   {object} root       The container element\n * @param   {object} e          The triggered event.\n * @param   {object} LogentryFormPromise  The Logentry form promise.\n * @param   {object} target     The target element.\n * @param   {Number} contextId  The course context id of the logentry.\n * @param   {number} courseId   The graded session course id.\n * @param   {number} userId     The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @param   {bool}   isNew      Whether the render is for edit.\n * @param   {string} template   The source template for edits.\n * @returns {promise}\n */\n export const renderLogentryEditForm = (root, e, LogentryFormPromise, target, contextId, courseId,\n    userId, logentryId, isNew, template) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentryEditForm');\n\n    return LogentryFormPromise\n    .then(function(modal) {\n\n        // Show the logentry form modal form when the user clicks on a session\n        // in the 'Instructor dashboard' page to add or edit a logentry\n        // eslint-disable-next-line promise/no-nesting\n        LogentryFormPromise.then(function(modal) {\n            var logegntrySession, flightDate, exerciseId, sessionId, flightType, findpirepenabled;\n\n            // Sel elements not meant for new or additional logentries\n            if (isNew) {\n                if (template == 'local_booking/logbook_std') {\n                    // From logbook\n                    flightDate = 0;\n                    exerciseId = 0;\n                    sessionId = 0;\n                    flightType = '';\n                    findpirepenabled = false;\n                } else {\n                    // From dashboard_session_exporter (Instructor dashboard)\n                    logegntrySession = target.closest(Selectors.actions.viewLogEntry);\n                    flightDate = logegntrySession.dataset.flightDate;\n                    exerciseId = logegntrySession.dataset.exerciseId;\n                    sessionId = logegntrySession.dataset.sessionId;\n                    flightType = logegntrySession.dataset.flightType;\n                    findpirepenabled = $(Selectors.wrappers.bookingwrapper).data('findpirep');\n                }\n            } else {\n                if (template == 'local_booking/logbook_std') {\n                    // From logbook\n                    let logegntrySession = target.closest(Selectors.containers.summaryForm);\n                    flightDate = logegntrySession.dataset.flightDate;\n                    exerciseId = logegntrySession.dataset.exerciseId;\n                    sessionId = logegntrySession.dataset.sessionId;\n                    flightType = logegntrySession.dataset.flightType;\n                } else {\n                    // From logentry_view\n                    logegntrySession = root.find(Selectors.containers.summaryForm);\n                    flightDate = logegntrySession.data('flight-date');\n                    exerciseId = logegntrySession.data('exercise-id');\n                    sessionId = logegntrySession.data('session-id');\n                    flightType = logegntrySession.data('flight-type');\n                    findpirepenabled = logegntrySession.data('find-pirep');\n                }\n            }\n\n            // Set form properties\n            modal.setContextId(contextId);\n            modal.setCourseId(courseId);\n            modal.setUserId(userId);\n            modal.setLogentryId(logentryId);\n            modal.setExerciseId(exerciseId);\n            modal.setSessionId(sessionId);\n            modal.setFlightDate(flightDate);\n            modal.setFlightType(flightType);\n            modal.hasFindPIREP(findpirepenabled);\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            modal.show();\n            e.stopImmediatePropagation();\n            return false;\n        }).catch(Notification.exception);\n        return modal;\n    })\n    .then(function(modal) {\n        pendingPromise.resolve();\n        return modal;\n    })\n    .catch(Notification.exception);\n };\n\n/**\n * Render the logentry summary modal.\n *\n * @method  renderLogentrySummaryModal\n * @param   {number} courseId The graded session course id.\n * @param   {number} userId The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @returns {promise}\n */\n export const renderLogentrySummaryModal = (courseId, userId, logentryId) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentrySummaryModal');\n\n    // Booking repository promise.\n    return Repository.getLogentryById(logentryId, courseId, userId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.logentry) {\n            throw new Error(Str.get_string('errorlogentryfetch', 'local_booking') + logentryId);\n        }\n\n        return getEventResponse.logentry;\n    })\n    .then(logentryData => {\n        // Build the modal parameters from the logentry data.\n        const modalParams = {\n            title: Str.get_string('logentry', 'local_booking'),\n            body: Templates.render('local_booking/logentry_summary_body', logentryData)\n        };\n\n        // Create the modal.\n        return ModalLogentrySummaryForm.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Render the logentry summary modal.\n *\n * @method  renderCancelBookingModal\n * @param   {object} e Cancel button click event\n * @returns {promise}\n */\nexport const renderCancelBookingConfirmation = async(e) => {\n    const target = e.target,\n        bookingId = target.dataset.bookingid,\n        modal = await BookingCancelForm.create({});\n\n    modal.setBookingId(bookingId);\n    return modal.show();\n};\n\n/**\n * Set the element state to loading.\n *\n * @method  startLoading\n * @param   {object} root The container element\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @method  stopLoading\n * @param   {object} root The container element\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n"],"names":["root","courseId","contextId","userId","target","filter","startLoading","bookingtemplate","attr","bookingtarget","find","Selectors","wrappers","bookingwrapper","data","M","util","js_pending","get","join","Repository","getBookingsData","then","context","Templates","render","html","js","replaceNode","always","js_complete","stopLoading","fail","Notification","exception","template","mybookingstemplate","mybookingstarget","mybookingswrapper","getInstructorBookingsData","e","LogentryFormPromise","logentryId","isNew","pendingPromise","Pending","modal","logegntrySession","flightDate","exerciseId","sessionId","flightType","findpirepenabled","closest","actions","viewLogEntry","dataset","containers","summaryForm","setContextId","setCourseId","setUserId","setLogentryId","setExerciseId","setSessionId","setFlightDate","setFlightType","hasFindPIREP","getRoot","on","ModalEvents","hidden","destroy","show","stopImmediatePropagation","catch","resolve","getLogentryById","getEventResponse","logentry","Error","Str","get_string","logentryData","modalParams","title","body","ModalLogentrySummaryForm","create","async","bookingId","bookingid","BookingCancelForm","setBookingId","loadingIcon","removeClass","one","this","addClass"],"mappings":"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"}