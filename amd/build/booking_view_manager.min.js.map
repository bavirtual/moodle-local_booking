{"version":3,"sources":["../src/booking_view_manager.js"],"names":["refreshInstructorDashboardContent","root","courseId","categoryId","target","startLoading","template","attr","find","Selectors","bookingwrapper","data","M","util","js_pending","get","join","Repository","getBookingsData","then","context","viewingbooking","Templates","render","html","js","replaceNode","always","js_complete","stopLoading","fail","Notification","exception","refreshMyBookingsContent","mybookingswrapper","renderLogentryModal","e","LogentryFormPromise","contextId","userId","logentryId","isNew","pendingPromise","Pending","modal","logegntrySession","flightDate","exerciseId","closest","actions","viewLogEntry","dataset","containers","summaryForm","setContextId","setCourseId","setUserId","setLogentryId","setExerciseId","setFlightDate","getRoot","on","ModalEvents","hidden","destroy","show","stopImmediatePropagation","resolve","catch","renderLogentrySummaryModal","getLogentryById","getEventResponse","logentry","Error","Str","get_string","logentryData","modalParams","title","type","ModalLogentrySummaryForm","TYPE","body","ModalFactory","create","loadingIconContainer","loadingIcon","removeClass","one","addClass"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry view changes.\n *\n * @module     local_booking/booking_view_manager\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport ModalLogentrySummaryForm from 'local_booking/modal_logentry_summary';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Refresh student progression content.\n *\n * @method  refreshInstructorDashboardContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} categoryId The id of the category associated with the progression view shown\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @return  {promise}\n */\nexport const refreshInstructorDashboardContent = (root, courseId, categoryId, target = null) => {\n    startLoading(root);\n\n    const template = root.attr('data-template');\n    target = target || root.find(Selectors.bookingwrapper);\n    courseId = courseId || root.find(Selectors.bookingwrapper).data('courseid');\n    M.util.js_pending([root.get('id'), courseId, categoryId].join('-'));\n    return Repository.getBookingsData(courseId)\n        .then((context) => {\n            context.viewingbooking = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Refresh my bookings content.\n *\n * @method  refreshMyBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} categoryId The id of the category associated with the progression view shown\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @param   {string} template The template to be rendered.\n * @return  {promise}\n */\n export const refreshMyBookingsContent = (root, courseId) => {\n    startLoading(root);\n\n    const target = root.find(Selectors.mybookingswrapper);\n    courseId = courseId || root.find(Selectors.bookingwrapper).data('courseid');\n    M.util.js_pending([root.get('id'), courseId].join('-'));\n    return Repository.getBookingsData(courseId)\n        .then((context) => {\n            context.viewingbooking = true;\n            return Templates.render('local_booking/my_bookings', context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Render the logentry new/edit modal.\n *\n * @method  renderLogentryModal\n * @param   {object} root       The container element\n * @param   {object} e          The triggered event.\n * @param   {Number} LogentryFormPromise  The Logentry form promise.\n * @param   {object} target     The target element.\n * @param   {Number} contextId  The course context id of the logentry.\n * @param   {number} courseId   The graded session course id.\n * @param   {number} userId     The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @param   {bool}   isNew      Whether the render is for edit.\n * @returns {promise}\n */\n export const renderLogentryModal = (root, e, LogentryFormPromise, target, contextId, courseId, userId, logentryId, isNew) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentryModal');\n\n    return LogentryFormPromise\n    .then(function(modal) {\n        // Show the logentry form modal form when the user clicks on a session\n        // in the 'Instructor dashboard' page to add or edit a logentry\n        LogentryFormPromise.then(function(modal) {\n            var logegntrySession, flightDate, exerciseId;\n\n            // Sel elements not meant for new or additional logentries\n            if (isNew) {\n                logegntrySession = target.closest(Selectors.actions.viewLogEntry);\n                flightDate = logegntrySession.dataset.flightDate;\n                exerciseId = logegntrySession.dataset.exerciseId;\n            } else {\n                logegntrySession = root.find(Selectors.containers.summaryForm);\n                flightDate = logegntrySession.data('flight-date');\n                exerciseId = logegntrySession.data('exercise-id');\n            }\n\n            // Set form properties\n            modal.setContextId(contextId);\n            modal.setCourseId(courseId);\n            modal.setUserId(userId);\n            modal.setLogentryId(logentryId);\n            modal.setExerciseId(exerciseId);\n            modal.setFlightDate(flightDate);\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            modal.show();\n            e.stopImmediatePropagation();\n            return;\n        })\n        .fail(Notification.exception);\n        return modal;\n    })\n    .then(function(modal) {\n        pendingPromise.resolve();\n        return modal;\n    })\n    .catch(Notification.exception);\n };\n\n/**\n * Render the logentry summary modal.\n *\n * @method  renderLogentrySummaryModal\n * @param   {number} courseId The graded session course id.\n * @param   {number} userId The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @returns {promise}\n */\n export const renderLogentrySummaryModal = (courseId, userId, logentryId) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentrySummaryModal');\n\n    // Booking repository promise.\n    return Repository.getLogentryById(logentryId, courseId, userId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.logentry) {\n            throw new Error(Str.get_string('errorlogentryfetch', 'local_booking') + logentryId);\n        }\n\n        return getEventResponse.logentry;\n    })\n    .then(logentryData => {\n        // Build the modal parameters from the logentry data.\n        const modalParams = {\n            title: Str.get_string('logentry', 'local_booking'),\n            type: ModalLogentrySummaryForm.TYPE,\n            body: Templates.render('local_booking/logentry_summary_body', logentryData)\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Set the element state to loading.\n *\n * @method  startLoading\n * @param   {object} root The container element\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @method  stopLoading\n * @param   {object} root The container element\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n"],"file":"booking_view_manager.min.js"}