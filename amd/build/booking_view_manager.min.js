define("local_booking/booking_view_manager",["exports","jquery","core/str","core/templates","core/notification","core/pending","core/modal_events","local_booking/logentry_modal_summary","local_booking/repository","local_booking/selectors"],(function(_exports,_jquery,Str,_templates,_notification,_pending,_modal_events,_logentry_modal_summary,Repository,Selectors){function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}
/**
   * This module handles session booking and logentry view changes.
   *
   * @module     local_booking/booking_view_manager
   * @author     Mustafa Hajjar (mustafahajjar@gmail.com)
   * @copyright  BAVirtual.co.uk Â© 2024
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.stopLoading=_exports.startLoading=_exports.renderLogentrySummaryModal=_exports.renderLogentryEditForm=_exports.refreshInstructorBookingsContent=_exports.refreshBookingsContent=void 0,_jquery=_interopRequireDefault(_jquery),Str=_interopRequireWildcard(Str),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification),_pending=_interopRequireDefault(_pending),_modal_events=_interopRequireDefault(_modal_events),_logentry_modal_summary=_interopRequireDefault(_logentry_modal_summary),Repository=_interopRequireWildcard(Repository),Selectors=_interopRequireWildcard(Selectors);_exports.refreshBookingsContent=function(root,courseId,contextId){let userId=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,target=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,filter=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;startLoading(root);const bookingtemplate=root.attr("data-template"),bookingtarget=target||root.find(Selectors.bookingwrapper);return courseId=courseId||root.find(Selectors.bookingwrapper).data("courseid"),contextId=contextId||root.find(Selectors.bookingwrapper).data("contextid"),filter=filter||"active",M.util.js_pending([root.get("id"),courseId,contextId].join("-")),Repository.getBookingsData(courseId,filter,userId).then((context=>_templates.default.render(bookingtemplate,context))).then(((html,js)=>_templates.default.replaceNode(bookingtarget,html,js))).always((()=>(M.util.js_complete([root.get("id"),courseId,contextId].join("-")),stopLoading(root)))).fail(_notification.default.exception)};_exports.refreshInstructorBookingsContent=function(root,courseId,contextId){let template=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;startLoading(root);const mybookingstemplate=template||root.attr("data-template"),mybookingstarget=root.find(Selectors.mybookingswrapper);return courseId=courseId||root.find(Selectors.mybookingswrapper).data("courseid"),contextId=contextId||root.find(Selectors.mybookingswrapper).data("contextid"),M.util.js_pending([root.get("id"),courseId,contextId].join("-")),Repository.getInstructorBookingsData(courseId).then((context=>_templates.default.render(mybookingstemplate,context))).then(((html,js)=>_templates.default.replaceNode(mybookingstarget,html,js))).always((()=>(M.util.js_complete([root.get("id"),courseId,contextId].join("-")),stopLoading(root)))).fail(_notification.default.exception)};_exports.renderLogentryEditForm=(root,e,LogentryFormPromise,target,contextId,courseId,userId,logentryId,isNew,template)=>{const pendingPromise=new _pending.default("local_booking/booking_view_manager:renderLogentryEditForm");return LogentryFormPromise.then((function(modal){return LogentryFormPromise.then((function(modal){var logegntrySession,flightDate,exerciseId,sessionId,flightType,findpirepenabled;if(isNew)"local_booking/logbook_std"==template?(flightDate=0,exerciseId=0,sessionId=0,flightType="",findpirepenabled=!1):(flightDate=(logegntrySession=target.closest(Selectors.actions.viewLogEntry)).dataset.flightDate,exerciseId=logegntrySession.dataset.exerciseId,sessionId=logegntrySession.dataset.sessionId,flightType=logegntrySession.dataset.flightType,findpirepenabled=(0,_jquery.default)(Selectors.bookingwrapper).data("findpirep"));else if("local_booking/logbook_std"==template){let logegntrySession=target.closest(Selectors.containers.summaryForm);flightDate=logegntrySession.dataset.flightDate,exerciseId=logegntrySession.dataset.exerciseId,sessionId=logegntrySession.dataset.sessionId,flightType=logegntrySession.dataset.flightType}else flightDate=(logegntrySession=root.find(Selectors.containers.summaryForm)).data("flight-date"),exerciseId=logegntrySession.data("exercise-id"),sessionId=logegntrySession.data("session-id"),flightType=logegntrySession.data("flight-type"),findpirepenabled=logegntrySession.data("find-pirep");return modal.setContextId(contextId),modal.setCourseId(courseId),modal.setUserId(userId),modal.setLogentryId(logentryId),modal.setExerciseId(exerciseId),modal.setSessionId(sessionId),modal.setFlightDate(flightDate),modal.setFlightType(flightType),modal.hasFindPIREP(findpirepenabled),modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),modal.show(),e.stopImmediatePropagation(),!1})).catch(_notification.default.exception),modal})).then((function(modal){return pendingPromise.resolve(),modal})).catch(_notification.default.exception)};_exports.renderLogentrySummaryModal=(courseId,userId,logentryId)=>{const pendingPromise=new _pending.default("local_booking/booking_view_manager:renderLogentrySummaryModal");return Repository.getLogentryById(logentryId,courseId,userId).then((getEventResponse=>{if(!getEventResponse.logentry)throw new Error(Str.get_string("errorlogentryfetch","local_booking")+logentryId);return getEventResponse.logentry})).then((logentryData=>{const modalParams={title:Str.get_string("logentry","local_booking"),body:_templates.default.render("local_booking/logentry_summary_body",logentryData)};return _logentry_modal_summary.default.create(modalParams)})).then((modal=>(modal.getRoot().on(_modal_events.default.hidden,(function(){modal.destroy()})),modal.show(),modal))).then((modal=>(pendingPromise.resolve(),modal))).catch(_notification.default.exception)};const startLoading=root=>{root.find(Selectors.containers.loadingIcon).removeClass("hidden"),(0,_jquery.default)(root).one("submit",(function(){(0,_jquery.default)(this).find('input[type="submit"]').attr("disabled","disabled")}))};_exports.startLoading=startLoading;const stopLoading=root=>{root.find(Selectors.containers.loadingIcon).addClass("hidden"),(0,_jquery.default)(root).one("submit",(function(){(0,_jquery.default)(this).find('input[type="submit"]').attr("enabled","enabled")}))};_exports.stopLoading=stopLoading}));

//# sourceMappingURL=booking_view_manager.min.js.map