{"version":3,"sources":["../src/modal_logentry_form.js"],"names":["define","$","Event","Str","Notification","CustomEvents","Modal","ModalRegistry","Fragment","LogbookEvents","Repository","BookingSelectors","registered","SELECTORS","ADVANCED_FORM","SAVE_BUTTON","LOADING_ICON_CONTAINER","ModalLogEntryForm","root","call","logentryId","flightDate","exerciseId","courseId","contextId","userId","reloadingBody","reloadingTitle","saveButton","getFooter","find","TYPE","prototype","Object","create","constructor","setContextId","id","getContextId","setCourseId","getCourseId","hasCourseId","setExerciseId","getExerciseId","hasExerciseId","setUserId","getUserId","hasUserId","setLogentryId","getLogentryId","hasLogentryId","setFlightDate","time","getFlightDate","hasFlightDate","getForm","getBody","disableButtons","prop","enableButtons","reloadTitleContent","titlePromise","get_string","then","string","setTitle","bind","always","fail","exception","reloadBodyContent","formData","bodyPromise","args","userid","logentryid","flightdate","courseid","exerciseid","formdata","loadFragment","setBody","applyFlightOpsDefaults","setInputMask","registerChangeListeners","bookingwrapper","data","Inputmask","mask","document","getElementById","pirep","on","e","isNaN","val","getPIREPData","flighttype","passfail","pictime","onchange","loadingContainer","rule","pirepdiv","parent","p1id","removeClass","findPirep","response","result","length","append","addClass","d","Date","logentry","month","getMonth","day","getDate","year","getFullYear","deptime","hour","substring","minute","indexOf","linkedpirep","depicao","arricao","arrtime","callsign","aircraft","aircraftreg","enginetype","fstd","warnings","message","show","preventDefault","stopPropagation","flighttime","reset","element","value","is","toggle","div","slideDown","slideUp","reloadAllContent","when","hide","getFormData","serialize","save","invalid","first","focus","formArgs","submitCreateUpdateLogentryForm","validationerror","isExisting","trigger","updated","created","fetchNotifications","registerEventListeners","getModal","events","activate","submit","originalEvent","notifyFormSubmitAjax","register"],"mappings":"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","sourcesContent":["/* eslint-disable babel/new-cap */\n/* eslint-disable no-undef */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles logbook entry form.\n *\n * @module     local_booking/modal_logentry_form\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk © 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/event',\n        'core/str',\n        'core/notification',\n        'core/custom_interaction_events',\n        'core/modal',\n        'core/modal_registry',\n        'core/fragment',\n        'local_booking/events',\n        'local_booking/repository',\n        'local_booking/selectors',\n    ],\n    function(\n        $,\n        Event,\n        Str,\n        Notification,\n        CustomEvents,\n        Modal,\n        ModalRegistry,\n        Fragment,\n        LogbookEvents,\n        Repository,\n        BookingSelectors,\n    ) {\n\n    var registered = false;\n    var SELECTORS = {\n        ADVANCED_FORM: '[data-form-type=\"other\"]',\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalLogEntryForm = function(root) {\n        Modal.call(this, root);\n        this.logentryId = null;\n        this.flightDate = null;\n        this.exerciseId = null;\n        this.courseId = null;\n        this.contextId = null;\n        this.userId = null;\n        this.reloadingBody = false;\n        this.reloadingTitle = false;\n        this.saveButton = this.getFooter().find(SELECTORS.SAVE_BUTTON);\n    };\n\n    ModalLogEntryForm.TYPE = 'local_booking-modal_logentry_form';\n    ModalLogEntryForm.prototype = Object.create(Modal.prototype);\n    ModalLogEntryForm.prototype.constructor = ModalLogEntryForm;\n\n    /**\n     * Set the context id to the given value.\n     *\n     * @method setContextId\n     * @param {Number} id The context id\n     */\n    ModalLogEntryForm.prototype.setContextId = function(id) {\n        this.contextId = id;\n    };\n\n    /**\n     * Retrieve the current context id, if any.\n     *\n     * @method getContextId\n     * @return {Number|null} The context id\n     */\n    ModalLogEntryForm.prototype.getContextId = function() {\n        return this.contextId;\n    };\n\n    /**\n     * Set the course id to the given value.\n     *\n     * @method setCourseId\n     * @param {int} id The course id\n     */\n    ModalLogEntryForm.prototype.setCourseId = function(id) {\n        this.courseId = id;\n    };\n\n    /**\n     * Retrieve the current course id, if any.\n     *\n     * @method getCourseId\n     * @return {int|null} The course id\n     */\n    ModalLogEntryForm.prototype.getCourseId = function() {\n        return this.courseId;\n    };\n\n    /**\n     * Check if the modal has an course id.\n     *\n     * @method hasCourseId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasCourseId = function() {\n        return this.courseId !== null;\n    };\n\n    /**\n     * Set the exercise id to the given value.\n     *\n     * @method setExerciseId\n     * @param {int} id The exercise id\n     */\n        ModalLogEntryForm.prototype.setExerciseId = function(id) {\n        this.exerciseId = id;\n    };\n\n    /**\n     * Retrieve the current exercise id, if any.\n     *\n     * @method getExerciseId\n     * @return {int|null} The exercise id\n     */\n    ModalLogEntryForm.prototype.getExerciseId = function() {\n        return this.exerciseId;\n    };\n\n    /**\n     * Check if the modal has an exercise id.\n     *\n     * @method hasExerciseId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasExerciseId = function() {\n        return this.exerciseId !== null;\n    };\n\n    /**\n     * Set the user id to the given value.\n     *\n     * @method setUserId\n     * @param {int} id The user id\n     */\n        ModalLogEntryForm.prototype.setUserId = function(id) {\n        this.userId = id;\n    };\n\n    /**\n     * Retrieve the current user id, if any.\n     *\n     * @method getUserId\n     * @return {int|null} The user id\n     */\n    ModalLogEntryForm.prototype.getUserId = function() {\n        return this.userId;\n    };\n\n    /**\n     * Check if the modal has an user id.\n     *\n     * @method hasUserId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasUserId = function() {\n        return this.userId !== null;\n    };\n\n    /**\n     * Set the logentry id to the given value.\n     *\n     * @method setLogentryId\n     * @param {int} id The logentry id\n     */\n    ModalLogEntryForm.prototype.setLogentryId = function(id) {\n        this.logentryId = id;\n    };\n\n    /**\n     * Retrieve the current logentry id, if any.\n     *\n     * @method getLogentryId\n     * @return {int|null} The logentry id\n     */\n    ModalLogEntryForm.prototype.getLogentryId = function() {\n        return this.logentryId;\n    };\n\n    /**\n     * Check if the modal has an logentry id.\n     *\n     * @method hasLogentryId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasLogentryId = function() {\n        return this.logentryId !== null && this.logentryId != 0;\n    };\n\n    /**\n     * Set the start time to the given value.\n     *\n     * @method setFlightDate\n     * @param {int} time The session date time\n     */\n    ModalLogEntryForm.prototype.setFlightDate = function(time) {\n        this.flightDate = time;\n    };\n\n    /**\n     * Retrieve the current start time, if any.\n     *\n     * @method getFlightDate\n     * @return {int|null} The start time\n     */\n    ModalLogEntryForm.prototype.getFlightDate = function() {\n        return this.flightDate;\n    };\n\n    /**\n     * Check if the modal has session date time.\n     *\n     * @method hasFlightDate\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasFlightDate = function() {\n        return this.flightDate !== null;\n    };\n\n    /**\n     * Get the form element from the modal.\n     *\n     * @method getForm\n     * @return {object}\n     */\n    ModalLogEntryForm.prototype.getForm = function() {\n        return this.getBody().find('form');\n    };\n\n    /**\n     * Disable the buttons in the footer.\n     *\n     * @method disableButtons\n     */\n    ModalLogEntryForm.prototype.disableButtons = function() {\n        this.saveButton.prop('disabled', true);\n    };\n\n    /**\n     * Enable the buttons in the footer.\n     *\n     * @method enableButtons\n     */\n    ModalLogEntryForm.prototype.enableButtons = function() {\n        this.saveButton.prop('disabled', false);\n    };\n\n    /**\n     * Reload the title for the modal to the appropriate value\n     * depending on whether we are creating a new log book entry\n     * or editing an existing one.\n     *\n     * @method reloadTitleContent\n     * @return {object} A promise resolved with the new title text\n     */\n    ModalLogEntryForm.prototype.reloadTitleContent = function() {\n        if (this.reloadingTitle) {\n            return this.titlePromise;\n        }\n\n        this.reloadingTitle = true;\n\n        if (this.hasLogentryId()) {\n            this.titlePromise = Str.get_string('editlogentry', 'local_booking');\n        } else {\n            this.titlePromise = Str.get_string('newlogentry', 'local_booking');\n        }\n\n        this.titlePromise.then(function(string) {\n            this.setTitle(string);\n            return string;\n        }.bind(this))\n        .always(function() {\n            this.reloadingTitle = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.titlePromise;\n    };\n\n    /**\n     * Send a request to the server to get the logentry_form in a fragment\n     * and render the result in the body of the modal.\n     *\n     * If serialised form data is provided then it will be sent in the\n     * request to the server to have the form rendered with the data. This\n     * is used when the form had a server side error and we need the server\n     * to re-render it for us to display the error to the user.\n     *\n     * @method reloadBodyContent\n     * @param {string} formData The serialised form data\n     * @return {object} A promise resolved with the fragment html and js from\n     */\n    ModalLogEntryForm.prototype.reloadBodyContent = function(formData) {\n        if (this.reloadingBody) {\n            return this.bodyPromise;\n        }\n\n        this.reloadingBody = true;\n        this.disableButtons();\n\n        var args = {};\n\n        if (this.hasUserId()) {\n            args.userid = this.getUserId();\n        }\n\n        if (this.hasLogentryId()) {\n            args.logentryid = this.getLogentryId();\n        }\n\n        if (this.hasFlightDate()) {\n            args.flightdate = this.getFlightDate();\n        }\n\n        if (this.hasCourseId()) {\n            args.courseid = this.getCourseId();\n        }\n\n        if (this.hasExerciseId()) {\n            args.exerciseid = this.getExerciseId();\n        }\n\n        if (typeof formData !== 'undefined') {\n            args.formdata = formData;\n        }\n\n        // Get the content of the modal\n        this.bodyPromise = Fragment.loadFragment('local_booking', 'logentry_form', this.getContextId(), args);\n\n        this.setBody(this.bodyPromise);\n\n        this.bodyPromise.then(function() {\n            // Hide/show elements based on training type\n            this.applyFlightOpsDefaults();\n            this.enableButtons();\n            this.setInputMask();\n            this.registerChangeListeners();\n\n            return;\n        }.bind(this))\n        .fail(Notification.exception)\n        .always(function() {\n            this.reloadingBody = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.bodyPromise;\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method setInputMask\n     */\n    ModalLogEntryForm.prototype.setInputMask = function() {\n        // Mask flight times < 5hrs and departure/arrival times to 24hr format\n        if ($(BookingSelectors.bookingwrapper).data('trainingtype') == \"Dual\") {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_dualtime\"));\n        } else {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_multipilottime\"));\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_copilottime\"));\n        }\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_groundtime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_pictime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_instructortime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_picustime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_checkpilottime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_deptime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_arrtime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_nighttime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_ifrtime\"));\n        // Check for new logentries noting landings of both instructor and student\n        if (this.getLogentryId() == 0) {\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1day\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1night\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2day\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2night\"));\n        } else {\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsday\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsnight\"));\n        }\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method registerChangeListeners\n     */\n    ModalLogEntryForm.prototype.registerChangeListeners = function() {\n\n        // PIREP search trigger\n        var pirep = $('#id_p1pirep');\n        pirep.on('change', function(e) {\n            if (!isNaN(pirep.val())) {\n                return this.getPIREPData(e);\n            }\n        }.bind(this));\n\n        // Hide unnecessary elements for Solo flights when checkbox is clicked\n        var flighttype = $('input[name=\"flighttype\"]');\n        flighttype.on('change', function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this));\n\n        // Hide unnecessary elements for Solo flights when checkbox is clicked\n        var passfail = $('input[name=\"passfail\"]');\n        passfail.on('change', function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this));\n\n        // The onchange property has to be set due to the pictime element being masked\n        pictime = document.getElementById(\"id_pictime\");\n        pictime.onchange = function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this);\n    };\n\n    /**\n     * Retrieve and populate log entry data from\n     * the server's PIREP lookup service.\n     *\n     * @method getPIREPData\n     * @param  {object} e The triggered event\n     * @return {object} pirep of the logentry\n     */\n     ModalLogEntryForm.prototype.getPIREPData = function(e) {\n        var loadingContainer = this.getFooter().find(SELECTORS.LOADING_ICON_CONTAINER);\n        rule = $(BookingSelectors.bookingwrapper).data('trainingtype');\n        pirepdiv = $('#id_p1pirep').parent();\n        pirep = $('#id_p1pirep').val();\n        p1id = $('#id_p1id').val();\n        courseid = this.getCourseId();\n\n        loadingContainer.removeClass('hidden');\n        return Repository.findPirep(pirep, courseid, p1id)\n            .then(function(response) {\n                // Handle the response\n                if (response.result) {\n                    // Clean up any past client side errors\n                    $('#id_p1pirep').removeClass('is-invalid');\n                    if (!$('#id_valid_p1pirep').length) {\n                        Str.get_string('pirepfound', 'local_booking').then(function(string) {\n                            pirepdiv.append('<div class=\"form-control-feedback valid-feedback\" id=\"id_valid_p1pirep\" ' +\n                            'tabindex=\"0\" style=\"\">' + string + '</div');\n                            $('#id_p1pirep').addClass('is-valid');\n                            return string;\n                        })\n                        .fail(Notification.exception);\n                    }\n\n                    // Update elements with PIREP returned data depending on\n                    // solo flight status and flight rule (Dual/Multicrew)\n                    var d = new Date(response.logentry.flightdate),\n                        month = '' + (d.getMonth() + 1),\n                        day = '' + d.getDate(),\n                        year = d.getFullYear(),\n                        time = response.logentry.deptime,\n                        hour = time.substring(0, 2),\n                        minute = time.substring(time.indexOf(':') + 1, time.length);\n                    $('#id_flightdate_day').val(day);\n                    $('#id_flightdate_month').val(month);\n                    $('#id_flightdate_year').val(year);\n                    $('#id_flightdate_hour').val(hour);\n                    $('#id_flightdate_minute').val(minute);\n                    if (rule == 'Dual') {\n                        $('#id_dualtime').val(response.logentry.pictime);\n                    } else if (rule == 'Multicrew') {\n                        $('#id_multipilottime').val(response.logentry.pictime);\n                        $('#id_copilottime').val(response.logentry.pictime);\n                        $('#id_ifrtime').val(response.logentry.pictime);\n                    }\n                    $('#id_instructortime').val(response.logentry.pictime);\n                    $('input[name=\"linkedpirep\"]').val(response.logentry.linkedpirep);\n                    $('#id_pictime').val(response.logentry.pictime);\n                    $('#id_depicao').val(response.logentry.depicao);\n                    $('#id_arricao').val(response.logentry.arricao);\n                    $('#id_deptime').val(response.logentry.deptime);\n                    $('#id_arrtime').val(response.logentry.arrtime);\n                    $('#id_callsign').val(response.logentry.callsign);\n                    $('#id_aircraft').val(response.logentry.aircraft);\n                    $('#id_aircraftreg').val(response.logentry.aircraftreg);\n                    $('#id_enginetype').val(response.logentry.enginetype);\n                    $('#id_fstd').val(response.logentry.fstd);\n                } else {\n                    // Display inline error\n                    $('#id_p1pirep').addClass('is-invalid');\n                    if (!$('#id_error2_p1pirep').length) {\n                        pirepdiv.append('<div class=\"form-control-feedback invalid-feedback\" id=\"id_error2_p1pirep\" ' +\n                            'tabindex=\"0\" style=\"\">' + response.warnings[0].message + '</div');\n                    } else {\n                        $('#id_error2_p1pirep').show();\n                    }\n                }\n\n                return;\n            })\n            .always(function() {\n                // Regardless of success or error we should always stop\n                // the loading icon and re-enable the buttons.\n                loadingContainer.addClass('hidden');\n                e.preventDefault();\n                e.stopPropagation();\n\n                return;\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Apply default values based on flight operation\n     * Dual vs Multicrew taking solo flights in conisderation\n     *\n     * @method applyFlightOpsDefaults\n     * @param  {object} e The triggered event\n     * @param  {string} rule The rule to be applied\n     */\n     ModalLogEntryForm.prototype.applyFlightOpsDefaults = function() {\n\n        rule = $(BookingSelectors.bookingwrapper).data('trainingtype');\n        var flighttime = $('#id_pictime').val();\n        var flighttype = $(\"input[name='flighttype']:checked\").val(),\n            passfail = $(\"input[name='passfail']:checked\").val();\n\n        var reset = function(element, value) {\n            if ($(element).is(':hidden')) {\n                $(element).val(value);\n            } else {\n                if (!$(element).val()) {\n                    $(element).val('');\n                }\n            }\n        };\n\n        var toggle = function(div, element, show, value) {\n            if (show) {\n                $(div).slideDown('fast');\n            } else {\n                $(div).slideUp('fast');\n            }\n            if (typeof value !== 'undefined') {\n                reset(element, value);\n            }\n        };\n\n        // Check the training rule type\n        if (flighttype == 'training' || (flighttype == 'check' && passfail == 'fail')) {\n            // Show P2 dropdown if the flight is not a solo flight\n            toggle('#fitem_id_p2id', '#id_p2id', flighttype != 'solo');\n            // Show pass/fail options if the flight is a check flight\n            toggle('#fgroup_id_passfail', '#id_passfail', flighttype == 'check');\n            // Show dual time for Dual training and not an instructor edit mode based on saved value\n            toggle('#fitem_id_dualtime', '#id_dualtime', rule == 'Dual' && (this.getLogentryId() == 0 ||\n                (this.getLogentryId() != 0 && $('#id_dualtime').val() != '')), rule == 'Dual' ? flighttime : 0);\n            // Show instructor time and not a student in edit mode based on saved value, default the value for non check flights\n            toggle('#fitem_id_instructortime', '#id_instructortime', (this.getLogentryId() == 0 || (this.getLogentryId() != 0 &&\n                $('#id_instructortime').val() != '')), (flighttype == 'check' && passfail == 'fail') ? 0 : flighttime);\n            // Show ground time for training flight types only\n            toggle('#fitem_id_groundtime', '#id_groundtime', flighttype == 'training', 0);\n            // Show for multicrew flights and default the value for multicrew flights\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew', rule == 'Multicrew' ? flighttime : 0);\n            // Show copilot time for multicrew flights, and in edit mode for students based on saved value, default in multicrew\n            toggle('#fitem_id_copilottime', '#id_copilottime', rule == 'Multicrew' && (this.getLogentryId() == 0 ||\n                (this.getLogentryId() != 0 && $('#id_copilottime').val() != '')), rule == 'Multicrew' ? flighttime : 0);\n            toggle('#fitem_id_picustime', '#id_picustime', false, 0);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false, 0);\n        } else if (flighttype == 'solo') {\n            // Hide all irrelevant time and set required value\n            toggle('#fitem_id_p2id', '#id_p2id', false);\n            toggle('#fgroup_id_passfail', '#id_passfail', false);\n            toggle('#fitem_id_dualtime', '#id_dualtime', false, 0);\n            toggle('#fitem_id_instructortime', '#id_instructortime', false, 0);\n            toggle('#fitem_id_groundtime', '#id_groundtime', false, 0);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', false, 0);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false, 0);\n            toggle('#fitem_id_picustime', '#id_picustime', false, 0);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false, 0);\n        } else if (flighttype == 'check' || passfail == 'pass') {\n            // Toggle display of check flight\n            toggle('#fitem_id_p2id', '#id_p2id', true);\n            toggle('#fgroup_id_passfail', '#id_passfail', true);\n            toggle('#fitem_id_dualtime', '#id_dualtime', false, 0);\n            toggle('#fitem_id_instructortime', '#id_instructortime', false, 0);\n            toggle('#fitem_id_groundtime', '#id_groundtime', false, 0);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew', 0);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false, 0);\n            toggle('#fitem_id_picustime', '#id_picustime', true, 0);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', true, 0);\n        }\n    };\n\n    /**\n     * Reload both the title and body content.\n     *\n     * @method reloadAllContent\n     * @return {object} promise\n     */\n    ModalLogEntryForm.prototype.reloadAllContent = function() {\n        return $.when(this.reloadTitleContent(), this.reloadBodyContent());\n    };\n\n    /**\n     * Kick off a reload the modal content before showing it. This\n     * is to allow us to re-use the same modal for creating and\n     * editing different log book entries within the booking view page.\n     *\n     * We do the reload when showing the modal rather than hiding it\n     * to save a request to the server if the user closes the modal\n     * and never re-opens it.\n     *\n     * @method show\n     */\n    ModalLogEntryForm.prototype.show = function() {\n        this.reloadAllContent();\n        Modal.prototype.show.call(this);\n    };\n\n    /**\n     * Clear the logentry id from the modal when it's closed so\n     * that it is loaded fresh next time it's displayed.\n     *\n     * The logentry id will be set by the calling code if it wants\n     * to edit a specific log entry.\n     *\n     * @method hide\n     */\n    ModalLogEntryForm.prototype.hide = function() {\n        Modal.prototype.hide.call(this);\n        this.setLogentryId(null);\n        this.setFlightDate(null);\n        this.setContextId(null);\n        this.setCourseId(null);\n        this.setExerciseId(null);\n    };\n\n    /**\n     * Get the serialised form data.\n     *\n     * @method getFormData\n     * @return {string} serialised form data\n     */\n    ModalLogEntryForm.prototype.getFormData = function() {\n        return this.getForm().serialize();\n    };\n\n    /**\n     * Send the form data to the server to create or update\n     * a log book entry.\n     *\n     * If there is a server side validation error then we re-request the\n     * rendered form (with the data) from the server in order to get the\n     * server side errors to display.\n     *\n     * On success the modal is hidden and the page is reloaded so that the\n     * new log book entry will display in the booking view user tooltip.\n     *\n     * @method save\n     * @return {object} A promise\n     */\n    ModalLogEntryForm.prototype.save = function() {\n        var invalid,\n            loadingContainer = this.saveButton.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        // Now the change events have run, see if there are any \"invalid\" form fields.\n        invalid = this.getForm().find('[aria-invalid=\"true\"]');\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        loadingContainer.removeClass('hidden');\n        this.disableButtons();\n\n        var formData = this.getFormData();\n        var formArgs = 'contextid=' + this.contextId + '&courseid=' + this.courseId\n            + '&exerciseid=' + this.exerciseId + '&userid=' + this.userId;\n\n        // Send the form data to the server for processing.\n        // eslint-disable-next-line consistent-return\n        return Repository.submitCreateUpdateLogentryForm(formArgs, formData)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // If there was a server side validation error then\n                    // we need to re-request the rendered form from the server\n                    // in order to display the error for the user.\n                    this.reloadBodyContent(formData);\n                    return;\n                } else {\n                    // Check whether this was a new logbook entry or not.\n                    // check if the logentry is from the prgression view\n                    // logentry from the confirmation view\n                    // The hide function unsets the form data so grab this before the hide.\n                    var isExisting = this.hasLogentryId();\n\n                    // No problemo! Our work here is done.\n                    this.hide();\n\n                    // Trigger the appropriate logbook event so that the view can be updated.\n                    if (isExisting) {\n                        $('body').trigger(LogbookEvents.updated, [response.logentry]);\n                    } else {\n                        $('body').trigger(LogbookEvents.created, [response.logentry]);\n                    }\n                }\n\n                return;\n            }.bind(this))\n            .always(function() {\n                // Regardless of success or error we should always stop\n                // the loading icon and re-enable the buttons.\n                loadingContainer.addClass('hidden');\n                Notification.fetchNotifications();\n                this.enableButtons();\n\n                return;\n            }.bind(this))\n            .fail(Notification.exception);\n        };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalLogEntryForm.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        // When the user clicks the save button we trigger the form submission. We need to\n        // trigger an actual submission because there is some JS code in the form that is\n        // listening for this event and doing some stuff (e.g. saving draft areas etc).\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(e, data) {\n            this.getForm().submit();\n            data.originalEvent.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n\n        // Catch the submit event before it is actually processed by the browser and\n        // prevent the submission. We'll take it from here.\n        this.getModal().on('submit', function(e) {\n            Event.notifyFormSubmitAjax(this.getForm()[0]);\n\n            this.save();\n\n            // Stop the form from actually submitting and prevent it's\n            // propagation because we have already handled the event.\n            e.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalLogEntryForm.TYPE, ModalLogEntryForm, 'local_booking/modal_logentry_form');\n        registered = true;\n    }\n\n    return ModalLogEntryForm;\n});\n"],"file":"modal_logentry_form.min.js"}