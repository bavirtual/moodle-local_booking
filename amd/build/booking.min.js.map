{"version":3,"sources":["../src/booking.js"],"names":["define","$","Str","Pending","ModalFactory","ViewManager","BookingActions","BookingEvents","ModalLogentryEditForm","Selectors","SELECTORS","CANCEL_BUTTON","registerBookingEventListeners","root","body","on","canceled","refreshInstructorDashboardContent","refreshMyBookingsContent","created","updated","deleted","registerRedirect","e","get_string","then","promptMsg","comment","prompt","cancelBooking","catch","Notification","exception","registerSessionEventListeners","contextId","bookingwrapper","data","courseId","actions","viewLogEntry","logentryId","attr","userId","preventDefault","stopPropagation","registerLogentryEditForm","registerLogentrySummaryForm","stopImmediatePropagation","isNew","LogentryFormPromise","create","type","TYPE","large","target","pendingPromise","renderLogentryModal","resolve","renderLogentrySummaryModal","modal","editLogentry","getRoot","addLogentry","registerEventListeners","init"],"mappings":"AAyBAA,OAAM,yBAAC,CACC,QADD,CAEC,UAFD,CAGC,cAHD,CAIC,oBAJD,CAKC,oCALD,CAMC,+BAND,CAOC,sBAPD,CAQC,mCARD,CASC,yBATD,CAAD,CAWF,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CANJ,CAOIC,CAPJ,CAQIC,CARJ,CASIC,CATJ,CAUE,IAEIC,CAAAA,CAAS,CAAG,CACdC,aAAa,CAAE,+BADD,CAFhB,CAeKC,CAA6B,CAAG,SAASC,CAAT,CAAe,CAClD,GAAMC,CAAAA,CAAI,CAAGb,CAAC,CAAC,MAAD,CAAd,CAEAa,CAAI,CAACC,EAAL,CAAQR,CAAa,CAACS,QAAtB,CAAgC,UAAW,CACvCX,CAAW,CAACY,iCAAZ,CAA8CJ,CAA9C,EACAR,CAAW,CAACa,wBAAZ,CAAqCL,CAArC,CACH,CAHD,EAIAC,CAAI,CAACC,EAAL,CAAQR,CAAa,CAACY,OAAtB,CAA+B,UAAW,CACtCd,CAAW,CAACY,iCAAZ,CAA8CJ,CAA9C,CACH,CAFD,EAGAC,CAAI,CAACC,EAAL,CAAQR,CAAa,CAACa,OAAtB,CAA+B,UAAW,CACtCf,CAAW,CAACY,iCAAZ,CAA8CJ,CAA9C,CACH,CAFD,EAGAC,CAAI,CAACC,EAAL,CAAQR,CAAa,CAACc,OAAtB,CAA+B,UAAW,CACtChB,CAAW,CAACY,iCAAZ,CAA8CJ,CAA9C,CACH,CAFD,EAKAP,CAAc,CAACgB,gBAAf,CAAgCT,CAAhC,EAGAA,CAAI,CAACE,EAAL,CAAQ,OAAR,CAAiBL,CAAS,CAACC,aAA3B,CAA0C,SAASY,CAAT,CAAY,CAElDrB,CAAG,CAACsB,UAAJ,CAAe,qBAAf,CAAsC,eAAtC,EAAuDC,IAAvD,CAA4D,SAASC,CAAT,CAAoB,CAC5E,GAAMC,CAAAA,CAAO,CAAGC,MAAM,CAACF,CAAD,CAAtB,CACA,GAAgB,IAAZ,GAAAC,CAAJ,CAAsB,CAClBrB,CAAc,CAACuB,aAAf,CAA6BhB,CAA7B,CAAmCU,CAAnC,CAAsCI,CAAtC,CACH,CAEJ,CAND,EAMGG,KANH,CAMSC,YAAY,CAACC,SANtB,CAOH,CATD,CAUH,CA9CC,CAqDIC,CAA6B,CAAG,SAACpB,CAAD,CAAU,CAG5C,GAAMqB,CAAAA,CAAS,CAAGjC,CAAC,CAACQ,CAAS,CAAC0B,cAAX,CAAD,CAA4BC,IAA5B,CAAiC,WAAjC,CAAlB,CACAC,CAAQ,CAAGpC,CAAC,CAACQ,CAAS,CAAC0B,cAAX,CAAD,CAA4BC,IAA5B,CAAiC,UAAjC,CADX,CAGA,GAAIF,CAAJ,CAAe,CAEXrB,CAAI,CAACE,EAAL,CAAQ,OAAR,CAAiBN,CAAS,CAAC6B,OAAV,CAAkBC,YAAnC,CAAiD,SAAShB,CAAT,CAAY,CACzD,GAAIiB,CAAAA,CAAU,CAAGvC,CAAC,CAAC,IAAD,CAAD,CAAQwC,IAAR,CAAa,kBAAb,CAAjB,CACAC,CAAM,CAAGzC,CAAC,CAAC,IAAD,CAAD,CAAQwC,IAAR,CAAa,iBAAb,CADT,CAIAlB,CAAC,CAACoB,cAAF,GAGApB,CAAC,CAACqB,eAAF,GAEA,GAAkB,CAAd,EAAAJ,CAAJ,CAAqB,CACjBK,CAAwB,CAAC,IAAD,CAAOtB,CAAP,CAAUW,CAAV,CAAqBG,CAArB,CAA+BK,CAA/B,CAAuCF,CAAvC,IAC3B,CAFD,IAEO,CACHM,CAA2B,CAACZ,CAAD,CAAYG,CAAZ,CAAsBK,CAAtB,CAA8BF,CAA9B,CAC9B,CACDjB,CAAC,CAACwB,wBAAF,EACH,CAhBD,CAiBH,CACJ,CA/EC,CA8FIF,CAAwB,CAAG,SAAChC,CAAD,CAAOU,CAAP,CAAUW,CAAV,CAAqBG,CAArB,CAA+BK,CAA/B,CAAuCF,CAAvC,CAAmDQ,CAAnD,CAA6D,IACpFC,CAAAA,CAAmB,CAAG7C,CAAY,CAAC8C,MAAb,CAAoB,CAC5CC,IAAI,CAAE3C,CAAqB,CAAC4C,IADgB,CAE5CC,KAAK,GAFuC,CAApB,CAD8D,CAMpFC,CAAM,CAAG/B,CAAC,CAAC+B,MANyE,CAOpFC,CAAc,CAAG,GAAIpD,CAAAA,CAAJ,CAAY,wCAAZ,CAPmE,CAS1FE,CAAW,CAACmD,mBAAZ,CAAgC3C,CAAhC,CAAsCU,CAAtC,CAAyC0B,CAAzC,CAA8DK,CAA9D,CAAsEpB,CAAtE,CAAiFG,CAAjF,CAA2FK,CAA3F,CAAmGF,CAAnG,CAA+GQ,CAA/G,EACCvB,IADD,CACM8B,CAAc,CAACE,OAAf,EADN,EAEC3B,KAFD,EAGH,CA1GC,CAsHIgB,CAA2B,CAAG,SAACZ,CAAD,CAAYG,CAAZ,CAAsBK,CAAtB,CAA8BF,CAA9B,CAA6C,CAC7E,GAAMe,CAAAA,CAAc,CAAG,GAAIpD,CAAAA,CAAJ,CAAY,2CAAZ,CAAvB,CAEA,GAAIqC,CAAJ,CAAgB,CACZnC,CAAW,CAACqD,0BAAZ,CAAuCrB,CAAvC,CAAiDK,CAAjD,CAAyDF,CAAzD,EACCf,IADD,CACM,SAASkC,CAAT,CAAgB,CAClB1D,CAAC,CAAC,MAAD,CAAD,CAAUc,EAAV,CAAaR,CAAa,CAACqD,YAA3B,CAAyC,SAASrC,CAAT,CAAYmB,CAAZ,CAAoBF,CAApB,CAAgC,CACrEK,CAAwB,CAACc,CAAK,CAACE,OAAN,EAAD,CAAkBtC,CAAlB,CAAqBW,CAArB,CAAgCG,CAAhC,CAA0CK,CAA1C,CAAkDF,CAAlD,CAAxB,CACAjB,CAAC,CAACwB,wBAAF,EACH,CAHD,EAIA9C,CAAC,CAAC,MAAD,CAAD,CAAUc,EAAV,CAAaR,CAAa,CAACuD,WAA3B,CAAwC,SAASvC,CAAT,CAAYmB,CAAZ,CAAoB,CACxDG,CAAwB,CAACc,CAAK,CAACE,OAAN,EAAD,CAAkBtC,CAAlB,CAAqBW,CAArB,CAAgCG,CAAhC,CAA0CK,CAA1C,CAAkD,CAAlD,CAAxB,CACAnB,CAAC,CAACwB,wBAAF,EACH,CAHD,EAIA,MAAOY,CAAAA,CACV,CAXD,EAYClC,IAZD,CAYM8B,CAAc,CAACE,OAAf,EAZN,EAaC3B,KAbD,EAcH,CAfD,IAeO,CACHyB,CAAc,CAACE,OAAf,EACH,CACJ,CA3IC,CAqJKM,CAAsB,CAAG,SAASlD,CAAT,CAAe,CAG3CD,CAA6B,CAACC,CAAD,CAA7B,CAGAoB,CAA6B,CAACpB,CAAD,CAChC,CA5JC,CA8JF,MAAO,CACHmD,IAAI,CAAE,cAASnD,CAAT,CAAe,CACjBA,CAAI,CAAGZ,CAAC,CAACY,CAAD,CAAR,CACAkD,CAAsB,CAAClD,CAAD,CACzB,CAJE,CAMV,CAzLK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for registering listeners\n * for all session booking and logentry events.\n *\n * @module     local_booking/booking\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/pending',\n        'core/modal_factory',\n        'local_booking/booking_view_manager',\n        'local_booking/booking_actions',\n        'local_booking/events',\n        'local_booking/modal_logentry_form',\n        'local_booking/selectors'\n    ],\n    function(\n        $,\n        Str,\n        Pending,\n        ModalFactory,\n        ViewManager,\n        BookingActions,\n        BookingEvents,\n        ModalLogentryEditForm,\n        Selectors\n    ) {\n\n    const SELECTORS = {\n        CANCEL_BUTTON: \"[data-region='cancel-button']\",\n    };\n\n    /**\n     * Listen to and handle any logentry events fired by\n     * Logentry and PIREP the modal forms.\n     *\n     * @method registerBookingEventListeners\n     * @param  {object} root The booking root element\n     * @param  {object} logentryFormModalPromise A promise reolved with the Logentry form modal\n     * @param  {object} pirepFormPromise A promise reolved with the PIREP verification form modal\n     */\n     const registerBookingEventListeners = function(root) {\n        const body = $('body');\n\n        body.on(BookingEvents.canceled, function() {\n            ViewManager.refreshInstructorDashboardContent(root);\n            ViewManager.refreshMyBookingsContent(root);\n        });\n        body.on(BookingEvents.created, function() {\n            ViewManager.refreshInstructorDashboardContent(root);\n        });\n        body.on(BookingEvents.updated, function() {\n            ViewManager.refreshInstructorDashboardContent(root);\n        });\n        body.on(BookingEvents.deleted, function() {\n            ViewManager.refreshInstructorDashboardContent(root);\n        });\n\n        // // Listen the click on the progression table of sessions for a goto feedback for Objective Not Met sessions.\n        BookingActions.registerRedirect(root);\n\n        // Listen to the click on the Cancel booking buttons in 'Instructor dashboard' page.\n        root.on('click', SELECTORS.CANCEL_BUTTON, function(e) {\n            // eslint-disable-next-line no-alert\n            Str.get_string('cancellationcomment', 'local_booking').then(function(promptMsg) {\n                const comment = prompt(promptMsg);\n                if (comment !== null) {\n                    BookingActions.cancelBooking(root, e, comment);\n                }\n                return;\n            }).catch(Notification.exception);\n        });\n    };\n\n    /**\n     * Register event listeners for session clicks.\n     *\n     * @param {object} root The root element.\n     */\n    const registerSessionEventListeners = (root) => {\n\n        // Get promise for the logentry form for create and edit\n        const contextId = $(Selectors.bookingwrapper).data('contextid'),\n        courseId = $(Selectors.bookingwrapper).data('courseid');\n\n        if (contextId) {\n            // Listen the click on the progression table of sessions for a logentry (new/view).\n            root.on('click', Selectors.actions.viewLogEntry, function(e) {\n                let logentryId = $(this).attr('data-logentry-id'),\n                userId = $(this).attr('data-student-id');\n\n                // A logentry needs to be created or edite, show the modal form.\n                e.preventDefault();\n                // We've handled the event so stop it from bubbling\n                // and causing the day click handler to fire.\n                e.stopPropagation();\n\n                if (logentryId == 0) {\n                    registerLogentryEditForm(null, e, contextId, courseId, userId, logentryId, true);\n                } else {\n                    registerLogentrySummaryForm(contextId, courseId, userId, logentryId);\n                }\n                e.stopImmediatePropagation();\n            });\n        }\n    };\n\n    /**\n     * Register the form and listeners required for\n     * creating and editing logentries.\n     *\n     * @method registerLogentryEditForm\n     * @param  {object} root       The root element.\n     * @param  {object} e          The triggered event.\n     * @param  {Number} contextId  The course context id of the logentry.\n     * @param  {Number} courseId   The course id of the logentry.\n     * @param  {Number} userId     The user id the logentry belongs to.\n     * @param  {Number} logentryId The logentry id.\n     * @param  {bool}   isNew      Whether to register for edit mode.\n     */\n    const registerLogentryEditForm = (root, e, contextId, courseId, userId, logentryId, isNew) => {\n        const LogentryFormPromise = ModalFactory.create({\n            type: ModalLogentryEditForm.TYPE,\n            large: true\n        });\n\n        const target = e.target;\n        const pendingPromise = new Pending('local_booking/registerLogentryEditForm');\n\n        ViewManager.renderLogentryModal(root, e, LogentryFormPromise, target, contextId, courseId, userId, logentryId, isNew)\n        .then(pendingPromise.resolve())\n        .catch();\n    };\n\n    /**\n     * Register the form and listeners required for\n     * viewing the logentry summary form.\n     *\n     * @method registerLogentrySummaryForm\n     * @param  {Number} contextId  The course context id of the logentry.\n     * @param  {Number} courseId   The course id of the logentry.\n     * @param  {Number} userId     The user id the logentry belongs to.\n     * @param  {Number} logentryId The logentry id.\n     */\n    const registerLogentrySummaryForm = (contextId, courseId, userId, logentryId) => {\n        const pendingPromise = new Pending('local_booking/registerLogentrySummaryForm');\n\n        if (logentryId) {\n            ViewManager.renderLogentrySummaryModal(courseId, userId, logentryId)\n            .then(function(modal) {\n                $('body').on(BookingEvents.editLogentry, function(e, userId, logentryId) {\n                    registerLogentryEditForm(modal.getRoot(), e, contextId, courseId, userId, logentryId);\n                    e.stopImmediatePropagation();\n                });\n                $('body').on(BookingEvents.addLogentry, function(e, userId) {\n                    registerLogentryEditForm(modal.getRoot(), e, contextId, courseId, userId, 0);\n                    e.stopImmediatePropagation();\n                });\n                return modal;\n            })\n            .then(pendingPromise.resolve())\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    };\n\n    /**\n     * Register event listeners for logbook entry,\n     * and session cancellation in both\n     * 'Instructor dashboard' and 'Session selection' pages.\n     *\n     * @method  registerEventListeners\n     * @param   {object} root The booking root element\n     */\n     const registerEventListeners = function(root) {\n\n        // Register listeners to booking actions\n        registerBookingEventListeners(root);\n\n        // Register listeners to session click actions\n        registerSessionEventListeners(root);\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            registerEventListeners(root);\n        }\n    };\n});\n"],"file":"booking.min.js"}