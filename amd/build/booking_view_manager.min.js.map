{"version":3,"sources":["../src/booking_view_manager.js"],"names":["registerEventListeners","root","on","Selectors","logentrySession","e","target","logentryId","courseId","studentId","pendingPromise","Pending","matches","actions","viewEvent","closest","dataset","querySelector","preventDefault","stopPropagation","renderLogentrySummaryModal","then","resolve","catch","refreshProgressionContent","categoryId","startLoading","template","attr","find","progressionwrapper","data","M","util","js_pending","get","join","Repository","getBookingsData","context","viewingbooking","Templates","render","html","js","replaceNode","always","js_complete","stopLoading","fail","Notification","exception","refreshMyBookingsContent","mybookingswrapper","getLogentryById","getEventResponse","logentry","Error","Str","get_string","logentryData","modalParams","title","type","SummaryModal","TYPE","body","templateContext","canedit","candelete","isactionevent","url","action","ModalFactory","create","modal","getRoot","ModalEvents","hidden","destroy","show","loadingIconContainer","containers","loadingIcon","removeClass","one","addClass","init","view"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handler booking view changes.\n * Improvised from core_calendar.\n *\n * @module     local_booking/booking_view_manager\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport SummaryModal from 'local_booking/modal_logentry_summary';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Register event listeners for the module.\n *\n * @param {object} root The root element.\n */\n const registerEventListeners = (root) => {\n    root = $(root);\n\n    // Bind click events to logentry exercise session.\n    root.on('click', Selectors.logentrySession, (e) => {\n        const target = e.target;\n        let logentrySession = null;\n        let logentryId = null;\n        let courseId = null;\n        let studentId = null;\n        const pendingPromise = new Pending('local_booking/booking_view_manager:logentrySession:click');\n\n        if (target.matches(Selectors.actions.viewEvent)) {\n            logentrySession = target;\n        } else {\n            logentrySession = target.closest(Selectors.actions.viewEvent);\n        }\n\n        if (logentrySession) {\n            logentryId = logentrySession.dataset.logentryId;\n            courseId = logentrySession.dataset.courseId;\n            studentId = logentrySession.dataset.studentId;\n        } else {\n            logentryId = target.querySelector(Selectors.actions.viewEvent).dataset.logentryId;\n            courseId = target.querySelector(Selectors.actions.viewEvent).dataset.courseId;\n            studentId = target.querySelector(Selectors.actions.viewEvent).dataset.studentId;\n        }\n\n        if (logentryId) {\n            // A link was found. Show the modal.\n            e.preventDefault();\n            // We've handled the event so stop it from bubbling\n            // and causing the day click handler to fire.\n            e.stopPropagation();\n\n            renderLogentrySummaryModal(logentryId, courseId, studentId)\n            .then(pendingPromise.resolve)\n            .catch();\n        } else {\n            pendingPromise.resolve();\n        }\n    });\n};\n\n/**\n * Refresh student progression content.\n *\n * @param {object} root The root element.\n * @param {number} courseId The id of the course associated with the progression view shown\n * @param {number} categoryId The id of the category associated with the progression view shown\n * @param {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @return {promise}\n */\nexport const refreshProgressionContent = (root, courseId, categoryId, target = null) => {\n    startLoading(root);\n\n    const template = root.attr('data-template');\n    target = target || root.find(Selectors.progressionwrapper);\n    courseId = courseId || root.find(Selectors.progressionwrapper).data('courseid');\n    M.util.js_pending([root.get('id'), courseId, categoryId].join('-'));\n    return Repository.getBookingsData(courseId)\n        .then((context) => {\n            context.viewingbooking = true;\n            return Templates.render(template, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, categoryId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Refresh my bookings content.\n *\n * @param {object} root The root element.\n * @param {number} courseId The id of the course associated with the progression view shown\n * @param {number} categoryId The id of the category associated with the progression view shown\n * @param {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @param {string} template The template to be rendered.\n * @return {promise}\n */\n export const refreshMyBookingsContent = (root, courseId) => {\n    startLoading(root);\n\n    const target = root.find(Selectors.mybookingswrapper);\n    courseId = courseId || root.find(Selectors.progressionwrapper).data('courseid');\n    M.util.js_pending([root.get('id'), courseId].join('-'));\n    return Repository.getBookingsData(courseId)\n        .then((context) => {\n            context.viewingbooking = true;\n            return Templates.render('local_booking/my_bookings', context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(target, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Render the logentry summary modal.\n *\n * @param {Number} logentryId The graded session logbook entry id.\n * @param {Number} courseId The graded session course id.\n * @param {Number} studentId The graded session student id.\n * @returns {Promise}\n */\n export const renderLogentrySummaryModal = (logentryId, courseId, studentId) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentrySummaryModal');\n\n    // Calendar repository promise.\n    return Repository.getLogentryById(logentryId, courseId, studentId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.logentry) {\n            throw new Error(Str.get_string('errorlogentryfetch', 'local_booking') + logentryId);\n        }\n\n        return getEventResponse.logentry;\n    })\n    .then(logentryData => {\n        // Build the modal parameters from the logentry data.\n        const modalParams = {\n            title: Str.get_string('logentry', 'local_booking'),\n            type: SummaryModal.TYPE,\n            body: Templates.render('local_booking/logentry_summary_body', logentryData),\n            templateContext: {\n                canedit: logentryData.canedit,\n                candelete: logentryData.candelete,\n                isactionevent: logentryData.isactionevent,\n                url: logentryData.url,\n                action: logentryData.action\n            }\n        };\n\n        // Create the modal.\n        return ModalFactory.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Set the element state to loading.\n *\n * @param {object} root The container element\n * @method startLoading\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @param {object} root The container element\n * @method stopLoading\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n\nexport const init = (root, view) => {\n    registerEventListeners(root, view);\n};"],"file":"booking_view_manager.min.js"}