{"version":3,"file":"calendar.min.js","sources":["../src/calendar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is the highest level module for the calendar. It is\n * responsible for initialising all of the components required for\n * the calendar to run. It also coordinates the interaction between\n * components by listening for and responding to different events\n * triggered within the calendar UI.\n *\n *  Improvised from core_calendar.\n *\n * @module     local_booking/calendar\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2022\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n            'jquery',\n            'local_booking/calendar_view_manager',\n            'local_booking/slot_actions',\n            'local_booking/events',\n            'local_booking/selectors',\n        ],\n        function(\n            $,\n            CalendarViewManager,\n            SlotActions,\n            ModalEvents,\n            Selectors,\n        ) {\n\n    /**\n     * Register event listeners for the module.\n     *\n     * @method  registerEventListeners\n     * @param   {object} root The calendar root element\n     */\n    const registerEventListeners = function(root) {\n        // Get action type of the current week view or booking\n        const action = root.find(Selectors.wrappers.calendarwrapper).data('action');\n        const warningModal = $('body');\n\n\n        // Process previous/next week navigation links\n        root.on('click', Selectors.links.navLink, (e) => {\n            const courseId = root.find(Selectors.wrappers.calendarwrapper).data('courseid'),\n                link = e.currentTarget;\n\n            e.preventDefault();\n            CalendarViewManager.changeWeek(root, link.href, link.dataset.year, link.dataset.week, link.dataset.time, courseId);\n        });\n\n        warningModal.on(ModalEvents.yesEvent, function() {\n            if (action == 'book') {\n                SlotActions.saveBookedSlot(root);\n            } else {\n                SlotActions.saveWeekSlots(root);\n            }\n        });\n\n        // Listen the click on the Save button.\n        root.on('click', Selectors.regions.savebutton, function() {\n            SlotActions.saveWeekSlots(root);\n        });\n\n        // Listen the click on the Save Booking button.\n        root.on('click', Selectors.regions.bookbutton, function() {\n            SlotActions.saveBookedSlot(root);\n        });\n\n        // Listen the click on the Copy button.\n        root.on('click', Selectors.regions.copybutton, function() {\n            SlotActions.copySlots(root);\n        });\n\n        // Listen the click on the Paste button.\n        root.on('click', Selectors.regions.pastebutton, function() {\n            SlotActions.pasteSlots(root);\n        });\n\n        // Listen the click on the Clear button.\n        root.on('click', Selectors.regions.clearbutton, function() {\n            SlotActions.clearWeekSlots();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mousedown', Selectors.regions.day, function(e) {\n            SlotActions.setPosting(true);\n            SlotActions.postSlots(root, action, $(e.target));\n            e.preventDefault();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mouseover', Selectors.regions.day, function(e) {\n            SlotActions.postSlots(root, action, $(e.target));\n            e.preventDefault();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mouseup', Selectors.regions.day, function() {\n            SlotActions.setPosting(false);\n        });\n\n        // Start listening for calendar slot posting changes.\n        window.addEventListener('beforeunload', beforeUnloadHandler);\n\n        // Remove loading\n        const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n        loadingIconContainer.addClass('hidden');\n    };\n\n\n    /**\n     * Handle the beforeunload event.\n     *\n     * @method\n     * @param   {Event} e\n     * @returns {string|null}\n     * @private\n     */\n    const beforeUnloadHandler = e => {\n        // Check if the calendar is dirty\n        if (SlotActions.isDirty()) {\n            return e.preventDefault();\n        }\n\n        // Attaching an event handler/listener to window or document's beforeunload event prevents browsers from using\n        // in-memory page navigation caches, like Firefox's Back-Forward cache or WebKit's Page Cache.\n        // Remove the handler.\n        window.removeEventListener('beforeunload', beforeUnloadHandler);\n\n        return null;\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            CalendarViewManager.startLoading(root);\n            registerEventListeners(root);\n            CalendarViewManager.stopLoading(root);\n        }\n    };\n});\n"],"names":["define","$","CalendarViewManager","SlotActions","ModalEvents","Selectors","beforeUnloadHandler","e","isDirty","preventDefault","window","removeEventListener","init","root","startLoading","action","find","wrappers","calendarwrapper","data","warningModal","on","links","navLink","courseId","link","currentTarget","changeWeek","href","dataset","year","week","time","yesEvent","saveBookedSlot","saveWeekSlots","regions","savebutton","bookbutton","copybutton","copySlots","pastebutton","pasteSlots","clearbutton","clearWeekSlots","day","setPosting","postSlots","target","addEventListener","containers","loadingIcon","addClass","registerEventListeners","stopLoading"],"mappings":";;;;;;;;;;;;;;AA8BAA,gCAAO,CACK,SACA,sCACA,6BACA,uBACA,4BAEJ,SACIC,EACAC,oBACAC,YACAC,YACAC,iBA4FFC,oBAAsBC,GAEpBJ,YAAYK,UACLD,EAAEE,kBAMbC,OAAOC,oBAAoB,eAAgBL,qBAEpC,YAGJ,CACHM,KAAM,SAASC,MACXA,KAAOZ,EAAEY,MACTX,oBAAoBY,aAAaD,MApGV,SAASA,YAE9BE,OAASF,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,UAC5DC,aAAenB,EAAE,QAIvBY,KAAKQ,GAAG,QAAShB,UAAUiB,MAAMC,SAAUhB,UACjCiB,SAAWX,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,YAChEM,KAAOlB,EAAEmB,cAEbnB,EAAEE,iBACFP,oBAAoByB,WAAWd,KAAMY,KAAKG,KAAMH,KAAKI,QAAQC,KAAML,KAAKI,QAAQE,KAAMN,KAAKI,QAAQG,KAAMR,aAG7GJ,aAAaC,GAAGjB,YAAY6B,UAAU,WACpB,QAAVlB,OACAZ,YAAY+B,eAAerB,MAE3BV,YAAYgC,cAActB,SAKlCA,KAAKQ,GAAG,QAAShB,UAAU+B,QAAQC,YAAY,WAC3ClC,YAAYgC,cAActB,SAI9BA,KAAKQ,GAAG,QAAShB,UAAU+B,QAAQE,YAAY,WAC3CnC,YAAY+B,eAAerB,SAI/BA,KAAKQ,GAAG,QAAShB,UAAU+B,QAAQG,YAAY,WAC3CpC,YAAYqC,UAAU3B,SAI1BA,KAAKQ,GAAG,QAAShB,UAAU+B,QAAQK,aAAa,WAC5CtC,YAAYuC,WAAW7B,SAI3BA,KAAKQ,GAAG,QAAShB,UAAU+B,QAAQO,aAAa,WAC5CxC,YAAYyC,oBAIhB/B,KAAKQ,GAAG,YAAahB,UAAU+B,QAAQS,KAAK,SAAStC,GACjDJ,YAAY2C,YAAW,GACvB3C,YAAY4C,UAAUlC,KAAME,OAAQd,EAAEM,EAAEyC,SACxCzC,EAAEE,oBAINI,KAAKQ,GAAG,YAAahB,UAAU+B,QAAQS,KAAK,SAAStC,GACjDJ,YAAY4C,UAAUlC,KAAME,OAAQd,EAAEM,EAAEyC,SACxCzC,EAAEE,oBAINI,KAAKQ,GAAG,UAAWhB,UAAU+B,QAAQS,KAAK,WACtC1C,YAAY2C,YAAW,MAI3BpC,OAAOuC,iBAAiB,eAAgB3C,qBAGXO,KAAKG,KAAKX,UAAU6C,WAAWC,aACvCC,SAAS,UA8B1BC,CAAuBxC,MACvBX,oBAAoBoD,YAAYzC"}