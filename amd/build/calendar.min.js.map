{"version":3,"file":"calendar.min.js","sources":["../src/calendar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is the highest level module for the calendar. It is\n * responsible for initialising all of the components required for\n * the calendar to run. It also coordinates the interaction between\n * components by listening for and responding to different events\n * triggered within the calendar UI.\n *\n *  Improvised from core_calendar.\n *\n * @module     local_booking/calendar\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n            'jquery',\n            'local_booking/calendar_view_manager',\n            'local_booking/calendar_actions',\n            'local_booking/events',\n            'local_booking/selectors',\n        ],\n        function(\n            $,\n            CalendarViewManager,\n            CalendarActions,\n            BookingEvents,\n            Selectors,\n        ) {\n\n    /**\n     * Register event listeners for the module.\n     *\n     * @method  registerEventListeners\n     * @param   {object} root The calendar root element\n     */\n    const registerEventListeners = function(root) {\n        // Get action type of the current week view or booking\n        const action = root.find(Selectors.wrappers.calendarwrapper).data('action');\n        const body = $('body');\n\n\n        // Process previous/next week navigation links\n        root.on('click', Selectors.links.navLink, (e) => {\n            const courseId = root.find(Selectors.wrappers.calendarwrapper).data('courseid'),\n                link = e.currentTarget;\n\n            CalendarViewManager.changeWeek(root, link.href, link.dataset.year, link.dataset.week, link.dataset.time, courseId);\n            e.preventDefault();\n        });\n\n        // Refresh calendar after a booking or slots are saved\n        body.on(BookingEvents.slotsSaved, function(e) {\n            const courseId = root.find(Selectors.wrappers.calendarwrapper).data('courseid'),\n                eventData = e.eventData;\n\n            CalendarViewManager.changeWeek(root, eventData.url, eventData.year, eventData.week, eventData.time, courseId);\n        });\n\n        // Save slot postings or bookings on dirty calendar response\n        body.on(BookingEvents.responseYES + ' ' + BookingEvents.responseNO, function(e) {\n            const courseId = root.find(Selectors.wrappers.calendarwrapper).data('courseid'),\n                eventData = e.eventData;\n\n            if (e.type == BookingEvents.responseYES) {\n                if (action == 'book') {\n                    CalendarActions.saveBookedSlot(root, e);\n                } else {\n                    CalendarActions.saveWeekSlots(root, e);\n                }\n            }\n            CalendarViewManager.changeWeek(root, eventData.url, eventData.year, eventData.week, eventData.time, courseId);\n        });\n\n        // Listen the click on the Save button.\n        root.on('click', Selectors.regions.savebutton, function() {\n            CalendarActions.saveWeekSlots(root);\n        });\n\n        // Listen the click on the Save Booking button.\n        root.on('click', Selectors.regions.bookbutton, function() {\n            CalendarActions.saveBookedSlot(root);\n        });\n\n        // Listen the click on the Copy button.\n        root.on('click', Selectors.regions.copybutton, function() {\n            CalendarActions.copySlots(root);\n        });\n\n        // Listen the click on the Paste button.\n        root.on('click', Selectors.regions.pastebutton, function() {\n            CalendarActions.pasteSlots(root);\n        });\n\n        // Listen the click on the Clear button.\n        root.on('click', Selectors.regions.clearbutton, function() {\n            CalendarActions.clearWeekSlots();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mousedown', Selectors.regions.day, function(e) {\n            CalendarActions.setPosting(true);\n            CalendarActions.postSlots(root, action, $(e.target));\n            e.preventDefault();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mouseover', Selectors.regions.day, function(e) {\n            CalendarActions.postSlots(root, action, $(e.target));\n            e.preventDefault();\n        });\n\n        // Listen the mouse down on the calendar grid posting.\n        root.on('mouseup', Selectors.regions.day, function() {\n            CalendarActions.setPosting(false);\n        });\n\n        // Start listening for calendar slot posting changes.\n        window.addEventListener('beforeunload', beforeUnloadHandler);\n\n        // Remove loading\n        const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n        loadingIconContainer.addClass('hidden');\n    };\n\n\n    /**\n     * Handle the beforeunload event.\n     *\n     * @method\n     * @param   {Event} e\n     * @returns {string|null}\n     * @private\n     */\n    const beforeUnloadHandler = e => {\n        // Check if the calendar is dirty\n        if (CalendarActions.isDirty()) {\n            return e.preventDefault();\n        }\n\n        // Attaching an event handler/listener to window or document's beforeunload event prevents browsers from using\n        // in-memory page navigation caches, like Firefox's Back-Forward cache or WebKit's Page Cache.\n        // Remove the handler.\n        window.removeEventListener('beforeunload', beforeUnloadHandler);\n\n        return null;\n    };\n\n    return {\n        init: function(root) {\n            root = $(root);\n            CalendarViewManager.startLoading(root);\n            registerEventListeners(root);\n            CalendarViewManager.stopLoading(root);\n        }\n    };\n});\n"],"names":["define","$","CalendarViewManager","CalendarActions","BookingEvents","Selectors","beforeUnloadHandler","e","isDirty","preventDefault","window","removeEventListener","init","root","startLoading","action","find","wrappers","calendarwrapper","data","body","on","links","navLink","courseId","link","currentTarget","changeWeek","href","dataset","year","week","time","slotsSaved","eventData","url","responseYES","responseNO","type","saveBookedSlot","saveWeekSlots","regions","savebutton","bookbutton","copybutton","copySlots","pastebutton","pasteSlots","clearbutton","clearWeekSlots","day","setPosting","postSlots","target","addEventListener","containers","loadingIcon","addClass","registerEventListeners","stopLoading"],"mappings":";;;;;;;;;;;;;;AA8BAA,gCAAO,CACK,SACA,sCACA,iCACA,uBACA,4BAEJ,SACIC,EACAC,oBACAC,gBACAC,cACAC,iBA2GFC,oBAAsBC,GAEpBJ,gBAAgBK,UACTD,EAAEE,kBAMbC,OAAOC,oBAAoB,eAAgBL,qBAEpC,YAGJ,CACHM,KAAM,SAASC,MACXA,KAAOZ,EAAEY,MACTX,oBAAoBY,aAAaD,MAnHV,SAASA,YAE9BE,OAASF,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,UAC5DC,KAAOnB,EAAE,QAIfY,KAAKQ,GAAG,QAAShB,UAAUiB,MAAMC,SAAUhB,UACjCiB,SAAWX,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,YAChEM,KAAOlB,EAAEmB,cAEbxB,oBAAoByB,WAAWd,KAAMY,KAAKG,KAAMH,KAAKI,QAAQC,KAAML,KAAKI,QAAQE,KAAMN,KAAKI,QAAQG,KAAMR,UACzGjB,EAAEE,oBAINW,KAAKC,GAAGjB,cAAc6B,YAAY,SAAS1B,SACjCiB,SAAWX,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,YAChEe,UAAY3B,EAAE2B,UAElBhC,oBAAoByB,WAAWd,KAAMqB,UAAUC,IAAKD,UAAUJ,KAAMI,UAAUH,KAAMG,UAAUF,KAAMR,aAIxGJ,KAAKC,GAAGjB,cAAcgC,YAAc,IAAMhC,cAAciC,YAAY,SAAS9B,SACnEiB,SAAWX,KAAKG,KAAKX,UAAUY,SAASC,iBAAiBC,KAAK,YAChEe,UAAY3B,EAAE2B,UAEd3B,EAAE+B,MAAQlC,cAAcgC,cACV,QAAVrB,OACAZ,gBAAgBoC,eAAe1B,KAAMN,GAErCJ,gBAAgBqC,cAAc3B,KAAMN,IAG5CL,oBAAoByB,WAAWd,KAAMqB,UAAUC,IAAKD,UAAUJ,KAAMI,UAAUH,KAAMG,UAAUF,KAAMR,aAIxGX,KAAKQ,GAAG,QAAShB,UAAUoC,QAAQC,YAAY,WAC3CvC,gBAAgBqC,cAAc3B,SAIlCA,KAAKQ,GAAG,QAAShB,UAAUoC,QAAQE,YAAY,WAC3CxC,gBAAgBoC,eAAe1B,SAInCA,KAAKQ,GAAG,QAAShB,UAAUoC,QAAQG,YAAY,WAC3CzC,gBAAgB0C,UAAUhC,SAI9BA,KAAKQ,GAAG,QAAShB,UAAUoC,QAAQK,aAAa,WAC5C3C,gBAAgB4C,WAAWlC,SAI/BA,KAAKQ,GAAG,QAAShB,UAAUoC,QAAQO,aAAa,WAC5C7C,gBAAgB8C,oBAIpBpC,KAAKQ,GAAG,YAAahB,UAAUoC,QAAQS,KAAK,SAAS3C,GACjDJ,gBAAgBgD,YAAW,GAC3BhD,gBAAgBiD,UAAUvC,KAAME,OAAQd,EAAEM,EAAE8C,SAC5C9C,EAAEE,oBAINI,KAAKQ,GAAG,YAAahB,UAAUoC,QAAQS,KAAK,SAAS3C,GACjDJ,gBAAgBiD,UAAUvC,KAAME,OAAQd,EAAEM,EAAE8C,SAC5C9C,EAAEE,oBAINI,KAAKQ,GAAG,UAAWhB,UAAUoC,QAAQS,KAAK,WACtC/C,gBAAgBgD,YAAW,MAI/BzC,OAAO4C,iBAAiB,eAAgBhD,qBAGXO,KAAKG,KAAKX,UAAUkD,WAAWC,aACvCC,SAAS,UA8B1BC,CAAuB7C,MACvBX,oBAAoByD,YAAY9C"}