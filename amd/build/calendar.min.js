/**
 * This module is the highest level module for the calendar. It is
 * responsible for initialising all of the components required for
 * the calendar to run. It also coordinates the interaction between
 * components by listening for and responding to different events
 * triggered within the calendar UI.
 *
 *  Improvised from core_calendar.
 *
 * @module     local_booking/calendar
 * @author     Mustafa Hajjar (mustafa.hajjar)
 * @copyright  BAVirtual.co.uk Â© 2024
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_booking/calendar",["jquery","local_booking/calendar_view_manager","local_booking/calendar_actions","local_booking/events","local_booking/selectors"],(function($,CalendarViewManager,CalendarActions,BookingEvents,Selectors){const beforeUnloadHandler=e=>CalendarActions.isDirty()?e.preventDefault():(window.removeEventListener("beforeunload",beforeUnloadHandler),null);return{init:function(root){root=$(root),CalendarViewManager.startLoading(root),function(root){const action=root.find(Selectors.wrappers.calendarwrapper).data("action"),body=$("body");root.on("click",Selectors.links.navLink,(e=>{const courseId=root.find(Selectors.wrappers.calendarwrapper).data("courseid"),link=e.currentTarget;CalendarViewManager.changeWeek(root,link.href,link.dataset.year,link.dataset.week,link.dataset.time,courseId),e.preventDefault()})),body.on(BookingEvents.slotsSaved,(function(e){const courseId=root.find(Selectors.wrappers.calendarwrapper).data("courseid"),eventData=e.eventData;CalendarViewManager.changeWeek(root,eventData.url,eventData.year,eventData.week,eventData.time,courseId)})),body.on(BookingEvents.responseYES+" "+BookingEvents.responseNO,(function(e){const courseId=root.find(Selectors.wrappers.calendarwrapper).data("courseid"),eventData=e.eventData;e.type==BookingEvents.responseYES&&("book"==action?CalendarActions.saveBookedSlot(root,e):CalendarActions.saveWeekSlots(root,e)),CalendarViewManager.changeWeek(root,eventData.url,eventData.year,eventData.week,eventData.time,courseId)})),root.on("click",Selectors.regions.savebutton,(function(){CalendarActions.saveWeekSlots(root)})),root.on("click",Selectors.regions.bookbutton,(function(){CalendarActions.saveBookedSlot(root)})),root.on("click",Selectors.regions.copybutton,(function(){CalendarActions.copySlots(root)})),root.on("click",Selectors.regions.pastebutton,(function(){CalendarActions.pasteSlots(root)})),root.on("click",Selectors.regions.clearbutton,(function(){CalendarActions.clearWeekSlots()})),root.on("mousedown",Selectors.regions.day,(function(e){CalendarActions.setPosting(!0),CalendarActions.postSlots(root,action,$(e.target)),e.preventDefault()})),root.on("mouseover",Selectors.regions.day,(function(e){CalendarActions.postSlots(root,action,$(e.target)),e.preventDefault()})),root.on("mouseup",Selectors.regions.day,(function(){CalendarActions.setPosting(!1)})),window.addEventListener("beforeunload",beforeUnloadHandler),root.find(Selectors.containers.loadingIcon).addClass("hidden")}(root),CalendarViewManager.stopLoading(root)}}}));

//# sourceMappingURL=calendar.min.js.map