{"version":3,"sources":["../src/booking_actions.js"],"names":["define","$","Str","Notification","CustomEvents","Modal","ModalRegistry","ModalFactory","ModalEvents","Pending","ModalLogentryForm","Repository","BookingSessions","ModalDelete","BookingSelectors","ViewManager","gotoFeedback","root","e","target","SessionSource","closest","session","LogentrySource","find","logentryitem","courseId","exerciseId","sessionPassed","userId","bookingwrapper","data","dataset","studentId","trigger","location","href","M","cfg","wwwroot","cancelBooking","comment","startLoading","bookingId","bookingid","then","response","validationerror","alert","get_string","always","canceled","fetchNotifications","stopLoading","fail","exception"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry operations\n * including CRUD and UI events.\n *\n * @module     local_booking/booking_actions\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/modal_logentry_form',\n    'local_booking/repository',\n    'local_booking/events',\n    'local_booking/modal_delete',\n    'local_booking/selectors',\n    'local_booking/booking_view_manager',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    ModalFactory,\n    ModalEvents,\n    Pending,\n    ModalLogentryForm,\n    Repository,\n    BookingSessions,\n    ModalDelete,\n    BookingSelectors,\n    ViewManager,\n) {\n\n    /**\n     * Cancel a specific booking and trigger update UI event.\n     *\n     * @method  cancelBooking\n     * @param   {object} root     The My Bookings root element\n     * @param   {object} e        The click event on the Cancel button\n     * @param   {string} comment  The click event on the Cancel button\n     * @return  {object} The create modal promise\n     */\n    var cancelBooking = (root, e, comment) => {\n        ViewManager.startLoading(root);\n\n        var target = e.target;\n        // Get course id and booking id\n        const courseId = courseId || root.find(BookingSelectors.bookingwrapper).data('courseid');\n        const bookingId = target.dataset.bookingid;\n\n        // Send the request data to the server for processing.\n        return Repository.cancelBooking(bookingId, comment)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert(Str.get_string('errorlogentrycancel', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                $('body').trigger(BookingSessions.canceled, [root, false]);\n                Notification.fetchNotifications();\n                ViewManager.stopLoading(root);\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Redirect to exercise (assignment) grading page.\n     *\n     * @method  gotoFeedback\n     * @param   {jQuery} root\n     * @param   {object} e\n     */\n     var gotoFeedback = (root, e) => {\n        // Fetch the exercise and user id and redirect to assignment submission & grading\n        let target = e.target;\n        let SessionSource = target.closest(BookingSelectors.session),\n            LogentrySource = root.find(BookingSelectors.logentryitem),\n            courseId, exerciseId, sessionPassed, userId;\n\n        // Evaluate feedback request source: the session (progressing/objective not met) or the logentry\n        if (SessionSource != undefined) {\n            courseId = root.find(BookingSelectors.bookingwrapper).data('courseid');\n            exerciseId = SessionSource.dataset.exerciseId;\n            sessionPassed = SessionSource.dataset.sessionPassed;\n            userId = SessionSource.dataset.studentId;\n        } else if (LogentrySource != undefined) {\n            courseId = LogentrySource.data('courseId');\n            exerciseId = LogentrySource.data('exerciseId');\n            sessionPassed = 1;\n            userId = LogentrySource.data('userId');\n        }\n\n        // Trigger redirect to feedback\n        $('body').trigger(BookingSessions.gotoFeedback, [exerciseId]);\n\n        // Redirect to the grading and feedback page\n        location.href = M.cfg.wwwroot + '/local/booking/assign.php?courseid=' + courseId +\n                '&exeid=' + exerciseId + '&rownum=0&userid=' + userId + '&passed=' + sessionPassed;\n    };\n\n    return {\n        gotoFeedback: gotoFeedback,\n        cancelBooking: cancelBooking\n    };\n});\n"],"file":"booking_actions.min.js"}