{"version":3,"file":"booking_view_manager.min.js","sources":["../src/booking_view_manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry view changes.\n *\n * @module     local_booking/booking_view_manager\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport ModalEvents from 'core/modal_events';\nimport ModalLogentrySummaryForm from 'local_booking/logentry_modal_summary';\nimport * as Repository from 'local_booking/repository';\nimport * as Selectors from 'local_booking/selectors';\n\n/**\n * Refresh student progression and mybookings content.\n *\n * @method  refreshBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} contextId The context id for the course\n * @param   {number} userId The user id for single user booking view.\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @param   {string} filter The filter to show students, inactive (including graduates), suspended, and default to active.\n * @return  {promise}\n */\nexport const refreshBookingsContent = (root, courseId, contextId, userId = 0, target = null, filter = null) => {\n    startLoading(root);\n\n    const bookingtemplate = root.attr('data-template'),\n        bookingtarget = target || root.find(Selectors.bookingwrapper);\n    courseId = courseId || root.find(Selectors.bookingwrapper).data('courseid');\n    contextId = contextId || root.find(Selectors.bookingwrapper).data('contextid');\n    filter = filter || 'active';\n\n    M.util.js_pending([root.get('id'), courseId, contextId].join('-'));\n    return Repository.getBookingsData(courseId, filter, userId)\n        .then((context) => {\n            return Templates.render(bookingtemplate, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(bookingtarget, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, contextId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Refresh student progression and mybookings content.\n *\n * @method  refreshInstructorBookingsContent\n * @param   {object} root The root element.\n * @param   {number} courseId The id of the course associated with the progression view shown\n * @param   {number} contextId The context id for the course\n * @param   {object} target The element being replaced. If not specified, the bookingwrapper is used.\n * @return  {promise}\n */\nexport const refreshInstructorBookingsContent = (root, courseId, contextId, target = null, template = null) => {\n    startLoading(root);\n\n    const mybookingstemplate = template || root.attr('data-template'),\n        mybookingstarget = root.find(Selectors.mybookingswrapper);\n    courseId = courseId || root.find(Selectors.mybookingswrapper).data('courseid');\n    contextId = contextId || root.find(Selectors.mybookingswrapper).data('contextid');\n\n    M.util.js_pending([root.get('id'), courseId, contextId].join('-'));\n    return Repository.getInstructorBookingsData(courseId)\n        .then((context) => {\n            return Templates.render(mybookingstemplate, context);\n        })\n        .then((html, js) => {\n            return Templates.replaceNode(mybookingstarget, html, js);\n        })\n        .always(() => {\n            M.util.js_complete([root.get('id'), courseId, contextId].join('-'));\n            return stopLoading(root);\n        })\n        .fail(Notification.exception);\n};\n\n/**\n * Render the logentry new/edit modal.\n *\n * @method  renderLogentryEditForm\n * @param   {object} root       The container element\n * @param   {object} e          The triggered event.\n * @param   {Number} LogentryFormPromise  The Logentry form promise.\n * @param   {object} target     The target element.\n * @param   {Number} contextId  The course context id of the logentry.\n * @param   {number} courseId   The graded session course id.\n * @param   {number} userId     The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @param   {bool}   isNew      Whether the render is for edit.\n * @param   {string} template   The source template for edits.\n * @returns {promise}\n */\n export const renderLogentryEditForm = (root, e, LogentryFormPromise, target, contextId, courseId,\n    userId, logentryId, isNew, template) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentryEditForm');\n\n    return LogentryFormPromise\n    .then(function(modal) {\n\n        // Show the logentry form modal form when the user clicks on a session\n        // in the 'Instructor dashboard' page to add or edit a logentry\n        // eslint-disable-next-line promise/no-nesting\n        LogentryFormPromise.then(function(modal) {\n            var logegntrySession, flightDate, exerciseId, sessionId, flightType, findpirepenabled;\n\n            // Sel elements not meant for new or additional logentries\n            if (isNew) {\n                if (template == 'local_booking/logbook_std') {\n                    // From logbook\n                    flightDate = 0;\n                    exerciseId = 0;\n                    sessionId = 0;\n                    flightType = '';\n                    findpirepenabled = false;\n                } else {\n                    // From dashboard_session_exporter (Instructor dashboard)\n                    logegntrySession = target.closest(Selectors.actions.viewLogEntry);\n                    flightDate = logegntrySession.dataset.flightDate;\n                    exerciseId = logegntrySession.dataset.exerciseId;\n                    sessionId = logegntrySession.dataset.sessionId;\n                    flightType = logegntrySession.dataset.flightType;\n                    findpirepenabled = $(Selectors.bookingwrapper).data('findpirep');\n                }\n            } else {\n                if (template == 'local_booking/logbook_std') {\n                    // From logbook\n                    let logegntrySession = target.closest(Selectors.containers.summaryForm);\n                    flightDate = logegntrySession.dataset.flightDate;\n                    exerciseId = logegntrySession.dataset.exerciseId;\n                    sessionId = logegntrySession.dataset.sessionId;\n                    flightType = logegntrySession.dataset.flightType;\n                } else {\n                    // From logentry_view\n                    logegntrySession = root.find(Selectors.containers.summaryForm);\n                    flightDate = logegntrySession.data('flight-date');\n                    exerciseId = logegntrySession.data('exercise-id');\n                    sessionId = logegntrySession.data('session-id');\n                    flightType = logegntrySession.data('flight-type');\n                    findpirepenabled = logegntrySession.data('find-pirep');\n                }\n            }\n\n            // Set form properties\n            modal.setContextId(contextId);\n            modal.setCourseId(courseId);\n            modal.setUserId(userId);\n            modal.setLogentryId(logentryId);\n            modal.setExerciseId(exerciseId);\n            modal.setSessionId(sessionId);\n            modal.setFlightDate(flightDate);\n            modal.setFlightType(flightType);\n            modal.hasFindPIREP(findpirepenabled);\n\n            // Handle hidden event.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                // Destroy when hidden.\n                modal.destroy();\n            });\n\n            modal.show();\n            e.stopImmediatePropagation();\n            return false;\n        }).catch(Notification.exception);\n        return modal;\n    })\n    .then(function(modal) {\n        pendingPromise.resolve();\n        return modal;\n    })\n    .catch(Notification.exception);\n };\n\n/**\n * Render the logentry summary modal.\n *\n * @method  renderLogentrySummaryModal\n * @param   {number} courseId The graded session course id.\n * @param   {number} userId The graded session user id.\n * @param   {number} logentryId The graded session logbook entry id.\n * @returns {promise}\n */\n export const renderLogentrySummaryModal = (courseId, userId, logentryId) => {\n    const pendingPromise = new Pending('local_booking/booking_view_manager:renderLogentrySummaryModal');\n\n    // Booking repository promise.\n    return Repository.getLogentryById(logentryId, courseId, userId)\n    .then((getEventResponse) => {\n        if (!getEventResponse.logentry) {\n            throw new Error(Str.get_string('errorlogentryfetch', 'local_booking') + logentryId);\n        }\n\n        return getEventResponse.logentry;\n    })\n    .then(logentryData => {\n        // Build the modal parameters from the logentry data.\n        const modalParams = {\n            title: Str.get_string('logentry', 'local_booking'),\n            body: Templates.render('local_booking/logentry_summary_body', logentryData)\n        };\n\n        // Create the modal.\n        return ModalLogentrySummaryForm.create(modalParams);\n    })\n    .then(modal => {\n        // Handle hidden event.\n        modal.getRoot().on(ModalEvents.hidden, function() {\n            // Destroy when hidden.\n            modal.destroy();\n        });\n        // Finally, render the modal!\n        modal.show();\n\n        return modal;\n    })\n    .then(modal => {\n        pendingPromise.resolve();\n\n        return modal;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Set the element state to loading.\n *\n * @method  startLoading\n * @param   {object} root The container element\n */\n export const startLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.removeClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('disabled', 'disabled');\n    });\n};\n\n/**\n * Remove the loading state from the element.\n *\n * @method  stopLoading\n * @param   {object} root The container element\n */\nexport const stopLoading = (root) => {\n    const loadingIconContainer = root.find(Selectors.containers.loadingIcon);\n    loadingIconContainer.addClass('hidden');\n\n    $(root).one('submit', function() {\n        $(this).find('input[type=\"submit\"]').attr('enabled', 'enabled');\n    });\n};\n"],"names":["_getRequireWildcardCache","e","WeakMap","r","t","_interopRequireWildcard","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireDefault","_jquery","Str","_templates","_notification","_pending","_modal_events","_logentry_modal_summary","Repository","Selectors","_exports","refreshBookingsContent","root","courseId","contextId","userId","arguments","length","undefined","target","filter","startLoading","bookingtemplate","attr","bookingtarget","find","bookingwrapper","data","M","util","js_pending","join","getBookingsData","then","context","Templates","render","html","js","replaceNode","always","js_complete","stopLoading","fail","Notification","exception","refreshInstructorBookingsContent","template","mybookingstemplate","mybookingstarget","mybookingswrapper","getInstructorBookingsData","renderLogentryEditForm","LogentryFormPromise","logentryId","isNew","pendingPromise","Pending","modal","logegntrySession","flightDate","exerciseId","sessionId","flightType","findpirepenabled","closest","actions","viewLogEntry","dataset","$","containers","summaryForm","setContextId","setCourseId","setUserId","setLogentryId","setExerciseId","setSessionId","setFlightDate","setFlightType","hasFindPIREP","getRoot","on","ModalEvents","hidden","destroy","show","stopImmediatePropagation","catch","resolve","renderLogentrySummaryModal","getLogentryById","getEventResponse","logentry","Error","get_string","logentryData","modalParams","title","body","ModalLogentrySummaryForm","create","loadingIcon","removeClass","one","this","addClass"],"mappings":"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"}