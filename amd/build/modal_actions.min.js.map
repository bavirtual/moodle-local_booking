{"version":3,"file":"modal_actions.min.js","sources":["../src/modal_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles additional logentry modal form action.\n *\n * @module     local_booking/modal_actions\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/repository',\n    'local_booking/modal_delete',\n    'local_booking/events',\n    'local_booking/selectors',\n    'local_booking/booking_actions',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    ModalEvents,\n    Pending,\n    Repository,\n    ModalDelete,\n    BookingSessions,\n    BookingSelectors,\n    BookingActions,\n) {\n\n    /**\n     * Prepares the action for the summary modal's delete action.\n     *\n     * @method  confirmDeletion\n     * @param   {Number} logentryId The ID of the logentry.\n     * @param   {Number} userId   The user of the logentry.\n     * @param   {Number} courseId The course of the logentry.\n     * @param   {bool}   cascade  Whether to cascade delete linked logentries.\n     * @return  {Promise}\n     */\n    var confirmDeletion = (logentryId, userId, courseId, cascade) => {\n        var pendingPromise = new Pending('local_booking/booking_actions:confirmDeletion');\n        var deleteStrings = [\n            {\n                key: 'deletelogentry',\n                component: 'local_booking'\n            },\n        ];\n\n        var deletePromise;\n        deleteStrings.push({\n            key: 'confirmlogentrydelete',\n            component: 'local_booking'\n        });\n\n\n        deletePromise = ModalDelete.create();\n\n        var stringsPromise = Str.get_strings(deleteStrings);\n\n        // Setup modal delete prompt form\n        var finalPromise = $.when(stringsPromise, deletePromise)\n        .then(function(strings, deleteModal) {\n            deleteModal.setRemoveOnClose(true);\n            deleteModal.setTitle(strings[0]);\n            deleteModal.setBody(strings[1]);\n\n            deleteModal.show();\n\n            deleteModal.getRoot().on(ModalEvents.save, function() {\n                var pendingPromise = new Pending('local_booking/booking_actions:initModal:deletedlogentry');\n                // eslint-disable-next-line promise/no-nesting\n                Repository.deleteLogentry(logentryId, userId, courseId, cascade)\n                    .then(function() {\n                        $('body').trigger(BookingSessions.logentrydeleted, [logentryId, false]);\n                        return;\n                    })\n                    .then(pendingPromise.resolve)\n                    .always(function() {\n                        Notification.fetchNotifications();\n                    })\n                    .catch(Notification.exception);\n            });\n\n            return deleteModal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n\n        return finalPromise;\n    };\n\n    /**\n     * Register the listeners required to delete the logentry.\n     *\n     * @method  registerDelete\n     * @param   {jQuery} root\n     */\n     var registerDelete = (root) => {\n        root.on('click', BookingSelectors.actions.deleteLogentry, function(e) {\n            // Fetch the logentry title, and pass them into the new dialogue.\n            const target = e.target;\n            var logentrySource = root.find(BookingSelectors.logentryitem),\n                logentryId = logentrySource.data('logentryId') ||\n                target.closest(BookingSelectors.containers.summaryForm).dataset.logentryId,\n                userId = logentrySource.data('userId') ||\n                target.closest(BookingSelectors.containers.summaryForm).dataset.userId,\n                courseId = logentrySource.data('courseId') || $(BookingSelectors.logbookwrapper).data('courseid'),\n                cascade = logentrySource.data('cascade') ||\n                target.closest(BookingSelectors.containers.summaryForm).dataset.cascade;\n            confirmDeletion(logentryId, userId, courseId, cascade);\n\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Register the listeners required to redirect to\n     * exercise (assignment) grading page.\n     *\n     * @method  registerRedirect\n     * @param   {jQuery} root\n     */\n     const registerRedirect = function(root) {\n        root.on('click', BookingSelectors.actions.gotoFeedback, function(e) {\n            // Call redirect to assignment feedback page\n            BookingActions.gotoFeedback(root, e);\n\n            e.preventDefault();\n        });\n    };\n\n    return {\n        registerDelete: registerDelete,\n        registerRedirect: registerRedirect\n    };\n});\n"],"names":["define","$","Str","Notification","ModalEvents","Pending","Repository","ModalDelete","BookingSessions","BookingSelectors","BookingActions","registerDelete","root","on","actions","deleteLogentry","e","target","logentrySource","find","logentryitem","confirmDeletion","logentryId","userId","courseId","cascade","deletePromise","pendingPromise","deleteStrings","key","component","push","create","stringsPromise","get_strings","when","then","strings","deleteModal","setRemoveOnClose","setTitle","setBody","show","getRoot","save","trigger","logentrydeleted","resolve","always","fetchNotifications","catch","exception","modal","data","closest","containers","summaryForm","dataset","logbookwrapper","preventDefault","registerRedirect","gotoFeedback"],"mappings":";;;;;;;;AAuBAA,qCAAO,CACH,SACA,WACA,oBACA,oBACA,eACA,2BACA,6BACA,uBACA,0BACA,kCAEJ,SACIC,EACAC,IACAC,aACAC,YACAC,QACAC,WACAC,YACAC,gBACAC,iBACAC,gBA6GA,MAAO,CACHC,eAnCmBC,OACnBA,KAAKC,GAAG,QAASJ,iBAAiBK,QAAQC,gBAAgB,SAASC,GAE/D,MAAMC,OAASD,EAAEC,OACjB,IAAIC,eAAiBN,KAAKO,KAAKV,iBAAiBW,cAlElCC,EAACC,WAAYC,OAAQC,SAAUC,WACjD,IAQIC,cARAC,eAAiB,IAAItB,QAAQ,iDAC7BuB,cAAgB,CAChB,CACIC,IAAK,iBACLC,UAAW,kBAKnBF,cAAcG,KAAK,CACfF,IAAK,wBACLC,UAAW,kBAIfJ,cAAgBnB,YAAYyB,SAE5B,IAAIC,eAAiB/B,IAAIgC,YAAYN,eAGlB3B,EAAEkC,KAAKF,eAAgBP,eACzCU,MAAK,SAASC,QAASC,aAsBpB,OArBAA,YAAYC,kBAAiB,GAC7BD,YAAYE,SAASH,QAAQ,IAC7BC,YAAYG,QAAQJ,QAAQ,IAE5BC,YAAYI,OAEZJ,YAAYK,UAAU9B,GAAGT,YAAYwC,MAAM,WACvC,IAAIjB,eAAiB,IAAItB,QAAQ,2DAEjCC,WAAWS,eAAeO,WAAYC,OAAQC,SAAUC,SACnDW,MAAK,WACFnC,EAAE,QAAQ4C,QAAQrC,gBAAgBsC,gBAAiB,CAACxB,YAAY,GAEnE,IACAc,KAAKT,eAAeoB,SACpBC,QAAO,WACJ7C,aAAa8C,oBAChB,IACAC,MAAM/C,aAAagD,UAC5B,IAEOb,WACX,IACCF,MAAK,SAASgB,OAGX,OAFAzB,eAAeoB,UAERK,KACV,IACAF,MAAM/C,aAAagD,UAED,EAqBf9B,CAPiBH,eAAemC,KAAK,eACjCpC,OAAOqC,QAAQ7C,iBAAiB8C,WAAWC,aAAaC,QAAQnC,WACvDJ,eAAemC,KAAK,WAC7BpC,OAAOqC,QAAQ7C,iBAAiB8C,WAAWC,aAAaC,QAAQlC,OACrDL,eAAemC,KAAK,aAAepD,EAAEQ,iBAAiBiD,gBAAgBL,KAAK,YAC5EnC,eAAemC,KAAK,YAC9BpC,OAAOqC,QAAQ7C,iBAAiB8C,WAAWC,aAAaC,QAAQhC,SAGpET,EAAE2C,gBACN,GAAE,EAqBFC,iBAXsB,SAAShD,MAC/BA,KAAKC,GAAG,QAASJ,iBAAiBK,QAAQ+C,cAAc,SAAS7C,GAE7DN,eAAemD,aAAajD,KAAMI,GAElCA,EAAE2C,gBACN,KAOR"}