define("local_booking/modal_actions",["exports","jquery","core/str","core/notification","core/modal_events","core/pending","local_booking/repository","local_booking/modal_delete","local_booking/modal_warning","local_booking/events","local_booking/booking_actions","local_booking/selectors"],(function(_exports,_jquery,Str,_notification,_modal_events,_pending,_repository,_modal_delete,_modal_warning,_events,_booking_actions,_selectors){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * This module handles additional logentry modal form action.
   *
   * @module     local_booking/modal_actions
   * @author     Mustafa Hajjar (mustafa.hajjar)
   * @copyright  BAVirtual.co.uk Â© 2024
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.showWarning=_exports.registerRedirect=_exports.registerDelete=_exports.confirmDeletion=void 0,_jquery=_interopRequireDefault(_jquery),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str),_notification=_interopRequireDefault(_notification),_modal_events=_interopRequireDefault(_modal_events),_pending=_interopRequireDefault(_pending),_repository=_interopRequireDefault(_repository),_modal_delete=_interopRequireDefault(_modal_delete),_modal_warning=_interopRequireDefault(_modal_warning),_events=_interopRequireDefault(_events),_booking_actions=_interopRequireDefault(_booking_actions),_selectors=_interopRequireDefault(_selectors);const confirmDeletion=(logentryId,userId,courseId,cascade)=>{let deletePromise,pendingPromise=new _pending.default("local_booking/booking_actions:confirmDeletion"),deleteStrings=[{key:"deletelogentry",component:"local_booking"}];deleteStrings.push({key:"confirmlogentrydelete",component:"local_booking"}),deletePromise=_modal_delete.default.create();let stringsPromise=Str.get_strings(deleteStrings);return _jquery.default.when(stringsPromise,deletePromise).then((function(strings,deleteModal){return deleteModal.setRemoveOnClose(!0),deleteModal.setTitle(strings[0]),deleteModal.setBody(strings[1]),deleteModal.show(),deleteModal.getRoot().on(_modal_events.default.save,(function(){let pendingPromise=new _pending.default("local_booking/booking_actions:initModal:deletedlogentry");_repository.default.deleteLogentry(logentryId,userId,courseId,cascade).then((function(){(0,_jquery.default)("body").trigger(_events.default.logentryDeleted,[logentryId,!1])})).then(pendingPromise.resolve).always((function(){_notification.default.fetchNotifications()})).catch(_notification.default.exception)})),deleteModal})).then((function(modal){return pendingPromise.resolve(),modal})).catch(_notification.default.exception)};_exports.confirmDeletion=confirmDeletion;_exports.showWarning=function(message,title){var _title,_options,_options2,_options2$buttonType,_options3,_options3$buttonDefau,_options4,_options4$stopExecuti,_options5,_options5$customEvent;let data=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},options=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;null!==(_title=title)&&void 0!==_title||(title="wanringtitle"),null!==(_options=options)&&void 0!==_options||(options={}),null!==(_options2$buttonType=(_options2=options).buttonType)&&void 0!==_options2$buttonType||(_options2.buttonType="ok"),null!==(_options3$buttonDefau=(_options3=options).buttonDefault)&&void 0!==_options3$buttonDefau||(_options3.buttonDefault="ok"),null!==(_options4$stopExecuti=(_options4=options).stopExecution)&&void 0!==_options4$stopExecuti||(_options4.stopExecution=!0),null!==(_options5$customEvent=(_options5=options).customEvent)&&void 0!==_options5$customEvent||(_options5.customEvent=null);let footer='<button type="button" class="btn btn-primary" data-action="ok">Ok</button>';"yesno"==options.buttonType&&(footer='<button type="button" class="btn '+("no"==options.buttonDefault?"btn-primary":"btn-secondary")+'" data-action="no">No</button>',footer+='<button type="button" class="btn '+("no"!=options.buttonDefault?"btn-primary":"btn-secondary")+'" data-action="yes">Yes</button>');let stringsPromise,finalPromise,pendingPromise=new _pending.default("local_booking/booking_actions:showWarning"),warningPromise=_modal_warning.default.create(),warningStrings=[{}];async function setupModalWarningPromptForm(warningStrings){try{options.fromComponent&&((warningStrings=[{key:title,component:"local_booking"}]).push({key:message,component:"local_booking",param:data}),stringsPromise=Str.get_strings(warningStrings));const warningModal=await warningPromise;if(stringsPromise){const strings=await stringsPromise;title=strings[0],message=strings[1]}return warningModal.setRemoveOnClose(!0),warningModal.setTitle(title),warningModal.setBody(message),warningModal.setData(data),warningModal.setCustomEvent(options.customEvent),warningModal.setFooter(footer),warningModal.show(),pendingPromise.resolve(),warningModal}catch(error){_notification.default.exception(error)}return null}return setupModalWarningPromptForm(warningStrings),finalPromise};_exports.registerDelete=root=>{root.on("click",_selectors.default.actions.deleteLogentry,(function(e){const target=e.target;let logentrySource=root.find(_selectors.default.logentryitem),logentryId=logentrySource.data("logentryId")||target.closest(_selectors.default.containers.summaryForm).dataset.logentryId,userId=logentrySource.data("userId")||target.closest(_selectors.default.containers.summaryForm).dataset.userId,courseId=logentrySource.data("courseId")||(0,_jquery.default)(_selectors.default.wrappers.logbookwrapper).data("courseid"),cascade=logentrySource.data("cascade")||target.closest(_selectors.default.containers.summaryForm).dataset.cascade;confirmDeletion(logentryId,userId,courseId,cascade),e.preventDefault()}))};_exports.registerRedirect=function(root){root.on("click",_selectors.default.actions.gotoFeedback,(function(e){_booking_actions.default.gotoFeedback(root,e),e.preventDefault()}))}}));

//# sourceMappingURL=modal_actions.min.js.map