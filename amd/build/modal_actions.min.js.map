{"version":3,"file":"modal_actions.min.js","sources":["../src/modal_actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles additional logentry modal form action.\n *\n * @module     local_booking/modal_actions\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/repository',\n    'local_booking/modal_delete',\n    'local_booking/modal_warning',\n    'local_booking/events',\n    'local_booking/selectors',\n    'local_booking/booking_actions',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    ModalEvents,\n    Pending,\n    Repository,\n    ModalDelete,\n    ModalWarning,\n    BookingSessions,\n    Selectors,\n    BookingActions,\n) {\n\n    /**\n     * Prepares the action for the summary modal's delete action.\n     *\n     * @method  confirmDeletion\n     * @param   {Number} logentryId The ID of the logentry.\n     * @param   {Number} userId   The user of the logentry.\n     * @param   {Number} courseId The course of the logentry.\n     * @param   {bool}   cascade  Whether to cascade delete linked logentries.\n     * @return  {Promise}\n     */\n    const confirmDeletion = (logentryId, userId, courseId, cascade) => {\n        let pendingPromise = new Pending('local_booking/booking_actions:confirmDeletion');\n        let deleteStrings = [\n            {\n                key: 'deletelogentry',\n                component: 'local_booking'\n            },\n        ];\n\n        let deletePromise;\n        deleteStrings.push({\n            key: 'confirmlogentrydelete',\n            component: 'local_booking'\n        });\n\n\n        deletePromise = ModalDelete.create();\n\n        let stringsPromise = Str.get_strings(deleteStrings);\n\n        // Setup modal delete prompt form\n        let finalPromise = $.when(stringsPromise, deletePromise)\n        .then(function(strings, deleteModal) {\n            deleteModal.setRemoveOnClose(true);\n            deleteModal.setTitle(strings[0]);\n            deleteModal.setBody(strings[1]);\n\n            deleteModal.show();\n\n            deleteModal.getRoot().on(ModalEvents.save, function() {\n                let pendingPromise = new Pending('local_booking/booking_actions:initModal:deletedlogentry');\n                // eslint-disable-next-line promise/no-nesting\n                Repository.deleteLogentry(logentryId, userId, courseId, cascade)\n                    .then(function() {\n                        $('body').trigger(BookingSessions.logentrydeleted, [logentryId, false]);\n                        return;\n                    })\n                    .then(pendingPromise.resolve)\n                    .always(function() {\n                        Notification.fetchNotifications();\n                    })\n                    .catch(Notification.exception);\n            });\n\n            return deleteModal;\n        })\n        .then(function(modal) {\n            pendingPromise.resolve();\n\n            return modal;\n        })\n        .catch(Notification.exception);\n\n        return finalPromise;\n    };\n\n    /**\n     * Displays a warning message.\n     *\n     * @method  showWarning\n     * @param   {array}  message       The warning message to display.\n     * @param   {array}  title         The modal title string.\n     * @param   {array}  data          Any additional message parameters.\n     * @param   {array}  options       Options array for the popup.\n     * @return  {Promise}\n     */\n    const showWarning = (message, title, data = {}, options = null) => {\n\n        title ??= 'wanringtitle';\n        options.buttonType ??= 'ok';\n        options.buttonDefault ??= 'ok';\n        options.stopExecution ??= true;\n\n        // Setup modal footer\n        let footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"ok\">Ok</button>';\n        if (options.buttonType == 'yesno') {\n            footer = '<button type=\"button\" class=\"btn ' + (options.buttonDefault == 'no' ?\n                'btn-primary' : 'btn-secondary') + '\" data-action=\"no\">No</button>';\n            footer += '<button type=\"button\" class=\"btn ' + (options.buttonDefault != 'no' ?\n                'btn-primary' : 'btn-secondary') + '\" data-action=\"yes\">Yes</button>';\n        }\n\n        let pendingPromise = new Pending('local_booking/booking_actions:showWarning');\n        let warningPromise = ModalWarning.create();\n        let finalPromise;\n\n        if (options.fromComponent) {\n            let warningStrings = [\n                {\n                    key: title,\n                    component: 'local_booking'\n                }];\n\n            if (message) {\n                warningStrings.push({\n                    key: message,\n                    component: 'local_booking',\n                    param: data\n                });\n            }\n\n            let stringsPromise = Str.get_strings(warningStrings).fail(Notification.exception);\n            // Setup modal warning prompt form\n            finalPromise = $.when(stringsPromise, warningPromise)\n            .then(function(strings, warningModal) {\n                warningModal.setRemoveOnClose(true);\n                warningModal.setTitle(strings[0]);\n                warningModal.setBody(strings[1]);\n                warningModal.setData(data);\n                warningModal.setFooter(footer);\n                warningModal.show();\n\n                return warningModal;\n            })\n            .then(function(modal) {\n                pendingPromise.resolve();\n                return modal;\n            })\n            .catch(Notification.exception);\n        } else {\n            // Setup modal warning prompt form\n            finalPromise = $.when(warningPromise)\n            .then(function(warningModal) {\n                warningModal.setRemoveOnClose(true);\n                warningModal.setTitle(title);\n                warningModal.setBody(message);\n                warningModal.setData(data);\n                warningModal.setFooter(footer);\n                warningModal.show();\n\n                return warningModal;\n            })\n            .then(function(modal) {\n                pendingPromise.resolve();\n                return modal;\n            })\n            .catch(Notification.exception);\n        }\n\n        return finalPromise;\n    };\n\n    /**\n     * Register the listeners required to delete the logentry.\n     *\n     * @method  registerDelete\n     * @param   {jQuery} root\n     */\n     const registerDelete = (root) => {\n        root.on('click', Selectors.actions.deleteLogentry, function(e) {\n            // Fetch the logentry title, and pass them into the new dialogue.\n            const target = e.target;\n            let logentrySource = root.find(Selectors.logentryitem),\n            logentryId = logentrySource.data('logentryId') ||\n                target.closest(Selectors.containers.summaryForm).dataset.logentryId,\n            userId = logentrySource.data('userId') || target.closest(Selectors.containers.summaryForm).dataset.userId,\n            courseId = logentrySource.data('courseId') || $(Selectors.wrappers.logbookwrapper).data('courseid'),\n            cascade = logentrySource.data('cascade') || target.closest(Selectors.containers.summaryForm).dataset.cascade;\n\n            confirmDeletion(logentryId, userId, courseId, cascade);\n\n            e.preventDefault();\n        });\n    };\n\n    /**\n     * Register the listeners required to redirect to\n     * exercise (assignment) grading page.\n     *\n     * @method  registerRedirect\n     * @param   {jQuery} root\n     */\n     const registerRedirect = function(root) {\n        root.on('click', Selectors.actions.gotoFeedback, function(e) {\n            // Call redirect to assignment feedback page\n            BookingActions.gotoFeedback(root, e);\n\n            e.preventDefault();\n        });\n    };\n\n    return {\n        registerDelete: registerDelete,\n        registerRedirect: registerRedirect,\n        showWarning: showWarning\n    };\n});\n"],"names":["define","$","Str","Notification","ModalEvents","Pending","Repository","ModalDelete","ModalWarning","BookingSessions","Selectors","BookingActions","registerDelete","root","on","actions","deleteLogentry","e","target","logentrySource","find","logentryitem","logentryId","userId","courseId","cascade","deletePromise","pendingPromise","deleteStrings","key","component","push","create","stringsPromise","get_strings","when","then","strings","deleteModal","setRemoveOnClose","setTitle","setBody","show","getRoot","save","trigger","logentrydeleted","resolve","always","fetchNotifications","catch","exception","modal","confirmDeletion","data","closest","containers","summaryForm","dataset","wrappers","logbookwrapper","preventDefault","registerRedirect","gotoFeedback","showWarning","message","title","options","buttonType","buttonDefault","stopExecution","footer","finalPromise","warningPromise","fromComponent","warningStrings","param","fail","warningModal","setData","setFooter"],"mappings":"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"}