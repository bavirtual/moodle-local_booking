/**
 * Contain the logic for the quick add or update event modal.
 *
 * @module     local_booking/calendar_actions
 * @author     Mustafa Hajjar (mustafa.hajjar)
 * @copyright  BAVirtual.co.uk Â© 2024
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_booking/calendar_actions",["jquery","core/notification","local_booking/repository","local_booking/calendar_view_manager","local_booking/events","local_booking/modal_actions","local_booking/selectors"],(function($,Notification,Repository,CalendarViewManager,BookingEvents,ModalActions,Selectors){var SELECTORS_LOADING_ICON_CONTAINER='[data-region="loading-icon-container"]',Slots=[],BookedSlots=[],SlotIndexes=[];let postActive=!1,formSaved=!0;function getSlots(root,action){const slotType="book"==action?"slot-booked":"slot-marked",year=$(Selectors.wrappers.calendarwrapper).data("year"),week=$(Selectors.wrappers.calendarwrapper).data("week"),tableId=$(Selectors.regions.slotsweek).attr("id"),head=$("#"+tableId+" th"),colCount=document.getElementById(tableId).rows[0].cells.length;var colOffset;Slots.length=0,BookedSlots.length=0,head.each((function(){return"slot-week-day"!=$(this).data("region")||(colOffset=head.index(this)+1,!1)}));for(let i=colOffset;i<=colCount;i++){const dayHour=$("#"+tableId+" td:nth-child("+i+")").map((function(){return[[$(this).data(slotType),$(this).data("slot-timestamp")]]})).get();let aSlot={};dayHour.forEach(((hourSlot,index)=>{let isLastElement=index==dayHour.length-1;hourSlot[0]?0===Object.keys(aSlot).length&&aSlot.constructor===Object?(aSlot.starttime=hourSlot[1],aSlot.endtime=hourSlot[1]+3540):aSlot.endtime=hourSlot[1]+3540:0===Object.keys(aSlot).length&&aSlot.constructor===Object||(aSlot=addSlot(aSlot,slotType,week,year)),!isLastElement||0===Object.keys(aSlot).length&&aSlot.constructor===Object||(aSlot=addSlot(aSlot,slotType,week,year))}))}}function addSlot(aSlot,slotType){let week=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,year=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return"slot-marked"==slotType?Slots.push(aSlot):"slot-booked"==slotType&&(aSlot.week=week,aSlot.year=year,BookedSlots.push(aSlot)),{}}function setPasteState(root){SlotIndexes.length>0?root.find(Selectors.regions.pastebutton).addClass("btn-primary").removeClass("btn-secondary"):root.find(Selectors.regions.pastebutton).addClass("btn-secondary").removeClass("btn-primary")}function setSlot(cell,action){const slotAction="book"==action?"slot-booked":"slot-marked",slotActionClass="book"==action?"slot-booked":"slot-selected";$(cell).data(slotAction)?$(cell).removeClass(slotActionClass):$(cell).addClass(slotActionClass),$(cell).data(slotAction,!$(cell).data(slotAction))}function clean(){formSaved=!0}return{saveWeekSlots:function(root){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;CalendarViewManager.startLoading(root);const course=root.find(Selectors.wrappers.calendarwrapper).data("courseid"),year=root.find(Selectors.wrappers.calendarwrapper).data("year"),week=root.find(Selectors.wrappers.calendarwrapper).data("week"),time=root.find(Selectors.wrappers.calendarwrapper).data("time"),eventData=null!==e?e.eventData:{year:year,week:week,time:time,course:course},minslotperiod=root.find(Selectors.wrappers.calendarwrapper).data("minslotperiod"),unixTsHr=3600,lastMinute=60;getSlots(root);let minSlotPeriodMet=!0;if($.map(Slots,(function(val){val.endtime-val.starttime+lastMinute<minslotperiod*unixTsHr&&0!=minslotperiod&&(minSlotPeriodMet=!1)})),minSlotPeriodMet){let serverCall=null;return serverCall=0!=Slots.length?Repository.saveSlots(Slots,course,year,week):Repository.clearSlots(course,year,week),serverCall.then((function(response){response.validationerror&&alert("Errors encountered: Unable to process availability posting action!"),clean();const slotsSavedEvent=$.Event(BookingEvents.slotsSaved,{eventData:eventData});root.trigger(slotsSavedEvent,this)})).always((function(){return Notification.fetchNotifications(),CalendarViewManager.stopLoading(root)})).fail(Notification.exception)}return CalendarViewManager.stopLoading(root),ModalActions.showWarning("warnminslotperiod","warnminslotperiodtitle",minslotperiod,{fromComponent:!0}),!1},saveBookedSlot:async function(root){const bookButton=$(Selectors.regions.bookbutton),loadingContainer=bookButton.find(SELECTORS_LOADING_ICON_CONTAINER);loadingContainer.removeClass("hidden"),bookButton.prop("disabled",!0),CalendarViewManager.startLoading(root);const course=$(Selectors.wrappers.calendarwrapper).data("courseid"),exercise=$(Selectors.wrappers.calendarwrapper).data("exercise-id"),studentid=$(Selectors.wrappers.calendarwrapper).data("student-id");getSlots(root,"book"),await Repository.hasConflictingBooking(studentid,BookedSlots[0]).then((function(response){return response.validationerror?(alert("Errors encountered: Unable to check conflicting bookings!"),CalendarViewManager.stopLoading(root)):response.result&&(ModalActions.showWarning(response.warnings[0].message,"Warning"),CalendarViewManager.stopLoading(root),loadingContainer.addClass("hidden"),bookButton.prop("disabled",!1)),response.result})).fail(Notification.exception)||Repository.saveBookedSlot(BookedSlots[0],course,exercise,studentid).then((function(response){response.validationerror?(alert("Errors encountered: Unable to save slot!"),CalendarViewManager.stopLoading(root)):(clean(),location.href=M.cfg.wwwroot+"/local/booking/view.php?courseid="+course)})).fail(Notification.exception)},clearWeekSlots:function(){$("td").filter((function(){return 0==$(this).data("slot-booked")&&($(this).data("slot-marked",0),$(this).removeClass("slot-selected")),!0})),formSaved=!1},pasteSlots:function(root){if(SlotIndexes.length>0){const table=document.getElementById(root.find(Selectors.regions.slotsweek).attr("id"));SlotIndexes.forEach((idx=>{let slot=table.rows[idx[0]].cells[idx[1]];$(slot).hasClass("slot-unavailable")||($(slot).data("slot-marked",1),$(slot).addClass("slot-selected",1))})),formSaved=!1}},setPasteState:setPasteState,copySlots:function(root){SlotIndexes.length=0,$(Selectors.regions.day).each(((idx,el)=>{$(el).data("slot-marked")&&SlotIndexes.push([el.closest("tr").rowIndex,el.cellIndex])})),setPasteState(root)},postSlots:function(root,action,target){let overridePost=arguments.length>3&&void 0!==arguments[3]&&arguments[3];void 0===target||!postActive&&!overridePost||target.is(Selectors.regions.daytimeslot)||"all"===action||""===action||(formSaved=!1,setSlot(target,action))},setPosting:function(state){postActive=state},isDirty:function(){return!formSaved},clean:clean,Slots:Slots,SlotIndexes:SlotIndexes}}));

//# sourceMappingURL=calendar_actions.min.js.map