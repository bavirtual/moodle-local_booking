{"version":3,"sources":["../src/modal_logentry_form.js"],"names":["define","$","Event","Str","Notification","CustomEvents","Modal","ModalRegistry","Fragment","LogbookEvents","Repository","BookingSelectors","registered","SELECTORS","ADVANCED_FORM","SAVE_BUTTON","LOADING_ICON_CONTAINER","ModalLogEntryForm","root","call","logentryId","flightDate","exerciseId","courseId","contextId","userId","p1Id","pirepLookupId","reloadingBody","reloadingTitle","saveButton","getFooter","find","TYPE","prototype","Object","create","constructor","setContextId","id","getContextId","setCourseId","getCourseId","hasCourseId","setExerciseId","getExerciseId","hasExerciseId","setUserId","getUserId","hasUserId","setLogentryId","getLogentryId","hasLogentryId","setFlightDate","time","getFlightDate","hasFlightDate","getForm","getBody","disableButtons","prop","enableButtons","reloadTitleContent","titlePromise","get_string","then","string","setTitle","bind","always","fail","exception","reloadBodyContent","formData","bodyPromise","args","userid","logentryid","flightdate","courseid","exerciseid","formdata","loadFragment","setBody","val","applyFlightOpsDefaults","setInputMask","registerChangeListeners","bookingwrapper","data","Inputmask","mask","document","getElementById","pirep","on","e","isNaN","getPIREPData","flighttype","passfail","pictime","onchange","loadingContainer","rule","pirepdiv","parent","removeClass","findPirep","response","result","length","append","addClass","d","Date","logentry","month","getMonth","day","getDate","year","getFullYear","deptime","hour","substring","minute","indexOf","linkedpirep","depicao","arricao","arrtime","callsign","aircraft","aircraftreg","enginetype","route","fstd","warnings","message","focus","show","preventDefault","stopPropagation","flighttime","editmode","nopirep","toggle","div","element","value","slideDown","slideUp","reset","text","reloadAllContent","when","hide","getFormData","serialize","save","invalid","first","formArgs","submitCreateUpdateLogentryForm","validationerror","isExisting","trigger","updated","created","fetchNotifications","registerEventListeners","getModal","events","activate","submit","originalEvent","notifyFormSubmitAjax","register"],"mappings":"AA2BAA,OAAM,qCAAC,CACC,QADD,CAEC,YAFD,CAGC,UAHD,CAIC,mBAJD,CAKC,gCALD,CAMC,YAND,CAOC,qBAPD,CAQC,eARD,CASC,sBATD,CAUC,0BAVD,CAWC,yBAXD,CAAD,CAaF,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CANJ,CAOIC,CAPJ,CAQIC,CARJ,CASIC,CATJ,CAUIC,CAVJ,CAWIC,CAXJ,CAYE,IAEEC,CAAAA,CAAU,GAFZ,CAGEC,CAAS,CAAG,CACZC,aAAa,CAAE,4BADH,CAEZC,WAAW,CAAE,wBAFD,CAGZC,sBAAsB,CAAE,0CAHZ,CAHd,CAcEC,CAAiB,CAAG,SAASC,CAAT,CAAe,CACnCZ,CAAK,CAACa,IAAN,CAAW,IAAX,CAAiBD,CAAjB,EACA,KAAKE,UAAL,CAAkB,IAAlB,CACA,KAAKC,UAAL,CAAkB,IAAlB,CACA,KAAKC,UAAL,CAAkB,IAAlB,CACA,KAAKC,QAAL,CAAgB,IAAhB,CACA,KAAKC,SAAL,CAAiB,IAAjB,CACA,KAAKC,MAAL,CAAc,IAAd,CACA,KAAKC,IAAL,CAAY,IAAZ,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,aAAL,IACA,KAAKC,cAAL,IACA,KAAKC,UAAL,CAAkB,KAAKC,SAAL,GAAiBC,IAAjB,CAAsBnB,CAAS,CAACE,WAAhC,CACrB,CA3BC,CA6BFE,CAAiB,CAACgB,IAAlB,CAAyB,mCAAzB,CACAhB,CAAiB,CAACiB,SAAlB,CAA8BC,MAAM,CAACC,MAAP,CAAc9B,CAAK,CAAC4B,SAApB,CAA9B,CACAjB,CAAiB,CAACiB,SAAlB,CAA4BG,WAA5B,CAA0CpB,CAA1C,CAQAA,CAAiB,CAACiB,SAAlB,CAA4BI,YAA5B,CAA2C,SAASC,CAAT,CAAa,CACpD,KAAKf,SAAL,CAAiBe,CACpB,CAFD,CAUAtB,CAAiB,CAACiB,SAAlB,CAA4BM,YAA5B,CAA2C,UAAW,CAClD,MAAO,MAAKhB,SACf,CAFD,CAUAP,CAAiB,CAACiB,SAAlB,CAA4BO,WAA5B,CAA0C,SAASF,CAAT,CAAa,CACnD,KAAKhB,QAAL,CAAgBgB,CACnB,CAFD,CAUAtB,CAAiB,CAACiB,SAAlB,CAA4BQ,WAA5B,CAA0C,UAAW,CACjD,MAAO,MAAKnB,QACf,CAFD,CAUAN,CAAiB,CAACiB,SAAlB,CAA4BS,WAA5B,CAA0C,UAAW,CACjD,MAAyB,KAAlB,QAAKpB,QACf,CAFD,CAUIN,CAAiB,CAACiB,SAAlB,CAA4BU,aAA5B,CAA4C,SAASL,CAAT,CAAa,CACzD,KAAKjB,UAAL,CAAkBiB,CACrB,CAFG,CAUJtB,CAAiB,CAACiB,SAAlB,CAA4BW,aAA5B,CAA4C,UAAW,CACnD,MAAO,MAAKvB,UACf,CAFD,CAUIL,CAAiB,CAACiB,SAAlB,CAA4BY,aAA5B,CAA4C,UAAW,CACvD,MAA2B,KAApB,QAAKxB,UACf,CAFG,CAUAL,CAAiB,CAACiB,SAAlB,CAA4Ba,SAA5B,CAAwC,SAASR,CAAT,CAAa,CACrD,KAAKd,MAAL,CAAcc,CACjB,CAFG,CAUJtB,CAAiB,CAACiB,SAAlB,CAA4Bc,SAA5B,CAAwC,UAAW,CAC/C,MAAO,MAAKvB,MACf,CAFD,CAUIR,CAAiB,CAACiB,SAAlB,CAA4Be,SAA5B,CAAwC,UAAW,CACnD,MAAuB,KAAhB,QAAKxB,MACf,CAFG,CAUJR,CAAiB,CAACiB,SAAlB,CAA4BgB,aAA5B,CAA4C,SAASX,CAAT,CAAa,CACrD,KAAKnB,UAAL,CAAkBmB,CACrB,CAFD,CAUAtB,CAAiB,CAACiB,SAAlB,CAA4BiB,aAA5B,CAA4C,UAAW,CACnD,MAAO,MAAK/B,UACf,CAFD,CAUAH,CAAiB,CAACiB,SAAlB,CAA4BkB,aAA5B,CAA4C,UAAW,CACnD,MAA2B,KAApB,QAAKhC,UAAL,EAA+C,CAAnB,OAAKA,UAC3C,CAFD,CAUAH,CAAiB,CAACiB,SAAlB,CAA4BmB,aAA5B,CAA4C,SAASC,CAAT,CAAe,CACvD,KAAKjC,UAAL,CAAkBiC,CACrB,CAFD,CAUArC,CAAiB,CAACiB,SAAlB,CAA4BqB,aAA5B,CAA4C,UAAW,CACnD,MAAO,MAAKlC,UACf,CAFD,CAUAJ,CAAiB,CAACiB,SAAlB,CAA4BsB,aAA5B,CAA4C,UAAW,CACnD,MAA2B,KAApB,QAAKnC,UACf,CAFD,CAUAJ,CAAiB,CAACiB,SAAlB,CAA4BuB,OAA5B,CAAsC,UAAW,CAC7C,MAAO,MAAKC,OAAL,GAAe1B,IAAf,CAAoB,MAApB,CACV,CAFD,CASAf,CAAiB,CAACiB,SAAlB,CAA4ByB,cAA5B,CAA6C,UAAW,CACpD,KAAK7B,UAAL,CAAgB8B,IAAhB,CAAqB,UAArB,IACH,CAFD,CASA3C,CAAiB,CAACiB,SAAlB,CAA4B2B,aAA5B,CAA4C,UAAW,CACnD,KAAK/B,UAAL,CAAgB8B,IAAhB,CAAqB,UAArB,IACH,CAFD,CAYA3C,CAAiB,CAACiB,SAAlB,CAA4B4B,kBAA5B,CAAiD,UAAW,CACxD,GAAI,KAAKjC,cAAT,CAAyB,CACrB,MAAO,MAAKkC,YACf,CAED,KAAKlC,cAAL,IAEA,GAAI,KAAKuB,aAAL,EAAJ,CAA0B,CACtB,KAAKW,YAAL,CAAoB5D,CAAG,CAAC6D,UAAJ,CAAe,cAAf,CAA+B,eAA/B,CACvB,CAFD,IAEO,CACH,KAAKD,YAAL,CAAoB5D,CAAG,CAAC6D,UAAJ,CAAe,aAAf,CAA8B,eAA9B,CACvB,CAED,KAAKD,YAAL,CAAkBE,IAAlB,CAAuB,SAASC,CAAT,CAAiB,CACpC,KAAKC,QAAL,CAAcD,CAAd,EACA,MAAOA,CAAAA,CACV,CAHsB,CAGrBE,IAHqB,CAGhB,IAHgB,CAAvB,EAICC,MAJD,CAIQ,UAAW,CACf,KAAKxC,cAAL,GAEH,CAHO,CAGNuC,IAHM,CAGD,IAHC,CAJR,EAQCE,IARD,CAQMlE,CAAY,CAACmE,SARnB,EAUA,MAAO,MAAKR,YACf,CAxBD,CAuCA9C,CAAiB,CAACiB,SAAlB,CAA4BsC,iBAA5B,CAAgD,SAASC,CAAT,CAAmB,CAC/D,GAAI,KAAK7C,aAAT,CAAwB,CACpB,MAAO,MAAK8C,WACf,CAED,KAAK9C,aAAL,IACA,KAAK+B,cAAL,GAEA,GAAIgB,CAAAA,CAAI,CAAG,EAAX,CAEA,GAAI,KAAK1B,SAAL,EAAJ,CAAsB,CAClB0B,CAAI,CAACC,MAAL,CAAc,KAAK5B,SAAL,EACjB,CAED,GAAI,KAAKI,aAAL,EAAJ,CAA0B,CACtBuB,CAAI,CAACE,UAAL,CAAkB,KAAK1B,aAAL,EACrB,CAED,GAAI,KAAKK,aAAL,EAAJ,CAA0B,CACtBmB,CAAI,CAACG,UAAL,CAAkB,KAAKvB,aAAL,EACrB,CAED,GAAI,KAAKZ,WAAL,EAAJ,CAAwB,CACpBgC,CAAI,CAACI,QAAL,CAAgB,KAAKrC,WAAL,EACnB,CAED,GAAI,KAAKI,aAAL,EAAJ,CAA0B,CACtB6B,CAAI,CAACK,UAAL,CAAkB,KAAKnC,aAAL,EACrB,CAED,GAAwB,WAApB,QAAO4B,CAAAA,CAAX,CAAqC,CACjCE,CAAI,CAACM,QAAL,CAAgBR,CACnB,CAGD,KAAKC,WAAL,CAAmBlE,CAAQ,CAAC0E,YAAT,CAAsB,eAAtB,CAAuC,eAAvC,CAAwD,KAAK1C,YAAL,EAAxD,CAA6EmC,CAA7E,CAAnB,CAEA,KAAKQ,OAAL,CAAa,KAAKT,WAAlB,EAEA,KAAKA,WAAL,CAAiBT,IAAjB,CAAsB,UAAW,CAE7B,KAAKvC,IAAL,CAAYzB,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,EAAZ,CACA,KAAKC,sBAAL,GACA,KAAKxB,aAAL,GACA,KAAKyB,YAAL,GACA,KAAKC,uBAAL,EAGH,CATqB,CASpBnB,IAToB,CASf,IATe,CAAtB,EAUCE,IAVD,CAUMlE,CAAY,CAACmE,SAVnB,EAWCF,MAXD,CAWQ,UAAW,CACf,KAAKzC,aAAL,GAEH,CAHO,CAGNwC,IAHM,CAGD,IAHC,CAXR,EAeCE,IAfD,CAeMlE,CAAY,CAACmE,SAfnB,EAiBA,MAAO,MAAKG,WACf,CAzDD,CAgEAzD,CAAiB,CAACiB,SAAlB,CAA4BoD,YAA5B,CAA2C,UAAW,CAElD,GAA+D,MAA3D,EAAArF,CAAC,CAACU,CAAgB,CAAC6E,cAAlB,CAAD,CAAmCC,IAAnC,CAAwC,cAAxC,CAAJ,CAAuE,CACnEC,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAzD,CACH,CAFD,IAEO,CACHH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAzD,CACH,CACDH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,iCAAV,CAAD,CAAT,CAAwDC,IAAxD,CAA6DC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAA7D,EACAH,SAAS,CAAC,CAAC,MAAS,iCAAV,CAAD,CAAT,CAAwDC,IAAxD,CAA6DC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAA7D,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,6BAAV,CAAD,CAAT,CAAoDC,IAApD,CAAyDC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAzD,EACAH,SAAS,CAAC,CAAC,MAAS,OAAV,CAAD,CAAT,CAA8BC,IAA9B,CAAmCC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAnC,EACAH,SAAS,CAAC,CAAC,MAAS,OAAV,CAAD,CAAT,CAA8BC,IAA9B,CAAmCC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAnC,EAEA,GAA4B,CAAxB,OAAK1C,aAAL,EAAJ,CAA+B,CAC3BuC,SAAS,CAAC,CAAC,MAAS,OAAV,CAAD,CAAT,CAA8BC,IAA9B,CAAmCC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAnC,EACAH,SAAS,CAAC,CAAC,MAAS,OAAV,CAAD,CAAT,CAA8BC,IAA9B,CAAmCC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAnC,CACH,CACJ,CAxBD,CA+BA5E,CAAiB,CAACiB,SAAlB,CAA4BqD,uBAA5B,CAAsD,UAAW,CAG7D,GAAIO,CAAAA,CAAK,CAAG7F,CAAC,CAAC,aAAD,CAAb,CACA6F,CAAK,CAACC,EAAN,CAAS,QAAT,CAAmB,SAASC,CAAT,CAAY,CAC3B,GAAI,CAACC,KAAK,CAACH,CAAK,CAACV,GAAN,EAAD,CAAV,CAAyB,CACrB,MAAO,MAAKc,YAAL,CAAkBF,CAAlB,CACV,CACJ,CAJkB,CAIjB5B,IAJiB,CAIZ,IAJY,CAAnB,EAOA,GAAI+B,CAAAA,CAAU,CAAGlG,CAAC,CAAC,4BAAD,CAAlB,CACAkG,CAAU,CAACJ,EAAX,CAAc,QAAd,CAAwB,UAAW,CAC/B,MAAO,MAAKV,sBAAL,EACV,CAFuB,CAEtBjB,IAFsB,CAEjB,IAFiB,CAAxB,EAKA,GAAIgC,CAAAA,CAAQ,CAAGnG,CAAC,CAAC,0BAAD,CAAhB,CACAmG,CAAQ,CAACL,EAAT,CAAY,QAAZ,CAAsB,UAAW,CAC7B,MAAO,MAAKV,sBAAL,EACV,CAFqB,CAEpBjB,IAFoB,CAEf,IAFe,CAAtB,EAKAiC,OAAO,CAAGT,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAV,CACAQ,OAAO,CAACC,QAAR,CAAmB,UAAW,CAC1B,MAAO,MAAKjB,sBAAL,EACV,CAFkB,CAEjBjB,IAFiB,CAEZ,IAFY,CAGtB,CA3BD,CAqCCnD,CAAiB,CAACiB,SAAlB,CAA4BgE,YAA5B,CAA2C,SAASF,CAAT,CAAY,CACpD,GAAIO,CAAAA,CAAgB,CAAG,KAAKxE,SAAL,GAAiBC,IAAjB,CAAsBnB,CAAS,CAACG,sBAAhC,CAAvB,CACAwF,IAAI,CAAGvG,CAAC,CAACU,CAAgB,CAAC6E,cAAlB,CAAD,CAAmCC,IAAnC,CAAwC,cAAxC,CAAP,CACAgB,QAAQ,CAAGxG,CAAC,CAAC,aAAD,CAAD,CAAiByG,MAAjB,EAAX,CACAZ,KAAK,CAAG7F,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,EAAR,CACAL,QAAQ,CAAG,KAAKrC,WAAL,EAAX,CAEA,GAAa,EAAT,EAAAoD,KAAJ,CAAiB,CACbS,CAAgB,CAACI,WAAjB,CAA6B,QAA7B,EACA,MAAOjG,CAAAA,CAAU,CAACkG,SAAX,CAAqBd,KAArB,CAA4Bf,QAA5B,CAAsC9E,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,EAAtC,EACFnB,IADE,CACG,SAAS4C,CAAT,CAAmB,CAErB,GAAIA,CAAQ,CAACC,MAAb,CAAqB,CAEjB7G,CAAC,CAAC,aAAD,CAAD,CAAiB0G,WAAjB,CAA6B,YAA7B,EACA,GAAI,CAAC1G,CAAC,CAAC,mBAAD,CAAD,CAAuB8G,MAA5B,CAAoC,CAChC5G,CAAG,CAAC6D,UAAJ,CAAe,YAAf,CAA6B,eAA7B,EAA8CC,IAA9C,CAAmD,SAASC,CAAT,CAAiB,CAChEuC,QAAQ,CAACO,MAAT,CAAgB,yGACW9C,CADX,CACoB,OADpC,EAEAjE,CAAC,CAAC,aAAD,CAAD,CAAiBgH,QAAjB,CAA0B,UAA1B,EACA,MAAO/C,CAAAA,CACV,CALD,EAMCI,IAND,CAMMlE,CAAY,CAACmE,SANnB,CAOH,CAID,GAAI2C,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,CAAwC,GAA/B,CAAAN,CAAQ,CAACO,QAAT,CAAkBtC,UAA3B,CAAR,CACIuC,CAAK,CAAG,IAAMH,CAAC,CAACI,QAAF,GAAe,CAArB,CADZ,CAEIC,CAAG,CAAG,GAAKL,CAAC,CAACM,OAAF,EAFf,CAGIC,CAAI,CAAGP,CAAC,CAACQ,WAAF,EAHX,CAIIpE,CAAI,CAAGuD,CAAQ,CAACO,QAAT,CAAkBO,OAJ7B,CAKIC,CAAI,CAAGtE,CAAI,CAACuE,SAAL,CAAe,CAAf,CAAkB,CAAlB,CALX,CAMIC,CAAM,CAAGxE,CAAI,CAACuE,SAAL,CAAevE,CAAI,CAACyE,OAAL,CAAa,GAAb,EAAoB,CAAnC,CAAsCzE,CAAI,CAACyD,MAA3C,CANb,CAOA9G,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,CAA4BmC,CAA5B,EACAtH,CAAC,CAAC,sBAAD,CAAD,CAA0BmF,GAA1B,CAA8BiC,CAA9B,EACApH,CAAC,CAAC,qBAAD,CAAD,CAAyBmF,GAAzB,CAA6BqC,CAA7B,EACAxH,CAAC,CAAC,qBAAD,CAAD,CAAyBmF,GAAzB,CAA6BwC,CAA7B,EACA3H,CAAC,CAAC,uBAAD,CAAD,CAA2BmF,GAA3B,CAA+B0C,CAA/B,EACA,GAAY,MAAR,EAAAtB,IAAJ,CAAoB,CAChBvG,CAAC,CAAC,cAAD,CAAD,CAAkBmF,GAAlB,CAAsByB,CAAQ,CAACO,QAAT,CAAkBf,OAAxC,CACH,CAFD,IAEO,IAAY,WAAR,EAAAG,IAAJ,CAAyB,CAC5BvG,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,CAA4ByB,CAAQ,CAACO,QAAT,CAAkBf,OAA9C,EACApG,CAAC,CAAC,iBAAD,CAAD,CAAqBmF,GAArB,CAAyByB,CAAQ,CAACO,QAAT,CAAkBf,OAA3C,EACApG,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBf,OAAvC,CACH,CACDpG,CAAC,CAAC,6BAAD,CAAD,CAA+BmF,GAA/B,CAAmCyB,CAAQ,CAACO,QAAT,CAAkBY,WAArD,EACA/H,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBf,OAAvC,EACApG,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBa,OAAvC,EACAhI,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBc,OAAvC,EACAjI,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBO,OAAvC,EACA1H,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqByB,CAAQ,CAACO,QAAT,CAAkBe,OAAvC,EACAlI,CAAC,CAAC,cAAD,CAAD,CAAkBmF,GAAlB,CAAsByB,CAAQ,CAACO,QAAT,CAAkBgB,QAAxC,EACAnI,CAAC,CAAC,cAAD,CAAD,CAAkBmF,GAAlB,CAAsByB,CAAQ,CAACO,QAAT,CAAkBiB,QAAxC,EACApI,CAAC,CAAC,iBAAD,CAAD,CAAqBmF,GAArB,CAAyByB,CAAQ,CAACO,QAAT,CAAkBkB,WAA3C,EACArI,CAAC,CAAC,gBAAD,CAAD,CAAoBmF,GAApB,CAAwByB,CAAQ,CAACO,QAAT,CAAkBmB,UAA1C,EACAtI,CAAC,CAAC,WAAD,CAAD,CAAemF,GAAf,CAAmByB,CAAQ,CAACO,QAAT,CAAkBoB,KAArC,EACAvI,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,CAAkByB,CAAQ,CAACO,QAAT,CAAkBqB,IAApC,EACA,GAAmD,OAA/C,EAAAxI,CAAC,CAAC,kCAAD,CAAD,CAAsCmF,GAAtC,EAAJ,CAA4D,CACxDnF,CAAC,CAAC,eAAD,CAAD,CAAmBmF,GAAnB,CAAuByB,CAAQ,CAACO,QAAT,CAAkBf,OAAzC,EACApG,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,CAA4ByB,CAAQ,CAACO,QAAT,CAAkBf,OAA9C,CACH,CAHD,IAGO,CACHpG,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,CAA4ByB,CAAQ,CAACO,QAAT,CAAkBf,OAA9C,CACH,CACJ,CApDD,IAoDO,CAEHpG,CAAC,CAAC,aAAD,CAAD,CAAiBgH,QAAjB,CAA0B,YAA1B,EACA,GAAI,CAAChH,CAAC,CAAC,oBAAD,CAAD,CAAwB8G,MAA7B,CAAqC,CACjCN,QAAQ,CAACO,MAAT,CAAgB,4GACeH,CAAQ,CAAC6B,QAAT,CAAkB,CAAlB,EAAqBC,OADpC,CAC8C,OAD9D,EAEA1I,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,CAAqB,EAArB,EACAnF,CAAC,CAAC,aAAD,CAAD,CAAiB2I,KAAjB,EACH,CALD,IAKO,CACH3I,CAAC,CAAC,oBAAD,CAAD,CAAwB4I,IAAxB,EACH,CACJ,CAGJ,CArEE,EAsEFxE,MAtEE,CAsEK,UAAW,CAGfkC,CAAgB,CAACU,QAAjB,CAA0B,QAA1B,EACAjB,CAAC,CAAC8C,cAAF,GACA9C,CAAC,CAAC+C,eAAF,EAGH,CA9EE,EA+EFzE,IA/EE,CA+EGlE,CAAY,CAACmE,SA/EhB,CAgFV,CAlFD,IAkFO,CACH,MAAO,EACV,CACJ,CA5FA,CAsGAtD,CAAiB,CAACiB,SAAlB,CAA4BmD,sBAA5B,CAAqD,UAAW,CAE7DmB,IAAI,CAAGvG,CAAC,CAACU,CAAgB,CAAC6E,cAAlB,CAAD,CAAmCC,IAAnC,CAAwC,cAAxC,CAAP,CAF6D,GAGzDuD,CAAAA,CAAU,CAAG/I,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,EAH4C,CAIzDe,CAAU,CAAGlG,CAAC,CAAC,kCAAD,CAAD,CAAsCmF,GAAtC,EAJ4C,CAKzDgB,CAAQ,CAAGnG,CAAC,CAAC,gCAAD,CAAD,CAAoCmF,GAApC,EAL8C,CAMzD6D,CAAQ,CAA2B,CAAxB,OAAK9F,aAAL,EAN8C,CAOzD+F,CAAO,CAA6B,EAA1B,EAAAjJ,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,EAP+C,CAUzD+D,CAAM,CAAG,SAASC,CAAT,CAAcC,CAAd,CAAuBR,CAAvB,CAA6BS,CAA7B,CAAoC,CAC7C,GAAIT,CAAJ,CAAU,CACN5I,CAAC,CAACmJ,CAAD,CAAD,CAAOG,SAAP,CAAiB,MAAjB,CACH,CAFD,IAEO,CACHtJ,CAAC,CAACmJ,CAAD,CAAD,CAAOI,OAAP,CAAe,MAAf,CACH,CAED,GAAqB,WAAjB,QAAOF,CAAAA,CAAX,CAAkC,CAC9BG,CAAK,CAACJ,CAAD,CAAUR,CAAV,CAAgBS,CAAhB,CACR,CACJ,CApB4D,CAuBzDG,CAAK,CAAG,SAASJ,CAAT,CAAkBR,CAAlB,CAAwBS,CAAxB,CAA+B,CAEvC,GAAIT,CAAI,EAAI,CAACK,CAAb,CAAsB,CAClB,GAAI,CAAC,CAACjJ,CAAC,CAACoJ,CAAD,CAAD,CAAWjE,GAAX,EAAD,EAA0C,CAArB,GAACnF,CAAC,CAACoJ,CAAD,CAAD,CAAWjE,GAAX,EAAvB,GAAiD,CAAC6D,CAAtD,CAAgE,CAC5DhJ,CAAC,CAACoJ,CAAD,CAAD,CAAWjE,GAAX,CAAe,EAAf,CACH,CACJ,CAJD,IAIO,CACHnF,CAAC,CAACoJ,CAAD,CAAD,CAAWjE,GAAX,CAAekE,CAAf,CACH,CACJ,CAhC4D,CAmC7D,GAAkB,UAAd,EAAAnD,CAAU,EAAiC,OAAd,EAAAA,CAAU,EAA2B,MAAZ,EAAAC,CAA1D,CAA+E,CAE3EnG,CAAC,CAAC,yBAAD,CAAD,CAA6ByJ,IAA7B,CAAkCT,CAAQ,CAAG,OAAH,CAAa,kBAAvD,EACAhJ,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,CAAkB,KAAK1D,IAAvB,EAGAyH,CAAM,CAAC,gBAAD,CAAmB,UAAnB,CAA6C,MAAd,EAAAhD,CAA/B,CAAN,CAGAgD,CAAM,CAAC,qBAAD,CAAwB,cAAxB,CAAsD,OAAd,EAAAhD,CAAxC,CAAN,CAGAgD,CAAM,CAAC,oBAAD,CAAuB,cAAvB,CAA+C,MAAR,EAAA3C,IAAI,GAAe,CAACyC,CAAD,EAC3DA,CAAQ,EAA+B,EAA3B,EAAAhJ,CAAC,CAAC,cAAD,CAAD,CAAkBmF,GAAlB,EADgC,CAA3C,CACoD,MAAR,EAAAoB,IAAI,CAAawC,CAAb,CAA0B,CAD1E,CAAN,CAIA,GAAIE,CAAJ,CAAa,CACTC,CAAM,CAAC,mBAAD,CAAsB,aAAtB,CAAsC,CAACF,CAAD,EAAcA,CAAQ,EACpC,EAA1B,EAAAhJ,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,EADE,CAC8B6D,CAAQ,EAAkB,OAAd,EAAA9C,CAAZ,CAAoC,CAApC,CAAwC6C,CADtE,CAET,CAGDG,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,CAAqD,CAACF,CAAD,EAA2B,OAAd,EAAA9C,CAAd,EAAyC8C,CAAQ,EACtE,EAAjC,EAAAhJ,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,EADE,CACqC6D,CAAQ,EAAkB,OAAd,EAAA9C,CAAZ,CAAoC,CAApC,CAAwC6C,CAD7E,CAAN,CAIAG,CAAM,CAAC,sBAAD,CAAyB,gBAAzB,CAAyD,UAAd,EAAAhD,CAA3C,CAAsE+C,CAAO,CAAGjJ,CAAC,CAAC,gBAAD,CAAD,CAAoBmF,GAApB,EAAH,CAA+B,CAA5G,CAAN,CAGA+D,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,CAA2D,WAAR,EAAA3C,IAAnD,CAAgF,WAAR,EAAAA,IAAI,CAAkBwC,CAAlB,CAA+B,CAA3G,CAAN,CAGAG,CAAM,CAAC,uBAAD,CAA0B,iBAA1B,CAAqD,WAAR,EAAA3C,IAAI,GAAoB,CAACyC,CAAD,EACtEA,CAAQ,EAAkC,EAA9B,EAAAhJ,CAAC,CAAC,iBAAD,CAAD,CAAqBmF,GAArB,EADsC,CAAjD,CACuD,WAAR,EAAAoB,IAAI,CAAkBwC,CAAlB,CAA+B,CADlF,CAAN,CAIAG,CAAM,CAAC,qBAAD,CAAwB,eAAxB,IAAgD,CAAhD,CAAN,CACAA,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,IAA0D,CAA1D,CAET,CAvCD,IAuCO,IAAkB,MAAd,EAAAhD,CAAJ,CAA0B,CAE7BlG,CAAC,CAAC,yBAAD,CAAD,CAA6ByJ,IAA7B,CAAkCT,CAAQ,CAAG,OAAH,CAAa,YAAvD,EACAhJ,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,CAAkBnF,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,EAAlB,EAGA+D,CAAM,CAAC,gBAAD,CAAmB,UAAnB,IAAN,CACAA,CAAM,CAAC,qBAAD,CAAwB,cAAxB,IAAN,CACAA,CAAM,CAAC,oBAAD,CAAuB,cAAvB,IAA8C,CAA9C,CAAN,CACAA,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,IAA0D,CAA1D,CAAN,CACAA,CAAM,CAAC,sBAAD,CAAyB,gBAAzB,IAAkD,CAAlD,CAAN,CACAA,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,IAA0D,CAA1D,CAAN,CACAA,CAAM,CAAC,uBAAD,CAA0B,iBAA1B,IAAoD,CAApD,CAAN,CACAA,CAAM,CAAC,qBAAD,CAAwB,eAAxB,IAAgD,CAAhD,CAAN,CACAA,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,IAA0D,CAA1D,CAAN,CAGAA,CAAM,CAAC,uBAAD,CAA0B,gBAA1B,IAAN,CACAlJ,CAAC,CAAC,mBAAD,CAAD,CAAuBmF,GAAvB,CAA2B,GAA3B,EACAnF,CAAC,CAAC,mBAAD,CAAD,CAAuBmF,GAAvB,CAA2B,GAA3B,CAEH,CArBM,IAqBA,IAAkB,OAAd,EAAAe,CAAU,EAA2B,MAAZ,EAAAC,CAA7B,CAAiD,CAEpDnG,CAAC,CAAC,yBAAD,CAAD,CAA6ByJ,IAA7B,CAAkCT,CAAQ,CAAG,OAAH,CAAa,kBAAvD,EACAhJ,CAAC,CAAC,UAAD,CAAD,CAAcmF,GAAd,CAAkB,KAAK1D,IAAvB,EAGAyH,CAAM,CAAC,gBAAD,CAAmB,UAAnB,IAAN,CACAA,CAAM,CAAC,qBAAD,CAAwB,cAAxB,IAAN,CACAA,CAAM,CAAC,oBAAD,CAAuB,cAAvB,IAA8C,CAA9C,CAAN,CAEAA,CAAM,CAAC,mBAAD,CAAsB,aAAtB,CAAsC,CAACF,CAAD,EAAcA,CAAQ,EACpC,EAA1B,EAAAhJ,CAAC,CAAC,aAAD,CAAD,CAAiBmF,GAAjB,EADE,CAC8B,CAD9B,CAAN,CAEA+D,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,IAA0D,CAA1D,CAAN,CACAA,CAAM,CAAC,sBAAD,CAAyB,gBAAzB,IAAkD,CAAlD,CAAN,CACAA,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,CAA2D,WAAR,EAAA3C,IAAnD,CAAwE,CAAxE,CAAN,CACA2C,CAAM,CAAC,uBAAD,CAA0B,iBAA1B,IAAoD,CAApD,CAAN,CACAA,CAAM,CAAC,qBAAD,CAAwB,eAAxB,CAA0C,CAACF,CAAD,EAAcA,CAAQ,EACtC,EAA5B,EAAAhJ,CAAC,CAAC,eAAD,CAAD,CAAmBmF,GAAnB,EADE,CACgC4D,CADhC,CAAN,CAEAG,CAAM,CAAC,0BAAD,CAA6B,oBAA7B,CAAoD,CAACF,CAAD,EAAcA,CAAQ,EAC3C,EAAjC,EAAAhJ,CAAC,CAAC,oBAAD,CAAD,CAAwBmF,GAAxB,EADE,CACqC4D,CADrC,CAET,CACJ,CApHA,CA4HD/H,CAAiB,CAACiB,SAAlB,CAA4ByH,gBAA5B,CAA+C,UAAW,CACtD,MAAO1J,CAAAA,CAAC,CAAC2J,IAAF,CAAO,KAAK9F,kBAAL,EAAP,CAAkC,KAAKU,iBAAL,EAAlC,CACV,CAFD,CAeAvD,CAAiB,CAACiB,SAAlB,CAA4B2G,IAA5B,CAAmC,UAAW,CAC1C,KAAKc,gBAAL,GACArJ,CAAK,CAAC4B,SAAN,CAAgB2G,IAAhB,CAAqB1H,IAArB,CAA0B,IAA1B,CACH,CAHD,CAcAF,CAAiB,CAACiB,SAAlB,CAA4B2H,IAA5B,CAAmC,UAAW,CAC1CvJ,CAAK,CAAC4B,SAAN,CAAgB2H,IAAhB,CAAqB1I,IAArB,CAA0B,IAA1B,EACA,KAAK+B,aAAL,CAAmB,IAAnB,EACA,KAAKG,aAAL,CAAmB,IAAnB,EACA,KAAKf,YAAL,CAAkB,IAAlB,EACA,KAAKG,WAAL,CAAiB,IAAjB,EACA,KAAKG,aAAL,CAAmB,IAAnB,CACH,CAPD,CAeA3B,CAAiB,CAACiB,SAAlB,CAA4B4H,WAA5B,CAA0C,UAAW,CACjD,MAAO,MAAKrG,OAAL,GAAesG,SAAf,EACV,CAFD,CAkBA9I,CAAiB,CAACiB,SAAlB,CAA4B8H,IAA5B,CAAmC,UAAW,CAC1C,GAAIC,CAAAA,CAAJ,CACI1D,CAAgB,CAAG,KAAKzE,UAAL,CAAgBE,IAAhB,CAAqBnB,CAAS,CAACG,sBAA/B,CADvB,CAIAiJ,CAAO,CAAG,KAAKxG,OAAL,GAAezB,IAAf,CAAoB,yBAApB,CAAV,CAGA,GAAIiI,CAAO,CAAClD,MAAZ,CAAoB,CAChBkD,CAAO,CAACC,KAAR,GAAgBtB,KAAhB,GACA,MACH,CAEDrC,CAAgB,CAACI,WAAjB,CAA6B,QAA7B,EACA,KAAKhD,cAAL,GAd0C,GAgBtCc,CAAAA,CAAQ,CAAG,KAAKqF,WAAL,EAhB2B,CAiBtCK,CAAQ,CAAG,aAAe,KAAK3I,SAApB,CAAgC,YAAhC,CAA+C,KAAKD,QAApD,CACT,cADS,CACQ,KAAKD,UADb,CAC0B,UAD1B,CACuC,KAAKG,MAlBjB,CAsB1C,MAAOf,CAAAA,CAAU,CAAC0J,8BAAX,CAA0CD,CAA1C,CAAoD1F,CAApD,EACFR,IADE,CACG,SAAS4C,CAAT,CAAmB,CACrB,GAAIA,CAAQ,CAACwD,eAAb,CAA8B,CAI1B,KAAK7F,iBAAL,CAAuBC,CAAvB,CAEH,CAND,IAMO,CAKH,GAAI6F,CAAAA,CAAU,CAAG,KAAKlH,aAAL,EAAjB,CAGA,KAAKyG,IAAL,GAGA,GAAIS,CAAJ,CAAgB,CACZrK,CAAC,CAAC,MAAD,CAAD,CAAUsK,OAAV,CAAkB9J,CAAa,CAAC+J,OAAhC,CAAyC,CAAC3D,CAAQ,CAACO,QAAV,CAAzC,CACH,CAFD,IAEO,CACHnH,CAAC,CAAC,MAAD,CAAD,CAAUsK,OAAV,CAAkB9J,CAAa,CAACgK,OAAhC,CAAyC,CAAC5D,CAAQ,CAACO,QAAV,CAAzC,CACH,CACJ,CAGJ,CA1BK,CA0BJhD,IA1BI,CA0BC,IA1BD,CADH,EA4BFC,MA5BE,CA4BK,UAAW,CAGfkC,CAAgB,CAACU,QAAjB,CAA0B,QAA1B,EACA7G,CAAY,CAACsK,kBAAb,GACA,KAAK7G,aAAL,EAGH,CARO,CAQNO,IARM,CAQD,IARC,CA5BL,EAqCFE,IArCE,CAqCGlE,CAAY,CAACmE,SArChB,CAsCN,CA5DL,CAmEAtD,CAAiB,CAACiB,SAAlB,CAA4ByI,sBAA5B,CAAqD,UAAW,CAE5DrK,CAAK,CAAC4B,SAAN,CAAgByI,sBAAhB,CAAuCxJ,IAAvC,CAA4C,IAA5C,EAKA,KAAKyJ,QAAL,GAAgB7E,EAAhB,CAAmB1F,CAAY,CAACwK,MAAb,CAAoBC,QAAvC,CAAiDjK,CAAS,CAACE,WAA3D,CAAwE,SAASiF,CAAT,CAAYP,CAAZ,CAAkB,CACtF,KAAKhC,OAAL,GAAesH,MAAf,GACAtF,CAAI,CAACuF,aAAL,CAAmBlC,cAAnB,GACA9C,CAAC,CAAC+C,eAAF,EACH,CAJuE,CAItE3E,IAJsE,CAIjE,IAJiE,CAAxE,EAQA,KAAKwG,QAAL,GAAgB7E,EAAhB,CAAmB,QAAnB,CAA6B,SAASC,CAAT,CAAY,CACrC9F,CAAK,CAAC+K,oBAAN,CAA2B,KAAKxH,OAAL,GAAe,CAAf,CAA3B,EAEA,KAAKuG,IAAL,GAIAhE,CAAC,CAAC8C,cAAF,GACA9C,CAAC,CAAC+C,eAAF,EACH,CAT4B,CAS3B3E,IAT2B,CAStB,IATsB,CAA7B,CAUH,CAzBD,CA6BA,GAAI,CAACxD,CAAL,CAAiB,CACbL,CAAa,CAAC2K,QAAd,CAAuBjK,CAAiB,CAACgB,IAAzC,CAA+ChB,CAA/C,CAAkE,mCAAlE,EACAL,CAAU,GACb,CAED,MAAOK,CAAAA,CACV,CAzzBK,CAAN","sourcesContent":["/* eslint-disable complexity */\n/* eslint-disable babel/new-cap */\n/* eslint-disable no-undef */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles logbook entry form.\n *\n * @module     local_booking/modal_logentry_form\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk © 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/event',\n        'core/str',\n        'core/notification',\n        'core/custom_interaction_events',\n        'core/modal',\n        'core/modal_registry',\n        'core/fragment',\n        'local_booking/events',\n        'local_booking/repository',\n        'local_booking/selectors',\n    ],\n    function(\n        $,\n        Event,\n        Str,\n        Notification,\n        CustomEvents,\n        Modal,\n        ModalRegistry,\n        Fragment,\n        LogbookEvents,\n        Repository,\n        BookingSelectors,\n    ) {\n\n    var registered = false;\n    var SELECTORS = {\n        ADVANCED_FORM: '[data-form-type=\"other\"]',\n        SAVE_BUTTON: '[data-action=\"save\"]',\n        LOADING_ICON_CONTAINER: '[data-region=\"loading-icon-container\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalLogEntryForm = function(root) {\n        Modal.call(this, root);\n        this.logentryId = null;\n        this.flightDate = null;\n        this.exerciseId = null;\n        this.courseId = null;\n        this.contextId = null;\n        this.userId = null;\n        this.p1Id = null;\n        this.pirepLookupId = null;\n        this.reloadingBody = false;\n        this.reloadingTitle = false;\n        this.saveButton = this.getFooter().find(SELECTORS.SAVE_BUTTON);\n    };\n\n    ModalLogEntryForm.TYPE = 'local_booking-modal_logentry_form';\n    ModalLogEntryForm.prototype = Object.create(Modal.prototype);\n    ModalLogEntryForm.prototype.constructor = ModalLogEntryForm;\n\n    /**\n     * Set the context id to the given value.\n     *\n     * @method setContextId\n     * @param {Number} id The context id\n     */\n    ModalLogEntryForm.prototype.setContextId = function(id) {\n        this.contextId = id;\n    };\n\n    /**\n     * Retrieve the current context id, if any.\n     *\n     * @method getContextId\n     * @return {Number|null} The context id\n     */\n    ModalLogEntryForm.prototype.getContextId = function() {\n        return this.contextId;\n    };\n\n    /**\n     * Set the course id to the given value.\n     *\n     * @method setCourseId\n     * @param {int} id The course id\n     */\n    ModalLogEntryForm.prototype.setCourseId = function(id) {\n        this.courseId = id;\n    };\n\n    /**\n     * Retrieve the current course id, if any.\n     *\n     * @method getCourseId\n     * @return {int|null} The course id\n     */\n    ModalLogEntryForm.prototype.getCourseId = function() {\n        return this.courseId;\n    };\n\n    /**\n     * Check if the modal has an course id.\n     *\n     * @method hasCourseId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasCourseId = function() {\n        return this.courseId !== null;\n    };\n\n    /**\n     * Set the exercise id to the given value.\n     *\n     * @method setExerciseId\n     * @param {int} id The exercise id\n     */\n        ModalLogEntryForm.prototype.setExerciseId = function(id) {\n        this.exerciseId = id;\n    };\n\n    /**\n     * Retrieve the current exercise id, if any.\n     *\n     * @method getExerciseId\n     * @return {int|null} The exercise id\n     */\n    ModalLogEntryForm.prototype.getExerciseId = function() {\n        return this.exerciseId;\n    };\n\n    /**\n     * Check if the modal has an exercise id.\n     *\n     * @method hasExerciseId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasExerciseId = function() {\n        return this.exerciseId !== null;\n    };\n\n    /**\n     * Set the user id to the given value.\n     *\n     * @method setUserId\n     * @param {int} id The user id\n     */\n        ModalLogEntryForm.prototype.setUserId = function(id) {\n        this.userId = id;\n    };\n\n    /**\n     * Retrieve the current user id, if any.\n     *\n     * @method getUserId\n     * @return {int|null} The user id\n     */\n    ModalLogEntryForm.prototype.getUserId = function() {\n        return this.userId;\n    };\n\n    /**\n     * Check if the modal has an user id.\n     *\n     * @method hasUserId\n     * @return {bool}\n     */\n        ModalLogEntryForm.prototype.hasUserId = function() {\n        return this.userId !== null;\n    };\n\n    /**\n     * Set the logentry id to the given value.\n     *\n     * @method setLogentryId\n     * @param {int} id The logentry id\n     */\n    ModalLogEntryForm.prototype.setLogentryId = function(id) {\n        this.logentryId = id;\n    };\n\n    /**\n     * Retrieve the current logentry id, if any.\n     *\n     * @method getLogentryId\n     * @return {int|null} The logentry id\n     */\n    ModalLogEntryForm.prototype.getLogentryId = function() {\n        return this.logentryId;\n    };\n\n    /**\n     * Check if the modal has an logentry id.\n     *\n     * @method hasLogentryId\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasLogentryId = function() {\n        return this.logentryId !== null && this.logentryId != 0;\n    };\n\n    /**\n     * Set the start time to the given value.\n     *\n     * @method setFlightDate\n     * @param {int} time The session date time\n     */\n    ModalLogEntryForm.prototype.setFlightDate = function(time) {\n        this.flightDate = time;\n    };\n\n    /**\n     * Retrieve the current start time, if any.\n     *\n     * @method getFlightDate\n     * @return {int|null} The start time\n     */\n    ModalLogEntryForm.prototype.getFlightDate = function() {\n        return this.flightDate;\n    };\n\n    /**\n     * Check if the modal has session date time.\n     *\n     * @method hasFlightDate\n     * @return {bool}\n     */\n    ModalLogEntryForm.prototype.hasFlightDate = function() {\n        return this.flightDate !== null;\n    };\n\n    /**\n     * Get the form element from the modal.\n     *\n     * @method getForm\n     * @return {object}\n     */\n    ModalLogEntryForm.prototype.getForm = function() {\n        return this.getBody().find('form');\n    };\n\n    /**\n     * Disable the buttons in the footer.\n     *\n     * @method disableButtons\n     */\n    ModalLogEntryForm.prototype.disableButtons = function() {\n        this.saveButton.prop('disabled', true);\n    };\n\n    /**\n     * Enable the buttons in the footer.\n     *\n     * @method enableButtons\n     */\n    ModalLogEntryForm.prototype.enableButtons = function() {\n        this.saveButton.prop('disabled', false);\n    };\n\n    /**\n     * Reload the title for the modal to the appropriate value\n     * depending on whether we are creating a new log book entry\n     * or editing an existing one.\n     *\n     * @method reloadTitleContent\n     * @return {object} A promise resolved with the new title text\n     */\n    ModalLogEntryForm.prototype.reloadTitleContent = function() {\n        if (this.reloadingTitle) {\n            return this.titlePromise;\n        }\n\n        this.reloadingTitle = true;\n\n        if (this.hasLogentryId()) {\n            this.titlePromise = Str.get_string('editlogentry', 'local_booking');\n        } else {\n            this.titlePromise = Str.get_string('newlogentry', 'local_booking');\n        }\n\n        this.titlePromise.then(function(string) {\n            this.setTitle(string);\n            return string;\n        }.bind(this))\n        .always(function() {\n            this.reloadingTitle = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.titlePromise;\n    };\n\n    /**\n     * Send a request to the server to get the logentry_form in a fragment\n     * and render the result in the body of the modal.\n     *\n     * If serialised form data is provided then it will be sent in the\n     * request to the server to have the form rendered with the data. This\n     * is used when the form had a server side error and we need the server\n     * to re-render it for us to display the error to the user.\n     *\n     * @method reloadBodyContent\n     * @param {string} formData The serialised form data\n     * @return {object} A promise resolved with the fragment html and js from\n     */\n    ModalLogEntryForm.prototype.reloadBodyContent = function(formData) {\n        if (this.reloadingBody) {\n            return this.bodyPromise;\n        }\n\n        this.reloadingBody = true;\n        this.disableButtons();\n\n        var args = {};\n\n        if (this.hasUserId()) {\n            args.userid = this.getUserId();\n        }\n\n        if (this.hasLogentryId()) {\n            args.logentryid = this.getLogentryId();\n        }\n\n        if (this.hasFlightDate()) {\n            args.flightdate = this.getFlightDate();\n        }\n\n        if (this.hasCourseId()) {\n            args.courseid = this.getCourseId();\n        }\n\n        if (this.hasExerciseId()) {\n            args.exerciseid = this.getExerciseId();\n        }\n\n        if (typeof formData !== 'undefined') {\n            args.formdata = formData;\n        }\n\n        // Get the content of the modal\n        this.bodyPromise = Fragment.loadFragment('local_booking', 'logentry_form', this.getContextId(), args);\n\n        this.setBody(this.bodyPromise);\n\n        this.bodyPromise.then(function() {\n            // Hide/show elements set training type\n            this.p1Id = $('#id_p1id').val();\n            this.applyFlightOpsDefaults();\n            this.enableButtons();\n            this.setInputMask();\n            this.registerChangeListeners();\n\n            return;\n        }.bind(this))\n        .fail(Notification.exception)\n        .always(function() {\n            this.reloadingBody = false;\n            return;\n        }.bind(this))\n        .fail(Notification.exception);\n\n        return this.bodyPromise;\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method setInputMask\n     */\n    ModalLogEntryForm.prototype.setInputMask = function() {\n        // Mask flight times < 5hrs and departure/arrival times to 24hr format\n        if ($(BookingSelectors.bookingwrapper).data('trainingtype') == \"Dual\") {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_dualtime\"));\n        } else {\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_multipilottime\"));\n            Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_copilottime\"));\n        }\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_groundtime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_pictime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_instructortime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_picustime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_checkpilottime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_deptime\"));\n        Inputmask({\"regex\": \"^([01]?[0-9]|2[0-3]):[0-5][0-9]\"}).mask(document.getElementById(\"id_arrtime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_nighttime\"));\n        Inputmask({\"regex\": \"^([0]?[0-4]):([0-5]?[0-9])$\"}).mask(document.getElementById(\"id_ifrtime\"));\n        Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1day\"));\n        Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp1night\"));\n    // Check for new logentries noting landings of both instructor and student\n        if (this.getLogentryId() == 0) {\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2day\"));\n            Inputmask({\"regex\": \"[0-9]\"}).mask(document.getElementById(\"id_landingsp2night\"));\n        }\n    };\n\n    /**\n     * Sets the input mask for all masked elements.\n     *\n     * @method registerChangeListeners\n     */\n    ModalLogEntryForm.prototype.registerChangeListeners = function() {\n\n        // PIREP search trigger\n        var pirep = $('#id_p1pirep');\n        pirep.on('change', function(e) {\n            if (!isNaN(pirep.val())) {\n                return this.getPIREPData(e);\n            }\n        }.bind(this));\n\n        // Hide unnecessary elements for Solo flights when checkbox is clicked\n        var flighttype = $('input[name=\"flighttype\"]');\n        flighttype.on('change', function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this));\n\n        // Hide unnecessary elements for Solo flights when checkbox is clicked\n        var passfail = $('input[name=\"passfail\"]');\n        passfail.on('change', function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this));\n\n        // The onchange property has to be set due to the pictime element being masked\n        pictime = document.getElementById(\"id_pictime\");\n        pictime.onchange = function() {\n            return this.applyFlightOpsDefaults();\n        }.bind(this);\n    };\n\n    /**\n     * Retrieve and populate log entry data from\n     * the server's PIREP lookup service.\n     *\n     * @method getPIREPData\n     * @param  {object} e The triggered event\n     * @return {object} pirep of the logentry\n     */\n     ModalLogEntryForm.prototype.getPIREPData = function(e) {\n        var loadingContainer = this.getFooter().find(SELECTORS.LOADING_ICON_CONTAINER);\n        rule = $(BookingSelectors.bookingwrapper).data('trainingtype');\n        pirepdiv = $('#id_p1pirep').parent();\n        pirep = $('#id_p1pirep').val();\n        courseid = this.getCourseId();\n\n        if (pirep != '') {\n            loadingContainer.removeClass('hidden');\n            return Repository.findPirep(pirep, courseid, $('#id_p1id').val())\n                .then(function(response) {\n                    // Handle the response\n                    if (response.result) {\n                        // Clean up any past client side errors\n                        $('#id_p1pirep').removeClass('is-invalid');\n                        if (!$('#id_valid_p1pirep').length) {\n                            Str.get_string('pirepfound', 'local_booking').then(function(string) {\n                                pirepdiv.append('<div class=\"form-control-feedback valid-feedback\" id=\"id_valid_p1pirep\" ' +\n                                'tabindex=\"0\" style=\"\">' + string + '</div');\n                                $('#id_p1pirep').addClass('is-valid');\n                                return string;\n                            })\n                            .fail(Notification.exception);\n                        }\n\n                        // Update elements with PIREP returned data depending on\n                        // solo flight status and flight rule (Dual/Multicrew)\n                        var d = new Date(response.logentry.flightdate * 1000),\n                            month = '' + (d.getMonth() + 1),\n                            day = '' + d.getDate(),\n                            year = d.getFullYear(),\n                            time = response.logentry.deptime,\n                            hour = time.substring(0, 2),\n                            minute = time.substring(time.indexOf(':') + 1, time.length);\n                        $('#id_flightdate_day').val(day);\n                        $('#id_flightdate_month').val(month);\n                        $('#id_flightdate_year').val(year);\n                        $('#id_flightdate_hour').val(hour);\n                        $('#id_flightdate_minute').val(minute);\n                        if (rule == 'Dual') {\n                            $('#id_dualtime').val(response.logentry.pictime);\n                        } else if (rule == 'Multicrew') {\n                            $('#id_multipilottime').val(response.logentry.pictime);\n                            $('#id_copilottime').val(response.logentry.pictime);\n                            $('#id_ifrtime').val(response.logentry.pictime);\n                        }\n                        $('input[name=\"linkedpirep\"]').val(response.logentry.linkedpirep);\n                        $('#id_pictime').val(response.logentry.pictime);\n                        $('#id_depicao').val(response.logentry.depicao);\n                        $('#id_arricao').val(response.logentry.arricao);\n                        $('#id_deptime').val(response.logentry.deptime);\n                        $('#id_arrtime').val(response.logentry.arrtime);\n                        $('#id_callsign').val(response.logentry.callsign);\n                        $('#id_aircraft').val(response.logentry.aircraft);\n                        $('#id_aircraftreg').val(response.logentry.aircraftreg);\n                        $('#id_enginetype').val(response.logentry.enginetype);\n                        $('#id_route').val(response.logentry.route);\n                        $('#id_fstd').val(response.logentry.fstd);\n                        if ($(\"input[name='flighttype']:checked\").val() == 'check') {\n                            $('#id_picustime').val(response.logentry.pictime);\n                            $('#id_checkpilottime').val(response.logentry.pictime);\n                        } else {\n                            $('#id_instructortime').val(response.logentry.pictime);\n                        }\n                    } else {\n                        // Display inline error\n                        $('#id_p1pirep').addClass('is-invalid');\n                        if (!$('#id_error2_p1pirep').length) {\n                            pirepdiv.append('<div class=\"form-control-feedback invalid-feedback\" id=\"id_error2_p1pirep\" ' +\n                                'tabindex=\"0\" style=\"\">' + response.warnings[0].message + '</div');\n                            $('#id_p1pirep').val('');\n                            $('#id_p1pirep').focus();\n                        } else {\n                            $('#id_error2_p1pirep').show();\n                        }\n                    }\n\n                    return;\n                })\n                .always(function() {\n                    // Regardless of success or error we should always stop\n                    // the loading icon and re-enable the buttons.\n                    loadingContainer.addClass('hidden');\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    return;\n                })\n                .fail(Notification.exception);\n        } else {\n            return '';\n        }\n    };\n\n    /**\n     * Apply default values set flight operation\n     * Dual vs Multicrew taking solo flights in conisderation\n     *\n     * @method applyFlightOpsDefaults\n     * @param  {object} e The triggered event\n     * @param  {string} rule The rule to be applied\n     */\n     ModalLogEntryForm.prototype.applyFlightOpsDefaults = function() {\n\n        rule = $(BookingSelectors.bookingwrapper).data('trainingtype');\n        var flighttime = $('#id_pictime').val();\n        var flighttype = $(\"input[name='flighttype']:checked\").val(),\n            passfail = $(\"input[name='passfail']:checked\").val(),\n            editmode = this.getLogentryId() != 0,\n            nopirep = $('#id_p1pirep').val() == '';\n\n        // Toggle the display of elements depending on flight type\n        var toggle = function(div, element, show, value) {\n            if (show) {\n                $(div).slideDown('fast');\n            } else {\n                $(div).slideUp('fast');\n            }\n            // Process the passed value\n            if (typeof value !== 'undefined') {\n                reset(element, show, value);\n            }\n        };\n\n        // Set the value of the element depending on the display type\n        var reset = function(element, show, value) {\n            // Set the element value if not manual PIREP entry\n            if (show && !nopirep) {\n                if ((!$(element).val() || !$(element).val() == 0) && !editmode) {\n                    $(element).val('');\n                }\n            } else {\n                $(element).val(value);\n            }\n        };\n\n        // Check the training rule type\n        if (flighttype == 'training' || (flighttype == 'check' && passfail == 'fail')) {\n            // Set P1 id and label for instructor, and handle edit mode\n            $(\"label[for='id_p1pirep']\").text(editmode ? 'PIREP' : 'Instructor PIREP');\n            $('#id_p1id').val(this.p1Id);\n\n            // Toggle P2 dropdown if the flight is not a solo flight\n            toggle('#fitem_id_p2id', '#id_p2id', flighttype != 'solo');\n\n            // Toggle pass/fail options if the flight is a check flight\n            toggle('#fgroup_id_passfail', '#id_passfail', flighttype == 'check');\n\n            // Toggle dual time for Dual training and not an instructor edit mode set saved value\n            toggle('#fitem_id_dualtime', '#id_dualtime', rule == 'Dual' && (!editmode ||\n                (editmode && $('#id_dualtime').val() != '')), rule == 'Dual' ? flighttime : 0);\n\n            // Toggle PIC time in new and edit instructor unless if it's manual entry (no PIREP)\n            if (nopirep) {\n                toggle('#fitem_id_pictime', '#id_pictime', (!editmode || (editmode &&\n                    $('#id_pictime').val() != '')), editmode || flighttype == 'check' ? 0 : flighttime);\n            }\n\n            // Toggle instructor time in new and edit instructor\n            toggle('#fitem_id_instructortime', '#id_instructortime', ((!editmode && flighttype != 'check') || (editmode &&\n                $('#id_instructortime').val() != '')), editmode || flighttype == 'check' ? 0 : flighttime);\n\n            // Toggle ground time for training flight types only\n            toggle('#fitem_id_groundtime', '#id_groundtime', flighttype == 'training', (nopirep ? $('#id_groundtime').val() : 0));\n\n            // Toggle for multicrew flights and default the value for multicrew flights\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew', rule == 'Multicrew' ? flighttime : 0);\n\n            // Toggle copilot time for multicrew flights, and set default in multicrew\n            toggle('#fitem_id_copilottime', '#id_copilottime', rule == 'Multicrew' && (!editmode ||\n                (editmode && $('#id_copilottime').val() != '')), rule == 'Multicrew' ? flighttime : 0);\n\n            // Toggle off PICUS time for non passed check flights, and set default in multicrew\n            toggle('#fitem_id_picustime', '#id_picustime', false, 0);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false, 0);\n\n        } else if (flighttype == 'solo') {\n            // Set P1 id and label for student solo flight, and handle edit mode\n            $(\"label[for='id_p1pirep']\").text(editmode ? 'PIREP' : 'Solo PIREP');\n            $('#id_p1id').val($('#id_p2id').val());\n\n            // Toggle display of solo flight\n            toggle('#fitem_id_p2id', '#id_p2id', false);\n            toggle('#fgroup_id_passfail', '#id_passfail', false);\n            toggle('#fitem_id_dualtime', '#id_dualtime', false, 0);\n            toggle('#fitem_id_instructortime', '#id_instructortime', false, 0);\n            toggle('#fitem_id_groundtime', '#id_groundtime', false, 0);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', false, 0);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false, 0);\n            toggle('#fitem_id_picustime', '#id_picustime', false, 0);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', false, 0);\n\n            // Toggle landings and set to default to 1 for P1\n            toggle('#fgroup_id_landingsp2', '#id_landingsp2', false);\n            $('#id_landingsp1day').val('1');\n            $('#id_landingsp2day').val('0');\n\n        } else if (flighttype == 'check' || passfail == 'pass') {\n            // Set P1 id and label for instructor, and handle edit mode\n            $(\"label[for='id_p1pirep']\").text(editmode ? 'PIREP' : 'Instructor PIREP');\n            $('#id_p1id').val(this.p1Id);\n\n            // Toggle display of check flight\n            toggle('#fitem_id_p2id', '#id_p2id', true);\n            toggle('#fgroup_id_passfail', '#id_passfail', true);\n            toggle('#fitem_id_dualtime', '#id_dualtime', false, 0);\n            // Toggle PIC time in new and edit instructor\n            toggle('#fitem_id_pictime', '#id_pictime', (!editmode || (editmode &&\n                $('#id_pictime').val() != '')), 0);\n            toggle('#fitem_id_instructortime', '#id_instructortime', false, 0);\n            toggle('#fitem_id_groundtime', '#id_groundtime', false, 0);\n            toggle('#fitem_id_multipilottime', '#id_multipilottime', rule == 'Multicrew', 0);\n            toggle('#fitem_id_copilottime', '#id_copilottime', false, 0);\n            toggle('#fitem_id_picustime', '#id_picustime', (!editmode || (editmode &&\n                $('#id_picustime').val() != '')), flighttime);\n            toggle('#fitem_id_checkpilottime', '#id_checkpilottime', (!editmode || (editmode &&\n                $('#id_checkpilottime').val() != '')), flighttime);\n        }\n    };\n\n    /**\n     * Reload both the title and body content.\n     *\n     * @method reloadAllContent\n     * @return {object} promise\n     */\n    ModalLogEntryForm.prototype.reloadAllContent = function() {\n        return $.when(this.reloadTitleContent(), this.reloadBodyContent());\n    };\n\n    /**\n     * Kick off a reload the modal content before showing it. This\n     * is to allow us to re-use the same modal for creating and\n     * editing different log book entries within the booking view page.\n     *\n     * We do the reload when showing the modal rather than hiding it\n     * to save a request to the server if the user closes the modal\n     * and never re-opens it.\n     *\n     * @method show\n     */\n    ModalLogEntryForm.prototype.show = function() {\n        this.reloadAllContent();\n        Modal.prototype.show.call(this);\n    };\n\n    /**\n     * Clear the logentry id from the modal when it's closed so\n     * that it is loaded fresh next time it's displayed.\n     *\n     * The logentry id will be set by the calling code if it wants\n     * to edit a specific log entry.\n     *\n     * @method hide\n     */\n    ModalLogEntryForm.prototype.hide = function() {\n        Modal.prototype.hide.call(this);\n        this.setLogentryId(null);\n        this.setFlightDate(null);\n        this.setContextId(null);\n        this.setCourseId(null);\n        this.setExerciseId(null);\n    };\n\n    /**\n     * Get the serialised form data.\n     *\n     * @method getFormData\n     * @return {string} serialised form data\n     */\n    ModalLogEntryForm.prototype.getFormData = function() {\n        return this.getForm().serialize();\n    };\n\n    /**\n     * Send the form data to the server to create or update\n     * a log book entry.\n     *\n     * If there is a server side validation error then we re-request the\n     * rendered form (with the data) from the server in order to get the\n     * server side errors to display.\n     *\n     * On success the modal is hidden and the page is reloaded so that the\n     * new log book entry will display in the booking view user tooltip.\n     *\n     * @method save\n     * @return {object} A promise\n     */\n    ModalLogEntryForm.prototype.save = function() {\n        var invalid,\n            loadingContainer = this.saveButton.find(SELECTORS.LOADING_ICON_CONTAINER);\n\n        // Now the change events have run, see if there are any \"invalid\" form fields.\n        invalid = this.getForm().find('[aria-invalid=\"true\"]');\n\n        // If we found invalid fields, focus on the first one and do not submit via ajax.\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        loadingContainer.removeClass('hidden');\n        this.disableButtons();\n\n        var formData = this.getFormData();\n        var formArgs = 'contextid=' + this.contextId + '&courseid=' + this.courseId\n            + '&exerciseid=' + this.exerciseId + '&userid=' + this.userId;\n\n        // Send the form data to the server for processing.\n        // eslint-disable-next-line consistent-return\n        return Repository.submitCreateUpdateLogentryForm(formArgs, formData)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // If there was a server side validation error then\n                    // we need to re-request the rendered form from the server\n                    // in order to display the error for the user.\n                    this.reloadBodyContent(formData);\n                    return;\n                } else {\n                    // Check whether this was a new logbook entry or not.\n                    // check if the logentry is from the prgression view\n                    // logentry from the confirmation view\n                    // The hide function unsets the form data so grab this before the hide.\n                    var isExisting = this.hasLogentryId();\n\n                    // No problemo! Our work here is done.\n                    this.hide();\n\n                    // Trigger the appropriate logbook event so that the view can be updated.\n                    if (isExisting) {\n                        $('body').trigger(LogbookEvents.updated, [response.logentry]);\n                    } else {\n                        $('body').trigger(LogbookEvents.created, [response.logentry]);\n                    }\n                }\n\n                return;\n            }.bind(this))\n            .always(function() {\n                // Regardless of success or error we should always stop\n                // the loading icon and re-enable the buttons.\n                loadingContainer.addClass('hidden');\n                Notification.fetchNotifications();\n                this.enableButtons();\n\n                return;\n            }.bind(this))\n            .fail(Notification.exception);\n        };\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalLogEntryForm.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        // When the user clicks the save button we trigger the form submission. We need to\n        // trigger an actual submission because there is some JS code in the form that is\n        // listening for this event and doing some stuff (e.g. saving draft areas etc).\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function(e, data) {\n            this.getForm().submit();\n            data.originalEvent.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n\n        // Catch the submit event before it is actually processed by the browser and\n        // prevent the submission. We'll take it from here.\n        this.getModal().on('submit', function(e) {\n            Event.notifyFormSubmitAjax(this.getForm()[0]);\n\n            this.save();\n\n            // Stop the form from actually submitting and prevent it's\n            // propagation because we have already handled the event.\n            e.preventDefault();\n            e.stopPropagation();\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalLogEntryForm.TYPE, ModalLogEntryForm, 'local_booking/modal_logentry_form');\n        registered = true;\n    }\n\n    return ModalLogEntryForm;\n});\n"],"file":"modal_logentry_form.min.js"}