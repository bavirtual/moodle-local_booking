define("local_booking/modal_logentry_summary",["exports","jquery","core/custom_interaction_events","core/modal","core/modal_events","local_booking/modal_actions","local_booking/events"],(function(_exports,_jquery,CustomEvents,_modal,ModalEvents,ModalActions,BookingEvents){function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n.default=e,t&&t.set(e,n),n}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}
/**
   * A javascript module to handle summary modal.
   * Improvised from core_calendar.
   *
   * @module     local_booking/modal_logentry_summary
   * @author     Mustafa Hajjar (mustafahajjar@gmail.com)
   * @copyright  BAVirtual.co.uk Â© 2021
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_jquery=_interopRequireDefault(_jquery),CustomEvents=_interopRequireWildcard(CustomEvents),_modal=_interopRequireDefault(_modal),ModalEvents=_interopRequireWildcard(ModalEvents),ModalActions=_interopRequireWildcard(ModalActions),BookingEvents=_interopRequireWildcard(BookingEvents);const SELECTORS_ROOT="[data-region='summary-modal-container']",SELECTORS_ADD_BUTTON='[data-action="add"]',SELECTORS_EDIT_BUTTON='[data-action="edit"]',SELECTORS_DELETE_BUTTON='[data-action="delete"]',SELECTORS_FEEDBACK_BUTTON='[data-action="feedback"]';class ModalEventSummary extends _modal.default{static TEMPLATE="local_booking/logentry_summary_modal";static TYPE="local_booking-logentry_summary";getFeedbackButton(){return void 0===this.feedbackButton&&(this.feedbackButton=this.getFooter().find(SELECTORS_FEEDBACK_BUTTON)),this.feedbackButton}getAddButton(){return void 0===this.addButton&&(this.addButton=this.getFooter().find(SELECTORS_ADD_BUTTON)),this.addButton}getEditButton(){return void 0===this.editButton&&(this.editButton=this.getFooter().find(SELECTORS_EDIT_BUTTON)),this.editButton}getDeleteButton(){return void 0===this.deleteButton&&(this.deleteButton=this.getFooter().find(SELECTORS_DELETE_BUTTON)),this.deleteButton}getLogentryId(){return this.getBody().find(SELECTORS_ROOT).attr("data-logentry-id")}getUserId(){return this.getBody().find(SELECTORS_ROOT).attr("data-user-id")}getExerciseId(){return this.getBody().find(SELECTORS_ROOT).attr("data-exercise-id")}getSessionId(){return this.getBody().find(SELECTORS_ROOT).attr("data-session-id")}getFlightDate(){return this.getBody().find(SELECTORS_ROOT).attr("data-flight-date")}getLogentryTitle(){return this.getBody().find(SELECTORS_ROOT).attr("data-logentry-title")}registerEventListeners(){super.registerEventListeners(this),M.util.js_pending("local_booking/modal_logentry_summary:registerEventListeners:bodyRendered"),this.getRoot().on(ModalEvents.bodyRendered,function(){this.getModal().data({logentryTitle:this.getLogentryTitle(),logentryId:this.getLogentryId()}).attr("data-type","logentry"),ModalActions.registerDelete(this.getModal()),ModalActions.registerRedirect(this.getModal()),M.util.js_complete("local_booking/modal_logentry_summary:registerEventListeners:bodyRendered")}.bind(this)),(0,_jquery.default)("body").on(BookingEvents.logentrydeleted,function(){this.hide()}.bind(this)),(0,_jquery.default)("body").on(BookingEvents.gotoFeedback,function(){this.hide()}.bind(this)),CustomEvents.define(this.getAddButton(),[CustomEvents.events.activate]),CustomEvents.define(this.getEditButton(),[CustomEvents.events.activate]),this.getAddButton().on(CustomEvents.events.activate,function(e,data){(0,_jquery.default)("body").trigger(BookingEvents.addLogentry,[this.getUserId()]),this.hide(),e.preventDefault(),e.stopPropagation(),data.originalEvent.preventDefault(),data.originalEvent.stopPropagation()}.bind(this)),this.getEditButton().on(CustomEvents.events.activate,function(e,data){(0,_jquery.default)("body").trigger(BookingEvents.editLogentry,[this.getUserId(),this.getLogentryId()]),this.hide(),e.preventDefault(),e.stopPropagation(),data.originalEvent.preventDefault(),data.originalEvent.stopPropagation()}.bind(this))}}return _exports.default=ModalEventSummary,ModalEventSummary.registerModalType(),_exports.default}));

//# sourceMappingURL=modal_logentry_summary.min.js.map