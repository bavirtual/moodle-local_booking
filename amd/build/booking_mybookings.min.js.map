{"version":3,"file":"booking_mybookings.min.js","sources":["../src/booking_mybookings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module is responsible for registering listeners\n * for the instructor's 'My bookings' events.\n *\n * @module     local_booking/booking_mybookings\n * @author     Mustafa Hajjar (mustafa.hajjar)\n * @copyright  BAVirtual.co.uk Â© 2024\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n        'jquery',\n        'core/str',\n        'core/notification',\n        'core/pending',\n        'local_booking/booking_view_manager',\n        'local_booking/booking_actions',\n        'local_booking/events',\n        'local_booking/selectors'\n    ],\n    function(\n        $,\n        Str,\n        Notification,\n        Pending,\n        ViewManager,\n        BookingActions,\n        BookingEvents,\n        Selectors\n    ) {\n\n    /**\n     * Listen to and handle any logentry events fired by\n     * Logentry and PIREP the modal forms.\n     *\n     * @method registerMyBookingsEventListeners\n     * @param  {object} root The booking root element\n     */\n    const registerMyBookingsEventListeners = function(root) {\n        const body = $('body');\n\n        body.on(BookingEvents.bookingcanceled, function() {\n            ViewManager.refreshInstructorBookingsContent(root);\n        });\n\n        // Listen to the click on the Cancel booking buttons in 'Instructor dashboard' page.\n        root.on('click', Selectors.regions.cancelbutton, function(e) {\n            const pendingPromise = new Pending('local_booking/registerCancelBookingForm');\n\n            // Render the cancel booking confirmation modal form\n            ViewManager.renderCancelBookingConfirmation(e)\n            .then(pendingPromise.resolve())\n            .catch(e);\n\n        });\n\n        // Listen to the click on the 'No-show' booking buttons in 'Instructor dashboard' page.\n        root.on('click', Selectors.regions.noshowbutton, function(e) {\n            // Get number of no shows\n            const noshows = $(e.target).closest(Selectors.regions.noshowbutton).data('noshows');\n            // Get the message associated with the number of no-show occurence\n            const noShowComment = Str.get_string('commentnoshow' + noshows, 'local_booking').then(function(noshowMsg) {\n                return noshowMsg;\n            }).catch(Notification.exception);\n            // Chain the two retrieved strings in the prompt\n            $.when(Str.get_string('commentnoshow', 'local_booking'), noShowComment)\n            .then(function(promptMsg, noshowMsg) {\n                // eslint-disable-next-line no-alert\n                if (window.confirm(promptMsg + '\\n\\n' + noshowMsg)) {\n                    BookingActions.cancelBooking(root, e);\n                }\n                return;\n            }).catch(Notification.exception);\n        });\n    };\n\n    return {\n        init: function(rt) {\n            var root = $(rt);\n            registerMyBookingsEventListeners(root);\n        }\n    };\n});\n"],"names":["define","$","Str","Notification","Pending","ViewManager","BookingActions","BookingEvents","Selectors","init","rt","root","on","bookingcanceled","refreshInstructorBookingsContent","regions","cancelbutton","e","pendingPromise","renderCancelBookingConfirmation","then","resolve","catch","noshowbutton","noshows","target","closest","data","noShowComment","get_string","noshowMsg","exception","when","promptMsg","window","confirm","cancelBooking","registerMyBookingsEventListeners"],"mappings":";;;;;;;;;AAyBAA,0CAAO,CACC,SACA,WACA,oBACA,eACA,qCACA,gCACA,uBACA,4BAEJ,SACIC,EACAC,IACAC,aACAC,QACAC,YACAC,eACAC,cACAC,iBAgDG,CACHC,KAAM,SAASC,KAvCsB,SAASC,MACjCV,EAAE,QAEVW,GAAGL,cAAcM,iBAAiB,WACnCR,YAAYS,iCAAiCH,SAIjDA,KAAKC,GAAG,QAASJ,UAAUO,QAAQC,cAAc,SAASC,SAChDC,eAAiB,IAAId,QAAQ,2CAGnCC,YAAYc,gCAAgCF,GAC3CG,KAAKF,eAAeG,WACpBC,MAAML,MAKXN,KAAKC,GAAG,QAASJ,UAAUO,QAAQQ,cAAc,SAASN,SAEhDO,QAAUvB,EAAEgB,EAAEQ,QAAQC,QAAQlB,UAAUO,QAAQQ,cAAcI,KAAK,WAEnEC,cAAgB1B,IAAI2B,WAAW,gBAAkBL,QAAS,iBAAiBJ,MAAK,SAASU,kBACpFA,aACRR,MAAMnB,aAAa4B,WAEtB9B,EAAE+B,KAAK9B,IAAI2B,WAAW,gBAAiB,iBAAkBD,eACxDR,MAAK,SAASa,UAAWH,WAElBI,OAAOC,QAAQF,UAAY,OAASH,YACpCxB,eAAe8B,cAAczB,KAAMM,MAGxCK,MAAMnB,aAAa4B,cAOtBM,CADWpC,EAAES"}