/**
 * This module is responsible for registering listeners
 * for logbook std view events.
 *
 * @module     local_booking/logbook_std
 * @author     Mustafa Hajjar (mustafahajjar@gmail.com)
 * @copyright  BAVirtual.co.uk Â© 2023
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_booking/logbook_std",["jquery","core/str","core/pending","core/modal_factory","core/templates","core/notification","local_booking/booking_view_manager","local_booking/modal_actions","local_booking/events","local_booking/modal_logentry_form","local_booking/repository","local_booking/selectors"],(function($,Str,Pending,ModalFactory,Templates,Notification,ViewManager,ModalActions,BookingEvents,ModalLogentryEditForm,Repository,Selectors){var refreshLogbookContent=function(root,logentry){var card=$("#cardid_"+logentry.id);showPlaceholder(card);var courseId=$(Selectors.logbookwrapper).data("courseid"),userId=$(Selectors.logbookwrapper).data("userid");return M.util.js_pending(root.get("id")+"-"+courseId),Repository.getLogentryById(logentry.id,courseId,userId).then((function(context){return Templates.render("local_booking/logbook_std_detail",context.logentry)})).then((function(html,js){return Templates.replaceNode(card,html,js)})).always((function(){return M.util.js_complete(root.get("id")+"-"+courseId),showContent(card)})).fail(Notification.exception)},registerLogentryEditForm=function(root,e,contextId,courseId,userId,logentryId){var LogentryFormPromise=ModalFactory.create({type:ModalLogentryEditForm.TYPE,large:!0}),target=e.target,pendingPromise=new Pending("local_booking/registerLogentryEditForm");ViewManager.renderLogentryModal(root,e,LogentryFormPromise,target,contextId,courseId,userId,logentryId,!1,"local_booking/logbook_std").then(pendingPromise.resolve()).catch()},showPlaceholder=function(card){card.find(Selectors.containers.loadingPlaceholder).removeClass("hidden"),card.find(Selectors.containers.content).addClass("hidden")},showContent=function(card){card.find(Selectors.containers.content).removeClass("hidden"),card.find(Selectors.containers.loadingPlaceholder).addClass("hidden")};return{init:function(root){!function(root){$("body").on(BookingEvents.logentryupdated,(function(e,logentry){refreshLogbookContent(root,logentry)})),$("body").on(BookingEvents.logentrydeleted,(function(e,logentryid){$("#logentry_"+logentryid).slideUp(300),e.stopImmediatePropagation()}));var contextId=$(Selectors.logbookwrapper).data("contextid"),courseId=$(Selectors.logbookwrapper).data("courseid"),userId=$(Selectors.logbookwrapper).data("userid");contextId&&root.on("click",Selectors.actions.edit,(function(e){var logentryId=e.target.closest(Selectors.containers.summaryForm).dataset.logentryId;e.preventDefault(),e.stopPropagation(),registerLogentryEditForm(root,e,contextId,courseId,userId,logentryId),e.stopImmediatePropagation()}))}(root=$(root)),ModalActions.registerDelete(root),ViewManager.stopLoading(root)}}}));

//# sourceMappingURL=logbook_std.min.js.map