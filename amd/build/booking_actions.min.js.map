{"version":3,"sources":["../src/booking_actions.js"],"names":["define","$","Str","Notification","CustomEvents","Modal","ModalRegistry","ModalFactory","ModalEvents","Pending","ModalLogentryForm","Repository","BookingSessions","ModalDelete","BookingSelectors","ViewManager","gotoFeedback","root","LogentrySource","find","logentryitem","courseId","exerciseId","sessionPassed","userId","data","trigger","location","href","M","cfg","wwwroot","cancelBooking","e","comment","startLoading","target","bookingwrapper","bookingId","dataset","bookingid","then","response","validationerror","alert","get_string","always","canceled","fetchNotifications","stopLoading","fail","exception"],"mappings":"AAwBAA,OAAM,iCAAC,CACH,QADG,CAEH,UAFG,CAGH,mBAHG,CAIH,gCAJG,CAKH,YALG,CAMH,qBANG,CAOH,oBAPG,CAQH,mBARG,CASH,cATG,CAUH,mCAVG,CAWH,0BAXG,CAYH,sBAZG,CAaH,4BAbG,CAcH,yBAdG,CAeH,oCAfG,CAAD,CAiBN,SACIC,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CANJ,CAOIC,CAPJ,CAQIC,CARJ,CASIC,CATJ,CAUIC,CAVJ,CAWIC,CAXJ,CAYIC,CAZJ,CAaIC,CAbJ,CAcIC,CAdJ,CAeIC,CAfJ,CAgBE,CA4DE,MAAO,CACHC,YAAY,CAnBI,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAU,CAE1B,GAAIC,CAAAA,CAAc,CAAGD,CAAI,CAACE,IAAL,CAAUL,CAAgB,CAACM,YAA3B,CAArB,CACIC,CADJ,CACcC,CADd,CAC0BC,CAD1B,CACyCC,CADzC,CAGAH,CAAQ,CAAGH,CAAc,CAACO,IAAf,CAAoB,UAApB,CAAX,CACAH,CAAU,CAAGJ,CAAc,CAACO,IAAf,CAAoB,YAApB,CAAb,CACAF,CAAa,CAAG,CAAhB,CACAC,CAAM,CAAGN,CAAc,CAACO,IAAf,CAAoB,QAApB,CAAT,CAGAxB,CAAC,CAAC,MAAD,CAAD,CAAUyB,OAAV,CAAkBd,CAAe,CAACI,YAAlC,CAAgD,CAACM,CAAD,CAAhD,EAGAK,QAAQ,CAACC,IAAT,CAAgBC,CAAC,CAACC,GAAF,CAAMC,OAAN,CAAgB,qCAAhB,CAAwDV,CAAxD,CACR,SADQ,CACIC,CADJ,CACiB,mBADjB,CACuCE,CADvC,CACgD,UADhD,CAC6DD,CAChF,CAEM,CAEHS,aAAa,CAnDG,QAAhBA,CAAAA,aAAgB,CAACf,CAAD,CAAOgB,CAAP,CAAUC,CAAV,CAAsB,CACtCnB,CAAW,CAACoB,YAAZ,CAAyBlB,CAAzB,EADsC,GAGlCmB,CAAAA,CAAM,CAAGH,CAAC,CAACG,MAHuB,CAKhCf,CAAQ,CAAGA,CAAQ,EAAIJ,CAAI,CAACE,IAAL,CAAUL,CAAgB,CAACuB,cAA3B,EAA2CZ,IAA3C,CAAgD,UAAhD,CALS,CAMhCa,CAAS,CAAGF,CAAM,CAACG,OAAP,CAAeC,SANK,CAStC,MAAO7B,CAAAA,CAAU,CAACqB,aAAX,CAAyBM,CAAzB,CAAoCJ,CAApC,EACFO,IADE,CACG,SAASC,CAAT,CAAmB,CACrB,GAAIA,CAAQ,CAACC,eAAb,CAA8B,CAE1BC,KAAK,CAAC1C,CAAG,CAAC2C,UAAJ,CAAe,qBAAf,CAAsC,eAAtC,CAAD,CACR,CAEJ,CAPE,EAQFC,MARE,CAQK,UAAW,CACf7C,CAAC,CAAC,MAAD,CAAD,CAAUyB,OAAV,CAAkBd,CAAe,CAACmC,QAAlC,CAA4C,CAAC9B,CAAD,IAA5C,EACAd,CAAY,CAAC6C,kBAAb,GACAjC,CAAW,CAACkC,WAAZ,CAAwBhC,CAAxB,CACH,CAZE,EAaFiC,IAbE,CAaG/C,CAAY,CAACgD,SAbhB,CAcV,CA0BM,CAIV,CAjGK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module handles session booking and logentry operations\n * including CRUD and UI events.\n *\n * @module     local_booking/booking_actions\n * @author     Mustafa Hajjar (mustafahajjar@gmail.com)\n * @copyright  BAVirtual.co.uk Â© 2021\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/str',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/modal',\n    'core/modal_registry',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/pending',\n    'local_booking/modal_logentry_form',\n    'local_booking/repository',\n    'local_booking/events',\n    'local_booking/modal_delete',\n    'local_booking/selectors',\n    'local_booking/booking_view_manager',\n],\nfunction(\n    $,\n    Str,\n    Notification,\n    CustomEvents,\n    Modal,\n    ModalRegistry,\n    ModalFactory,\n    ModalEvents,\n    Pending,\n    ModalLogentryForm,\n    Repository,\n    BookingSessions,\n    ModalDelete,\n    BookingSelectors,\n    ViewManager,\n) {\n\n    /**\n     * Cancel a specific booking and trigger update UI event.\n     *\n     * @method  cancelBooking\n     * @param   {object} root     The My Bookings root element\n     * @param   {object} e        The click event on the Cancel button\n     * @param   {string} comment  The click event on the Cancel button\n     * @return  {object} The create modal promise\n     */\n    var cancelBooking = (root, e, comment) => {\n        ViewManager.startLoading(root);\n\n        var target = e.target;\n        // Get course id and booking id\n        const courseId = courseId || root.find(BookingSelectors.bookingwrapper).data('courseid');\n        const bookingId = target.dataset.bookingid;\n\n        // Send the request data to the server for processing.\n        return Repository.cancelBooking(bookingId, comment)\n            .then(function(response) {\n                if (response.validationerror) {\n                    // eslint-disable-next-line no-alert\n                    alert(Str.get_string('errorlogentrycancel', 'local_booking'));\n                }\n                return;\n            })\n            .always(function() {\n                $('body').trigger(BookingSessions.canceled, [root, false]);\n                Notification.fetchNotifications();\n                ViewManager.stopLoading(root);\n            })\n            .fail(Notification.exception);\n    };\n\n    /**\n     * Redirect to exercise (assignment) grading page.\n     *\n     * @method  gotoFeedback\n     * @param   {jQuery} root\n     */\n     var gotoFeedback = (root) => {\n        // Fetch the exercise and user id and redirect to assignment submission & grading\n        let LogentrySource = root.find(BookingSelectors.logentryitem),\n            courseId, exerciseId, sessionPassed, userId;\n\n        courseId = LogentrySource.data('courseId');\n        exerciseId = LogentrySource.data('exerciseId');\n        sessionPassed = 1;\n        userId = LogentrySource.data('userId');\n\n        // Trigger redirect to feedback\n        $('body').trigger(BookingSessions.gotoFeedback, [exerciseId]);\n\n        // Redirect to the grading and feedback page\n        location.href = M.cfg.wwwroot + '/local/booking/assign.php?courseid=' + courseId +\n                '&exeid=' + exerciseId + '&rownum=0&userid=' + userId + '&passed=' + sessionPassed;\n    };\n\n    return {\n        gotoFeedback: gotoFeedback,\n        cancelBooking: cancelBooking\n    };\n});\n"],"file":"booking_actions.min.js"}